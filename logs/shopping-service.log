time=2025-09-06T15:31:49.719+02:00 level=INFO msg="Telegram admin users configured" env=local count=1
time=2025-09-06T15:31:49.719+02:00 level=INFO msg="Telegram bot initialized" env=local bot_enabled=true
time=2025-09-06T15:31:49.720+02:00 level=INFO msg="Starting HTTP server" env=local address=0.0.0.0:3001
time=2025-09-06T15:31:49.720+02:00 level=INFO msg="Telegram service started" env=local
time=2025-09-06T15:31:49.720+02:00 level=INFO msg="Starting Telegram bot" env=local bot_username=shopping_service_bot
time=2025-09-06T15:34:45.230+02:00 level=INFO msg="Received message" env=local user_id=508225490 username=washerd chat_id=508225490 text=/start
time=2025-09-06T15:36:57.322+02:00 level=INFO msg="Received message" env=local user_id=508225490 username=washerd chat_id=508225490 text=/start
time=2025-09-06T15:37:01.442+02:00 level=INFO msg="Received message" env=local user_id=508225490 username=washerd chat_id=508225490 text=/help\
time=2025-09-06T15:37:01.482+02:00 level=ERROR msg="Failed to send message" env=local error="Bad Request: can't parse entities: Unsupported start tag \"telegram_id\" at byte offset 223" chat_id=508225490
time=2025-09-06T15:37:04.659+02:00 level=INFO msg="Received message" env=local user_id=508225490 username=washerd chat_id=508225490 text=/help
time=2025-09-06T15:37:04.698+02:00 level=ERROR msg="Failed to send message" env=local error="Bad Request: can't parse entities: Unsupported start tag \"telegram_id\" at byte offset 223" chat_id=508225490
time=2025-09-06T15:37:38.933+02:00 level=INFO msg="Received message" env=local user_id=508225490 username=washerd chat_id=508225490 text=/status
time=2025-09-06T15:43:17.725+02:00 level=INFO msg="Received message" env=local user_id=456230761 username="" chat_id=456230761 text=/start
time=2025-09-06T15:48:17.744+02:00 level=INFO msg="Received message" env=local user_id=456230761 username="" chat_id=456230761 text=/start
time=2025-09-06T15:48:32.187+02:00 level=INFO msg="Received message" env=local user_id=456230761 username="" chat_id=456230761 text=/help
time=2025-09-06T15:49:04.194+02:00 level=INFO msg="Received message" env=local user_id=508225490 username=washerd chat_id=508225490 text=/start
time=2025-09-06T15:49:06.357+02:00 level=INFO msg="Received message" env=local user_id=508225490 username=washerd chat_id=508225490 text=/help
time=2025-09-06T15:49:06.396+02:00 level=ERROR msg="Failed to send message" env=local error="Bad Request: can't parse entities: Unsupported start tag \"telegram_id\" at byte offset 223" chat_id=508225490
time=2025-09-06T15:49:13.987+02:00 level=INFO msg="Received message" env=local user_id=508225490 username=washerd chat_id=508225490 text=/help
time=2025-09-06T15:49:14.028+02:00 level=ERROR msg="Failed to send message" env=local error="Bad Request: can't parse entities: Unsupported start tag \"telegram_id\" at byte offset 223" chat_id=508225490
time=2025-09-06T15:49:18.688+02:00 level=INFO msg="Received message" env=local user_id=508225490 username=washerd chat_id=508225490 text=/start
time=2025-09-06T15:49:20.675+02:00 level=INFO msg="Received message" env=local user_id=508225490 username=washerd chat_id=508225490 text=/help
time=2025-09-06T15:49:20.717+02:00 level=ERROR msg="Failed to send message" env=local error="Bad Request: can't parse entities: Unsupported start tag \"telegram_id\" at byte offset 223" chat_id=508225490
time=2025-09-06T15:50:27.711+02:00 level=INFO msg="Received message" env=local user_id=508225490 username=washerd chat_id=508225490 text=/start
time=2025-09-06T15:57:18.737+02:00 level=INFO msg="Received message" env=local user_id=508225490 username=washerd chat_id=508225490 text=sfsd
time=2025-09-06T16:02:13.883+02:00 level=INFO msg="Received message" env=local user_id=508225490 username=washerd chat_id=508225490 text=/help
time=2025-09-06T16:02:13.922+02:00 level=ERROR msg="Failed to send message" env=local error="Bad Request: can't parse entities: Unsupported start tag \"telegram_id\" at byte offset 223" chat_id=508225490
time=2025-09-06T16:03:13.920+02:00 level=INFO msg="Shutting down server" env=local
time=2025-09-06T16:03:13.921+02:00 level=INFO msg="Stopping Telegram service..." env=local
time=2025-09-06T16:03:13.921+02:00 level=INFO msg="Bot context cancelled, stopping" env=local
{"time":"2025-09-06T16:20:02.471153348+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T16:20:02.471330523+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T16:20:02.637907954+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T16:20:02.637991088+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T16:20:02.638015131+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T16:20:02.638754132+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T16:20:02.638913999+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T16:20:02.638810785+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T16:20:02.638892363+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true,"admin_count":1}
{"time":"2025-09-06T16:20:23.179655764+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/start","chat_id":456230761,"message_type":"command","command":"start"}
{"time":"2025-09-06T16:20:23.195821402+02:00","level":"ERROR","msg":"Failed to render admin new user template","env":"local","error":"template: admin_new_user.html:9:24: executing \"admin_new_user.html\" at <.CreatedAt.Format>: can't evaluate field Format in type string"}
{"time":"2025-09-06T16:21:51.609154558+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T16:21:51.609195631+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T16:21:51.609204838+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T16:21:51.609209946+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T16:21:52.821596171+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T16:21:52.821771629+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T16:21:52.985493183+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T16:21:52.985624894+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T16:21:52.985673248+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T16:21:52.986122965+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T16:21:52.98656798+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T16:21:52.986785717+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true,"admin_count":1}
{"time":"2025-09-06T16:21:52.986938863+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T16:22:02.502657206+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/start","chat_id":456230761,"message_type":"command","command":"start"}
{"time":"2025-09-06T16:22:51.551768899+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/start","chat_id":456230761,"message_type":"command","command":"start"}
{"time":"2025-09-06T16:22:51.640659038+02:00","level":"INFO","msg":"New user notification sent to admin","env":"local","component":"telegram_bot","admin_id":508225490,"new_user_id":456230761,"new_user_name":"Владислава Науменко"}
{"time":"2025-09-06T16:23:24.070326206+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"auth_approve_456230761","chat_id":508225490}
{"time":"2025-09-06T16:23:24.264430091+02:00","level":"INFO","msg":"Authorization notification sent to user","env":"local","component":"telegram_bot","user_id":456230761,"authorized_by":508225490}
{"time":"2025-09-06T16:23:24.316311335+02:00","level":"INFO","msg":"User authorized via admin callback","env":"local","component":"telegram_bot","admin_id":508225490,"target_user_id":456230761}
{"time":"2025-09-06T16:30:02.174788923+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T16:30:02.174903488+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T16:30:02.174935321+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T16:30:02.174967337+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T16:30:04.09189601+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T16:30:04.091996186+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T16:30:04.224763019+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T16:30:04.224830837+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T16:30:04.224846253+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T16:30:04.225121482+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T16:30:04.225210945+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T16:30:04.225274813+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true,"admin_count":1}
{"time":"2025-09-06T16:30:04.225306628+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T16:32:08.842715857+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/start","chat_id":456230761,"message_type":"command","command":"start"}
{"time":"2025-09-06T16:32:08.930154369+02:00","level":"INFO","msg":"New user notification sent to admin","env":"local","component":"telegram_bot","admin_id":508225490,"new_user_id":456230761,"new_user_name":"Владислава Науменко"}
{"time":"2025-09-06T16:32:23.467956037+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"auth_approve_456230761","chat_id":508225490}
{"time":"2025-09-06T16:32:23.610663316+02:00","level":"INFO","msg":"Authorization notification sent to user","env":"local","component":"telegram_bot","user_id":456230761,"authorized_by":508225490}
{"time":"2025-09-06T16:32:23.656684496+02:00","level":"INFO","msg":"User authorized via admin callback","env":"local","component":"telegram_bot","admin_id":508225490,"target_user_id":456230761}
{"time":"2025-09-06T16:32:36.045857472+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/help","chat_id":456230761,"message_type":"command","command":"help"}
{"time":"2025-09-06T16:33:02.977084226+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/status","chat_id":456230761,"message_type":"command","command":"status"}
{"time":"2025-09-06T16:33:12.911912906+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/authorize","chat_id":456230761,"message_type":"command","command":"authorize"}
{"time":"2025-09-06T16:33:19.425773135+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/help","chat_id":456230761,"message_type":"command","command":"help"}
{"time":"2025-09-06T16:33:30.862379879+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/help","chat_id":508225490,"message_type":"command","command":"help"}
{"time":"2025-09-06T16:33:51.058137721+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/myid","chat_id":456230761,"message_type":"command","command":"myid"}
{"time":"2025-09-06T16:34:02.776168528+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/users","chat_id":456230761,"message_type":"command","command":"users"}
{"time":"2025-09-06T16:34:06.16689187+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/users","chat_id":508225490,"message_type":"command","command":"users"}
{"time":"2025-09-06T16:37:15.899038845+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/start","chat_id":456230761,"message_type":"command","command":"start"}
{"time":"2025-09-06T16:37:18.383196452+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/help","chat_id":456230761,"message_type":"command","command":"help"}
{"time":"2025-09-06T16:56:55.778053758+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T16:56:55.778215445+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T16:56:55.945806664+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T16:56:55.945973471+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T16:56:55.946021041+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T16:56:55.946514839+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T16:56:55.946676466+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T16:56:55.946864726+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T16:56:55.9469747+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T16:56:55.947063483+02:00","level":"ERROR","msg":"HTTP server error","env":"local","error":"failed to listen: listen tcp4 0.0.0.0:3001: bind: address already in use"}
{"time":"2025-09-06T16:57:32.722418561+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T16:57:32.722526894+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T16:57:32.72255711+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T16:57:32.722593005+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T16:57:34.976658965+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T16:57:34.976813549+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T16:57:34.976863361+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T16:57:34.976911155+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T16:57:37.091911525+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T16:57:37.092106149+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T16:57:37.247499554+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T16:57:37.247570104+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T16:57:37.247591979+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T16:57:37.247784055+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T16:57:37.248206666+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T16:57:37.24838339+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T16:57:37.248480286+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T16:57:53.357553983+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/start","chat_id":508225490,"message_type":"command","command":"start"}
{"time":"2025-09-06T16:57:55.721625394+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/help","chat_id":508225490,"message_type":"command","command":"help"}
{"time":"2025-09-06T16:57:59.572833122+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/users","chat_id":508225490,"message_type":"command","command":"users"}
{"time":"2025-09-06T17:19:17.694375895+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T17:19:17.694575951+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T17:19:17.694629735+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T17:19:17.694678167+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T17:19:17.69480882+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-06T17:28:19.283044375+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T17:28:19.28316032+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T17:28:19.43651057+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T17:28:19.436585162+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T17:28:19.436606517+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T17:28:19.437115126+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T17:28:19.437132927+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T17:28:19.437168666+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T17:28:19.437195288+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T17:28:31.90812558+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/help","chat_id":508225490,"message_type":"command","command":"help"}
{"time":"2025-09-06T17:31:23.966561666+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T17:31:23.966733744+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T17:31:23.966785262+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T17:31:23.966851944+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T17:31:25.190837074+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T17:31:25.190972462+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T17:31:25.352287234+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T17:31:25.352404684+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T17:31:25.352454129+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T17:31:25.35309172+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T17:31:25.353484038+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T17:31:25.353698421+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T17:31:25.353820603+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T17:31:35.745945218+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/help","chat_id":508225490,"message_type":"command","command":"help"}
{"time":"2025-09-06T17:31:47.655664723+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/families","chat_id":508225490,"message_type":"command","command":"families"}
{"time":"2025-09-06T17:31:51.27391733+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/createfamily","chat_id":508225490,"message_type":"command","command":"createfamily"}
{"time":"2025-09-06T17:31:51.318074104+02:00","level":"ERROR","msg":"Failed to send message","env":"local","error":"Bad Request: can't parse entities: Unsupported start tag \"name\" at byte offset 55","chat_id":508225490}
{"time":"2025-09-06T17:32:50.060926271+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/createfamily Семья","chat_id":508225490,"message_type":"command","command":"createfamily"}
{"time":"2025-09-06T17:33:41.598888985+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/addfamilymember Семья 456230761","chat_id":508225490,"message_type":"command","command":"addfamilymember"}
{"time":"2025-09-06T17:33:41.69563356+02:00","level":"INFO","msg":"Sent family member notification","env":"local","family_name":"Семья","new_member_id":456230761,"added_by_id":508225490}
{"time":"2025-09-06T17:34:23.13067713+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/families","chat_id":456230761,"message_type":"command","command":"families"}
{"time":"2025-09-06T17:36:53.234713957+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/families","chat_id":508225490,"message_type":"command","command":"families"}
{"time":"2025-09-06T17:37:12.759783277+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/users","chat_id":508225490,"message_type":"command","command":"users"}
{"time":"2025-09-06T17:47:35.356745644+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T17:47:35.356927403+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T17:47:35.356977936+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T17:47:35.357078124+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T17:47:35.357222736+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-06T17:47:52.235266518+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T17:47:52.235430428+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T17:47:52.425990018+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T17:47:52.426059181+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T17:47:52.426080709+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T17:47:52.426436436+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T17:47:52.426853616+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T17:47:52.427077528+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T17:47:52.42721428+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T17:48:09.824202335+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/help","chat_id":508225490,"message_type":"command","command":"help"}
{"time":"2025-09-06T17:48:14.205493829+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/createlist","chat_id":508225490,"message_type":"command","command":"createlist"}
{"time":"2025-09-06T17:48:16.941844034+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"createlist_family_e204dcfd-b89d-4cc5-93d1-1c1a29e2f724","chat_id":508225490}
{"time":"2025-09-06T17:48:17.113630294+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"creating_list_for_family","value":"e204dcfd-b89d-4cc5-93d1-1c1a29e2f724"}
{"time":"2025-09-06T17:48:37.082001828+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"На субботу","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T18:01:26.606403818+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T18:01:26.606556443+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T18:01:26.606608587+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T18:01:26.606677574+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T18:01:28.015290687+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T18:01:28.015398086+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T18:01:28.160484124+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T18:01:28.16055922+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T18:01:28.160582148+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T18:01:28.161112469+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T18:01:28.161146426+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T18:01:28.161305187+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T18:01:28.161462999+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T18:01:36.569049056+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/createlist","chat_id":508225490,"message_type":"command","command":"createlist"}
{"time":"2025-09-06T18:01:41.519034721+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/status","chat_id":508225490,"message_type":"command","command":"status"}
{"time":"2025-09-06T18:01:43.919522218+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/help","chat_id":508225490,"message_type":"command","command":"help"}
{"time":"2025-09-06T18:01:45.94486667+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/lists","chat_id":508225490,"message_type":"command","command":"lists"}
{"time":"2025-09-06T18:02:10.735581812+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/createlist","chat_id":508225490,"message_type":"command","command":"createlist"}
{"time":"2025-09-06T18:02:12.223531752+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"createlist_family_e204dcfd-b89d-4cc5-93d1-1c1a29e2f724","chat_id":508225490}
{"time":"2025-09-06T18:02:12.334842607+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"creating_list_for_family","value":"e204dcfd-b89d-4cc5-93d1-1c1a29e2f724"}
{"time":"2025-09-06T18:02:19.893234775+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"На субботу","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T18:02:26.55155826+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/lists","chat_id":508225490,"message_type":"command","command":"lists"}
{"time":"2025-09-06T18:09:27.980107937+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T18:09:27.980324095+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T18:09:27.980467049+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T18:09:27.980521171+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T18:09:29.496499257+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T18:09:29.496686493+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T18:09:29.6475768+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T18:09:29.647701279+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T18:09:29.647733118+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T18:09:29.648058153+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T18:09:29.648698383+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T18:09:29.649064841+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T18:09:29.650019255+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T18:09:37.137738309+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/createlist","chat_id":508225490,"message_type":"command","command":"createlist"}
{"time":"2025-09-06T18:09:40.41921588+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"createlist_family_e204dcfd-b89d-4cc5-93d1-1c1a29e2f724","chat_id":508225490}
{"time":"2025-09-06T18:09:40.574822348+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"creating_list_for_family","value":"e204dcfd-b89d-4cc5-93d1-1c1a29e2f724"}
{"time":"2025-09-06T18:09:45.669892713+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"на субботу","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T18:09:45.680170345+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"creating_list_for_family"}
{"time":"2025-09-06T18:09:45.949933152+02:00","level":"INFO","msg":"Sent family new list notification","env":"local","member_telegram_id":456230761,"list_name":"на субботу","family_name":"Семья","created_by":"@washerd"}
{"time":"2025-09-06T18:09:50.138923585+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T18:09:53.494148853+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T18:09:53.608348936+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T18:10:03.424608944+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"молоко и сір","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T18:10:03.454144832+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-06T18:10:03.571488313+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"молоко и сір","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T18:10:35.247954632+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T18:10:35.321344354+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: BUTTON_DATA_INVALID"}
{"time":"2025-09-06T18:10:36.979008743+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T18:10:37.056886226+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: BUTTON_DATA_INVALID"}
{"time":"2025-09-06T18:10:39.630173878+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T18:10:39.821228353+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":456230761,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T18:10:43.503024021+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T18:10:43.56611073+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: BUTTON_DATA_INVALID"}
{"time":"2025-09-06T18:10:45.809682445+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T18:10:45.894612394+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: BUTTON_DATA_INVALID"}
{"time":"2025-09-06T18:10:48.648815247+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"show_all_lists","chat_id":456230761}
{"time":"2025-09-06T18:10:50.631475306+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T18:10:50.685208126+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: BUTTON_DATA_INVALID"}
{"time":"2025-09-06T18:10:52.723713234+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T18:10:52.789686243+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: BUTTON_DATA_INVALID"}
{"time":"2025-09-06T18:10:59.065540008+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T18:10:59.128532751+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: BUTTON_DATA_INVALID"}
{"time":"2025-09-06T18:11:30.475927544+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T18:11:30.531866618+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: BUTTON_DATA_INVALID"}
{"time":"2025-09-06T18:11:32.097877772+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T18:11:32.157677581+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: BUTTON_DATA_INVALID"}
{"time":"2025-09-06T18:14:05.287452186+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T18:14:05.28760121+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T18:14:05.287637307+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T18:14:05.28769719+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T18:14:07.303219487+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T18:14:07.303337522+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T18:14:07.480508821+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T18:14:07.480591221+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T18:14:07.480617672+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T18:14:07.481110248+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T18:14:07.481390573+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T18:14:07.481617511+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T18:14:07.481753188+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T18:14:26.429511257+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T18:14:30.565159144+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"li_t_5b905390_a7906e1d","chat_id":508225490}
{"time":"2025-09-06T18:14:30.735381789+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_completed_notification","item_name":"молоко и сір","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T18:14:32.076869071+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"li_t_5b905390_a7906e1d","chat_id":508225490}
{"time":"2025-09-06T18:14:32.305313947+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_uncompleted_notification","item_name":"молоко и сір","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T18:14:39.722101773+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-06T18:14:40.830632046+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T18:14:41.63128213+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T18:14:41.903567917+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T18:14:42.807936865+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T18:28:44.437766631+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T18:28:44.437931493+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T18:28:44.437986649+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T18:28:44.438053173+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T18:55:12.891335787+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T18:55:12.891496325+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T18:55:13.049400187+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T18:55:13.049530223+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T18:55:13.049581989+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T18:55:13.050086771+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T18:55:13.050506663+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T18:55:13.05059596+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T18:55:13.050668453+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T18:57:29.121539989+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T18:57:29.244973151+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T18:57:46.005820432+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"Молоко, сыр, багет","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T18:57:46.012868835+02:00","level":"ERROR","msg":"Failed to add item to list","env":"local","error":"failed to add item to list: ERROR: column \"display_name\" of relation \"shopping_items\" does not exist (SQLSTATE 42703)"}
{"time":"2025-09-06T19:11:02.004447007+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T19:11:02.004608734+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T19:11:02.004667234+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T19:11:02.00476757+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T19:11:02.004992028+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-06T19:11:03.108841641+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T19:11:03.109254466+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T19:11:03.261156704+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T19:11:03.261293105+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T19:11:03.261344485+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T19:11:03.261735191+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T19:11:03.262130636+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T19:11:03.26222653+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T19:11:03.262305925+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T19:12:00.126301589+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"Молоко, сыр, багет","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T19:12:02.122475534+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"/lists","chat_id":508225490,"message_type":"command","command":"lists"}
{"time":"2025-09-06T19:12:03.681753625+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T19:12:05.245099949+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T19:12:05.378262687+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T19:12:08.243640469+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"Молоко, сыр, багет","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T19:12:08.261055097+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-06T19:12:08.339155453+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"Молоко, сыр, багет","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T19:14:38.694066781+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T19:14:38.810221069+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":456230761,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T19:14:42.072598256+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T19:14:45.123983817+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T19:14:45.296621635+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":456230761,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T19:14:47.856197355+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T19:14:53.285752711+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T19:14:53.475410146+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":456230761,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T19:14:57.792930466+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"Яблока","chat_id":456230761,"message_type":"text","command":""}
{"time":"2025-09-06T19:14:57.806279355+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":456230761,"state":"adding_item_to_list"}
{"time":"2025-09-06T19:14:57.889850531+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":508225490,"template_name":"item_added_notification","item_name":"Яблока","list_name":"на субботу","actor":"Владислава"}
{"time":"2025-09-06T19:16:53.85452917+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T19:16:53.85464648+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T19:16:53.854676763+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T19:16:53.85472182+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T19:16:53.854839897+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-06T19:16:55.835200858+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T19:16:55.835322746+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T19:16:55.83547548+02:00","level":"WARN","msg":"OPENAI_API_KEY not set, using mock AI client","env":"local"}
{"time":"2025-09-06T19:16:55.987059708+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T19:16:55.987129095+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T19:16:55.987153542+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T19:16:55.987644114+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T19:16:55.987984186+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T19:16:55.988121374+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T19:16:55.988314418+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T19:17:15.90546275+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T19:17:20.637828626+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T19:17:20.758667558+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":456230761,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T19:17:27.672720009+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"Картошка","chat_id":456230761,"message_type":"text","command":""}
{"time":"2025-09-06T19:17:27.694036537+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":456230761,"state":"adding_item_to_list"}
{"time":"2025-09-06T19:17:27.786048046+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":508225490,"template_name":"item_added_notification","item_name":"Картошка","list_name":"на субботу","actor":"Владислава"}
{"time":"2025-09-06T19:17:44.330087689+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T19:17:46.1552893+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T19:17:46.390423898+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T19:17:52.564550041+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"Картошка, багет","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T19:17:52.575319045+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-06T19:17:52.642228475+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"Картошка, багет","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T19:17:56.801149901+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T20:30:00.905778869+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T20:30:00.905876061+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T20:30:00.905907103+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T20:30:00.905937828+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T20:33:12.290710039+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T20:33:12.290821677+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T20:33:12.290946426+02:00","level":"WARN","msg":"OPENAI_API_KEY not set, using mock AI client","env":"local"}
{"time":"2025-09-06T20:33:12.453660732+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T20:33:12.453744162+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T20:33:12.453768742+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T20:33:12.454297365+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T20:33:12.454564904+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T20:33:12.454669672+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T20:33:12.45483381+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T20:33:56.253852007+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-06T20:33:57.856492668+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T20:34:01.526752708+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T20:34:01.600125201+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-06T20:34:20.67287923+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T20:34:22.224606881+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T20:34:22.435742046+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T20:34:44.348742199+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"молоко , ріба 2 филе, картошка 1 кг","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T20:34:44.350783489+02:00","level":"INFO","msg":"Successfully parsed multiple items with AI","env":"local","raw_text":"молоко , ріба 2 филе, картошка 1 кг","language":"en","items_count":3}
{"time":"2025-09-06T20:34:44.355027947+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"milk","parsed":"milk","category":"dairy","confidence":0.95}
{"time":"2025-09-06T20:34:44.356736323+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"ріба 2 филе","parsed":"ріба 2 филе","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:34:44.357841913+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"картошка 1 кг","parsed":"картошка 1 кг","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:34:44.357884056+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-06T20:34:44.44404179+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"milk","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:34:44.469737733+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"картошка 1 кг","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:34:44.493600284+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"ріба 2 филе","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:34:51.386915165+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T20:43:16.161096727+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T20:43:16.161196388+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T20:43:16.161232251+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T20:43:16.161289768+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T20:43:17.980190897+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T20:43:17.98035595+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T20:43:17.980607837+02:00","level":"WARN","msg":"OPENAI_API_KEY not set, using mock AI client","env":"local"}
{"time":"2025-09-06T20:43:18.138507978+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T20:43:18.138593508+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T20:43:18.138619309+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T20:43:18.13885567+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T20:43:18.139448574+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T20:43:18.139550513+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T20:43:18.139681017+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T20:43:48.13890417+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T20:43:48.399054313+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T20:43:54.207928466+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T20:43:54.221987141+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"щетка на швабру","parsed":"щетка на швабру","category":"grocery","confidence":0.7,"item_index":1,"total_items":15}
{"time":"2025-09-06T20:43:54.226556601+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"туалетная бумага","parsed":"туалетная бумага","category":"grocery","confidence":0.7,"item_index":2,"total_items":15}
{"time":"2025-09-06T20:43:54.23008528+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"мочалки для посуды. овощи- 3 огурца","parsed":"мочалки для посуды. овощи- 3 огурца","category":"grocery","confidence":0.7,"item_index":3,"total_items":15}
{"time":"2025-09-06T20:43:54.234029967+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"1 пачка кукурузы","parsed":"1 пачка кукурузы","category":"grocery","confidence":0.7,"item_index":4,"total_items":15}
{"time":"2025-09-06T20:43:54.238974831+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"лист салата","parsed":"лист салата","category":"grocery","confidence":0.7,"item_index":5,"total_items":15}
{"time":"2025-09-06T20:43:54.243605451+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка 0","parsed":"морковка 0","category":"grocery","confidence":0.7,"item_index":6,"total_items":15}
{"time":"2025-09-06T20:43:54.247517676+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"5 кг","parsed":"5 кг","category":"grocery","confidence":0.7,"item_index":7,"total_items":15}
{"time":"2025-09-06T20:43:54.25094425+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"голубика 1 уп","parsed":"голубика 1 уп","category":"grocery","confidence":0.7,"item_index":8,"total_items":15}
{"time":"2025-09-06T20:43:54.254317121+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"пол капусты","parsed":"пол капусты","category":"grocery","confidence":0.7,"item_index":9,"total_items":15}
{"time":"2025-09-06T20:43:54.25752576+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"где овощи - салат цезарь","parsed":"где овощи - салат цезарь","category":"grocery","confidence":0.7,"item_index":10,"total_items":15}
{"time":"2025-09-06T20:43:54.261119574+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"bread","parsed":"bread","category":"bakery","confidence":0.95,"item_index":11,"total_items":15}
{"time":"2025-09-06T20:43:54.264707366+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"рыба красная филе","parsed":"рыба красная филе","category":"grocery","confidence":0.7,"item_index":12,"total_items":15}
{"time":"2025-09-06T20:43:54.267535758+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"кролик","parsed":"кролик","category":"grocery","confidence":0.7,"item_index":13,"total_items":15}
{"time":"2025-09-06T20:43:54.27031979+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"филе курицы 1 маленькая уп","parsed":"филе курицы 1 маленькая уп","category":"grocery","confidence":0.7,"item_index":14,"total_items":15}
{"time":"2025-09-06T20:43:54.272638882+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"сливки","parsed":"сливки","category":"grocery","confidence":0.7,"item_index":15,"total_items":15}
{"time":"2025-09-06T20:43:54.272657703+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","total_parsed":15,"successfully_stored":15}
{"time":"2025-09-06T20:43:54.274666146+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"щетка на швабру","parsed":"щетка на швабру","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.275512768+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"туалетная бумага","parsed":"туалетная бумага","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.276362329+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"мочалки для посуды. овощи- 3 огурца","parsed":"мочалки для посуды. овощи- 3 огурца","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.277199471+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"1 пачка кукурузы","parsed":"1 пачка кукурузы","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.27803892+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"лист салата","parsed":"лист салата","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.278851946+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"морковка 0","parsed":"морковка 0","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.279524092+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"5 кг","parsed":"5 кг","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.280088749+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"голубика 1 уп","parsed":"голубика 1 уп","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.280692293+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"пол капусты","parsed":"пол капусты","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.281225652+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"где овощи - салат цезарь","parsed":"где овощи - салат цезарь","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.281772574+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"bread","parsed":"bread","category":"bakery","confidence":0.95}
{"time":"2025-09-06T20:43:54.282347027+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"рыба красная филе","parsed":"рыба красная филе","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.283000764+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"кролик","parsed":"кролик","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.283577762+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"филе курицы 1 маленькая уп","parsed":"филе курицы 1 маленькая уп","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.284119044+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"сливки","parsed":"сливки","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:43:54.284132985+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-06T20:43:54.370189268+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"морковка 0","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.392846973+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"туалетная бумага","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.411347066+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"5 кг","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.436005832+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"щетка на швабру","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.456861583+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"лист салата","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.47733938+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"филе курицы 1 маленькая уп","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.50561211+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"где овощи - салат цезарь","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.529402143+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"сливки","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.55878636+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"мочалки для посуды. овощи- 3 огурца","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.581589317+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"bread","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.59857946+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"кролик","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.622503701+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"пол капусты","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.651367532+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"1 пачка кукурузы","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.676339993+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"рыба красная филе","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:43:54.700506372+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"голубика 1 уп","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:44:06.494012274+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T20:44:12.484559149+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"li_t_5b905390_80331bd1","chat_id":508225490}
{"time":"2025-09-06T20:44:12.62176956+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_completed_notification","item_name":"milk","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:44:13.977780454+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"li_t_5b905390_aecff523","chat_id":508225490}
{"time":"2025-09-06T20:44:14.126547525+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_completed_notification","item_name":"картошка 1 кг","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:44:15.238859998+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"li_t_5b905390_8e271ed0","chat_id":508225490}
{"time":"2025-09-06T20:44:15.400631837+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_completed_notification","item_name":"туалетная бумага","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:55:58.56251902+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T20:56:00.088976297+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T20:56:00.360867356+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T20:56:02.566686729+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T20:56:02.57990098+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"щетка на швабру","parsed":"щетка на швабру","category":"grocery","confidence":0.7,"item_index":1,"total_items":15}
{"time":"2025-09-06T20:56:02.582361262+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"туалетная бумага","parsed":"туалетная бумага","category":"grocery","confidence":0.7,"item_index":2,"total_items":15}
{"time":"2025-09-06T20:56:02.58502271+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"мочалки для посуды. овощи- 3 огурца","parsed":"мочалки для посуды. овощи- 3 огурца","category":"grocery","confidence":0.7,"item_index":3,"total_items":15}
{"time":"2025-09-06T20:56:02.588050695+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"1 пачка кукурузы","parsed":"1 пачка кукурузы","category":"grocery","confidence":0.7,"item_index":4,"total_items":15}
{"time":"2025-09-06T20:56:02.591870012+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"лист салата","parsed":"лист салата","category":"grocery","confidence":0.7,"item_index":5,"total_items":15}
{"time":"2025-09-06T20:56:02.59561757+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка 0","parsed":"морковка 0","category":"grocery","confidence":0.7,"item_index":6,"total_items":15}
{"time":"2025-09-06T20:56:02.598176337+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"5 кг","parsed":"5 кг","category":"grocery","confidence":0.7,"item_index":7,"total_items":15}
{"time":"2025-09-06T20:56:02.600771472+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"голубика 1 уп","parsed":"голубика 1 уп","category":"grocery","confidence":0.7,"item_index":8,"total_items":15}
{"time":"2025-09-06T20:56:02.603708676+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"пол капусты","parsed":"пол капусты","category":"grocery","confidence":0.7,"item_index":9,"total_items":15}
{"time":"2025-09-06T20:56:02.607475046+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"где овощи - салат цезарь","parsed":"где овощи - салат цезарь","category":"grocery","confidence":0.7,"item_index":10,"total_items":15}
{"time":"2025-09-06T20:56:02.611585188+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"bread","parsed":"bread","category":"bakery","confidence":0.95,"item_index":11,"total_items":15}
{"time":"2025-09-06T20:56:02.615594984+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"рыба красная филе","parsed":"рыба красная филе","category":"grocery","confidence":0.7,"item_index":12,"total_items":15}
{"time":"2025-09-06T20:56:02.619180251+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"кролик","parsed":"кролик","category":"grocery","confidence":0.7,"item_index":13,"total_items":15}
{"time":"2025-09-06T20:56:02.621606901+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"филе курицы 1 маленькая уп","parsed":"филе курицы 1 маленькая уп","category":"grocery","confidence":0.7,"item_index":14,"total_items":15}
{"time":"2025-09-06T20:56:02.624050574+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"сливки","parsed":"сливки","category":"grocery","confidence":0.7,"item_index":15,"total_items":15}
{"time":"2025-09-06T20:56:02.624093125+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","total_parsed":15,"successfully_stored":15}
{"time":"2025-09-06T20:56:02.625789146+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"щетка на швабру","parsed":"щетка на швабру","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.626925247+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"туалетная бумага","parsed":"туалетная бумага","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.628050152+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"мочалки для посуды. овощи- 3 огурца","parsed":"мочалки для посуды. овощи- 3 огурца","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.629186905+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"1 пачка кукурузы","parsed":"1 пачка кукурузы","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.63080132+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"лист салата","parsed":"лист салата","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.632213593+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"морковка 0","parsed":"морковка 0","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.633386708+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"5 кг","parsed":"5 кг","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.634381476+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"голубика 1 уп","parsed":"голубика 1 уп","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.635406353+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"пол капусты","parsed":"пол капусты","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.636412071+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"где овощи - салат цезарь","parsed":"где овощи - салат цезарь","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.639735759+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"bread","parsed":"bread","category":"bakery","confidence":0.95}
{"time":"2025-09-06T20:56:02.640721032+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"рыба красная филе","parsed":"рыба красная филе","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.641657745+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"кролик","parsed":"кролик","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.642587324+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"филе курицы 1 маленькая уп","parsed":"филе курицы 1 маленькая уп","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.643739991+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"сливки","parsed":"сливки","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:02.643801251+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-06T20:56:02.780402272+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"лист салата","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:02.80518521+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"кролик","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:02.822504071+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"мочалки для посуды. овощи- 3 огурца","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:02.864662174+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"морковка 0","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:02.878382547+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"сливки","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:02.89884679+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"1 пачка кукурузы","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:02.92252073+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"голубика 1 уп","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:02.94752472+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"щетка на швабру","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:02.977702331+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"туалетная бумага","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:03.00564071+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"bread","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:03.042904281+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"филе курицы 1 маленькая уп","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:03.070519355+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"пол капусты","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:03.093910492+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"5 кг","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:03.127074645+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"где овощи - салат цезарь","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:03.150843463+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"рыба красная филе","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:37.436573528+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-06T20:56:38.807615706+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T20:56:44.096353903+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T20:56:44.096436596+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T20:56:44.096462936+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T20:56:44.096500405+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T20:56:44.096629046+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-06T20:56:45.38510919+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T20:56:45.385298934+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T20:56:45.385582408+02:00","level":"WARN","msg":"OPENAI_API_KEY not set, using mock AI client","env":"local"}
{"time":"2025-09-06T20:56:45.549104536+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T20:56:45.54925043+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T20:56:45.549281805+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T20:56:45.549668808+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T20:56:45.550066424+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T20:56:45.550196173+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T20:56:45.550391958+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T20:56:48.036359226+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T20:56:48.156440549+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-06T20:56:49.361808089+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T20:56:49.804586795+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T20:56:52.562334352+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T20:56:52.575310292+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"щетка на швабру","parsed":"щетка на швабру","category":"grocery","confidence":0.7,"item_index":1,"total_items":15}
{"time":"2025-09-06T20:56:52.579148452+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"туалетная бумага","parsed":"туалетная бумага","category":"grocery","confidence":0.7,"item_index":2,"total_items":15}
{"time":"2025-09-06T20:56:52.582006964+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"мочалки для посуды. овощи- 3 огурца","parsed":"мочалки для посуды. овощи- 3 огурца","category":"grocery","confidence":0.7,"item_index":3,"total_items":15}
{"time":"2025-09-06T20:56:52.585816697+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"1 пачка кукурузы","parsed":"1 пачка кукурузы","category":"grocery","confidence":0.7,"item_index":4,"total_items":15}
{"time":"2025-09-06T20:56:52.588887757+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"лист салата","parsed":"лист салата","category":"grocery","confidence":0.7,"item_index":5,"total_items":15}
{"time":"2025-09-06T20:56:52.591573515+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка 0","parsed":"морковка 0","category":"grocery","confidence":0.7,"item_index":6,"total_items":15}
{"time":"2025-09-06T20:56:52.593962298+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"5 кг","parsed":"5 кг","category":"grocery","confidence":0.7,"item_index":7,"total_items":15}
{"time":"2025-09-06T20:56:52.596123755+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"голубика 1 уп","parsed":"голубика 1 уп","category":"grocery","confidence":0.7,"item_index":8,"total_items":15}
{"time":"2025-09-06T20:56:52.598067338+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"пол капусты","parsed":"пол капусты","category":"grocery","confidence":0.7,"item_index":9,"total_items":15}
{"time":"2025-09-06T20:56:52.600039312+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"где овощи - салат цезарь","parsed":"где овощи - салат цезарь","category":"grocery","confidence":0.7,"item_index":10,"total_items":15}
{"time":"2025-09-06T20:56:52.602224753+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"bread","parsed":"bread","category":"bakery","confidence":0.95,"item_index":11,"total_items":15}
{"time":"2025-09-06T20:56:52.604332534+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"рыба красная филе","parsed":"рыба красная филе","category":"grocery","confidence":0.7,"item_index":12,"total_items":15}
{"time":"2025-09-06T20:56:52.606321286+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"кролик","parsed":"кролик","category":"grocery","confidence":0.7,"item_index":13,"total_items":15}
{"time":"2025-09-06T20:56:52.608289723+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"филе курицы 1 маленькая уп","parsed":"филе курицы 1 маленькая уп","category":"grocery","confidence":0.7,"item_index":14,"total_items":15}
{"time":"2025-09-06T20:56:52.610329217+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"сливки","parsed":"сливки","category":"grocery","confidence":0.7,"item_index":15,"total_items":15}
{"time":"2025-09-06T20:56:52.610355471+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","total_parsed":15,"successfully_stored":15}
{"time":"2025-09-06T20:56:52.61147844+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"щетка на швабру","parsed":"щетка на швабру","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.612296349+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"туалетная бумага","parsed":"туалетная бумага","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.613016026+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"мочалки для посуды. овощи- 3 огурца","parsed":"мочалки для посуды. овощи- 3 огурца","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.61373503+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"1 пачка кукурузы","parsed":"1 пачка кукурузы","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.614482405+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"лист салата","parsed":"лист салата","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.615159386+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"морковка 0","parsed":"морковка 0","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.61573235+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"5 кг","parsed":"5 кг","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.616356262+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"голубика 1 уп","parsed":"голубика 1 уп","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.616958115+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"пол капусты","parsed":"пол капусты","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.617560765+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"где овощи - салат цезарь","parsed":"где овощи - салат цезарь","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.618198223+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"bread","parsed":"bread","category":"bakery","confidence":0.95}
{"time":"2025-09-06T20:56:52.61884544+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"рыба красная филе","parsed":"рыба красная филе","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.619502707+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"кролик","parsed":"кролик","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.620149783+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"филе курицы 1 маленькая уп","parsed":"филе курицы 1 маленькая уп","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.620867088+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"сливки","parsed":"сливки","category":"grocery","confidence":0.7}
{"time":"2025-09-06T20:56:52.620916107+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-06T20:56:52.704125051+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"пол капусты","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:52.728618738+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"рыба красная филе","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:52.760889384+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"где овощи - салат цезарь","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:52.790097544+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"филе курицы 1 маленькая уп","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:52.826197155+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"сливки","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:52.860613858+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"кролик","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:52.883513828+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"bread","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:52.907904767+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"5 кг","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:52.939128072+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"голубика 1 уп","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:52.960083898+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"морковка 0","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:52.984776833+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"лист салата","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:53.005026857+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"щетка на швабру","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:53.051287649+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"туалетная бумага","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:53.071144198+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"мочалки для посуды. овощи- 3 огурца","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:56:53.093648727+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"1 пачка кукурузы","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T20:57:05.608291182+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:06:29.644431654+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T21:06:29.644543239+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T21:06:29.64457238+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T21:06:29.644600877+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T21:06:31.288073127+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T21:06:31.288181886+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T21:06:31.288336933+02:00","level":"WARN","msg":"OPENAI_API_KEY not set, using mock AI client","env":"local"}
{"time":"2025-09-06T21:06:31.460263202+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T21:06:31.460342713+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T21:06:31.460370927+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T21:06:31.460658343+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T21:06:31.461198202+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T21:06:31.461321057+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T21:06:31.461370364+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T21:07:03.358457714+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:07:06.226781434+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:07:06.346907443+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T21:07:08.46996723+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T21:07:08.473297596+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-06T21:07:08.473517978+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","results_count":15}
{"time":"2025-09-06T21:07:08.473549741+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"щетка на швабру","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.473611608+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":2,"standardized_name":"туалетная бумага","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"L","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.473628863+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":3,"standardized_name":"мочалки для посуды. овощи- 3 огурца","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"L","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.473647632+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":4,"standardized_name":"1 пачка кукурузы","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.473665659+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":5,"standardized_name":"лист салата","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"L","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.473683501+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":6,"standardized_name":"морковка 0","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.47369791+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":7,"standardized_name":"5 кг","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"kg","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.473714223+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":8,"standardized_name":"голубика 1 уп","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"L","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.47373722+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":9,"standardized_name":"пол капусты","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"L","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.473754052+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":10,"standardized_name":"где овощи - салат цезарь","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"L","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.473772586+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":11,"standardized_name":"bread","category":"bakery","subcategory":"bread","quantity_value":null,"quantity_unit":"L","confidence_score":0.95}
{"time":"2025-09-06T21:07:08.473789273+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":12,"standardized_name":"рыба красная филе","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"L","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.473806808+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":13,"standardized_name":"кролик","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"L","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.47382482+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":14,"standardized_name":"филе курицы 1 маленькая уп","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"L","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.473844359+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":15,"standardized_name":"сливки","category":"grocery","subcategory":"unknown","quantity_value":null,"quantity_unit":"L","confidence_score":0.7}
{"time":"2025-09-06T21:07:08.483836097+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"щетка на швабру","parsed":"щетка на швабру","category":"grocery","confidence":0.7,"item_index":1,"total_items":15}
{"time":"2025-09-06T21:07:08.487659395+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"туалетная бумага","parsed":"туалетная бумага","category":"grocery","confidence":0.7,"item_index":2,"total_items":15}
{"time":"2025-09-06T21:07:08.490621815+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"мочалки для посуды. овощи- 3 огурца","parsed":"мочалки для посуды. овощи- 3 огурца","category":"grocery","confidence":0.7,"item_index":3,"total_items":15}
{"time":"2025-09-06T21:07:08.493266134+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"1 пачка кукурузы","parsed":"1 пачка кукурузы","category":"grocery","confidence":0.7,"item_index":4,"total_items":15}
{"time":"2025-09-06T21:07:08.495634111+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"лист салата","parsed":"лист салата","category":"grocery","confidence":0.7,"item_index":5,"total_items":15}
{"time":"2025-09-06T21:07:08.498012261+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка 0","parsed":"морковка 0","category":"grocery","confidence":0.7,"item_index":6,"total_items":15}
{"time":"2025-09-06T21:07:08.500041456+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"5 кг","parsed":"5 кг","category":"grocery","confidence":0.7,"item_index":7,"total_items":15}
{"time":"2025-09-06T21:07:08.502019534+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"голубика 1 уп","parsed":"голубика 1 уп","category":"grocery","confidence":0.7,"item_index":8,"total_items":15}
{"time":"2025-09-06T21:07:08.503693264+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"пол капусты","parsed":"пол капусты","category":"grocery","confidence":0.7,"item_index":9,"total_items":15}
{"time":"2025-09-06T21:07:08.50544359+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"где овощи - салат цезарь","parsed":"где овощи - салат цезарь","category":"grocery","confidence":0.7,"item_index":10,"total_items":15}
{"time":"2025-09-06T21:07:08.507451987+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"bread","parsed":"bread","category":"bakery","confidence":0.95,"item_index":11,"total_items":15}
{"time":"2025-09-06T21:07:08.509276398+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"рыба красная филе","parsed":"рыба красная филе","category":"grocery","confidence":0.7,"item_index":12,"total_items":15}
{"time":"2025-09-06T21:07:08.510977565+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"кролик","parsed":"кролик","category":"grocery","confidence":0.7,"item_index":13,"total_items":15}
{"time":"2025-09-06T21:07:08.512632854+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"филе курицы 1 маленькая уп","parsed":"филе курицы 1 маленькая уп","category":"grocery","confidence":0.7,"item_index":14,"total_items":15}
{"time":"2025-09-06T21:07:08.514367943+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"сливки","parsed":"сливки","category":"grocery","confidence":0.7,"item_index":15,"total_items":15}
{"time":"2025-09-06T21:07:08.514387496+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","total_parsed":15,"successfully_stored":15}
{"time":"2025-09-06T21:07:08.515271394+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"щетка на швабру","parsed":"щетка на швабру","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.515904972+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"туалетная бумага","parsed":"туалетная бумага","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.516503691+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"мочалки для посуды. овощи- 3 огурца","parsed":"мочалки для посуды. овощи- 3 огурца","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.517097249+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"1 пачка кукурузы","parsed":"1 пачка кукурузы","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.517680145+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"лист салата","parsed":"лист салата","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.51829421+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"морковка 0","parsed":"морковка 0","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.518884768+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"5 кг","parsed":"5 кг","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.51952061+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"голубика 1 уп","parsed":"голубика 1 уп","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.520146707+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"пол капусты","parsed":"пол капусты","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.520816183+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"где овощи - салат цезарь","parsed":"где овощи - салат цезарь","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.521392359+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"bread","parsed":"bread","category":"bakery","confidence":0.95}
{"time":"2025-09-06T21:07:08.522075899+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"рыба красная филе","parsed":"рыба красная филе","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.522701296+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"кролик","parsed":"кролик","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.523405042+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"филе курицы 1 маленькая уп","parsed":"филе курицы 1 маленькая уп","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.524063261+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"сливки","parsed":"сливки","category":"grocery","confidence":0.7}
{"time":"2025-09-06T21:07:08.524096021+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-06T21:07:08.609014166+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"филе курицы 1 маленькая уп","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.633828299+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"туалетная бумага","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.662957352+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"морковка 0","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.68441751+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"где овощи - салат цезарь","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.705258917+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"пол капусты","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.730593878+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"щетка на швабру","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.754816699+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"мочалки для посуды. овощи- 3 огурца","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.773271766+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"1 пачка кукурузы","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.798986613+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"5 кг","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.823787671+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"голубика 1 уп","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.844599205+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"bread","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.866222465+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"кролик","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.891336231+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"рыба красная филе","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.91207475+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"сливки","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:07:08.933183611+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"лист салата","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:14:09.961326431+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T21:14:09.961486182+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T21:14:09.961545476+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T21:14:09.96165006+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T21:14:09.961817125+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-06T21:15:26.500359862+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T21:15:26.500549226+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T21:15:26.645691325+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T21:15:26.645725294+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T21:15:26.645732502+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T21:15:26.645867373+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T21:15:26.646299118+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T21:15:26.646341558+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T21:15:26.646373163+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T21:15:33.59033239+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:15:35.068131669+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:15:35.137401291+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-06T21:15:39.958485158+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T21:17:16.412921091+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:17:16.465419642+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-06T21:17:24.283453954+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:17:24.399618263+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T21:17:33.231410667+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T21:17:33.233056562+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-06T21:17:33.233265371+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","prompt_length":8497,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-06T21:17:33.233407863+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":\"Input: Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\nLanguage: en\",\"instructions\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\",\"max_tokens\":600,\"temperature\":0.1,\"store\":true,\"reasoning_effort\":\"medium\"}"}
{"time":"2025-09-06T21:17:33.865443438+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":400,"response_body":"{\n  \"error\": {\n    \"message\": \"Unsupported parameter: 'reasoning_effort'. In the Responses API, this parameter has moved to 'reasoning.effort'. Try again with the new parameter. See the API documentation for more information: https://platform.openai.com/docs/api-reference/responses/create.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": \"unsupported_parameter\"\n  }\n}"}
{"time":"2025-09-06T21:17:33.865544821+02:00","level":"ERROR","msg":"[MULTI] OpenAI API error","env":"local","status_code":400,"response":"{\n  \"error\": {\n    \"message\": \"Unsupported parameter: 'reasoning_effort'. In the Responses API, this parameter has moved to 'reasoning.effort'. Try again with the new parameter. See the API documentation for more information: https://platform.openai.com/docs/api-reference/responses/create.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": \"unsupported_parameter\"\n  }\n}"}
{"time":"2025-09-06T21:17:33.865619051+02:00","level":"ERROR","msg":"Failed to parse items with AI","env":"local","error":"responses API error: 400 - {\n  \"error\": {\n    \"message\": \"Unsupported parameter: 'reasoning_effort'. In the Responses API, this parameter has moved to 'reasoning.effort'. Try again with the new parameter. See the API documentation for more information: https://platform.openai.com/docs/api-reference/responses/create.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": \"unsupported_parameter\"\n  }\n}","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-06T21:17:33.865694441+02:00","level":"ERROR","msg":"AI parsing failed","env":"local","component":"shopping-service","error":"failed to parse items: responses API error: 400 - {\n  \"error\": {\n    \"message\": \"Unsupported parameter: 'reasoning_effort'. In the Responses API, this parameter has moved to 'reasoning.effort'. Try again with the new parameter. See the API documentation for more information: https://platform.openai.com/docs/api-reference/responses/create.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": \"unsupported_parameter\"\n  }\n}"}
{"time":"2025-09-06T21:17:33.865722987+02:00","level":"ERROR","msg":"Failed to add items to list with AI","env":"local","error":"failed to parse items with AI: failed to parse items: responses API error: 400 - {\n  \"error\": {\n    \"message\": \"Unsupported parameter: 'reasoning_effort'. In the Responses API, this parameter has moved to 'reasoning.effort'. Try again with the new parameter. See the API documentation for more information: https://platform.openai.com/docs/api-reference/responses/create.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": \"unsupported_parameter\"\n  }\n}"}
{"time":"2025-09-06T21:19:33.434637999+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T21:19:33.434759794+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T21:19:33.434800298+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T21:19:33.434859676+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T21:19:35.012555134+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T21:19:35.012658113+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T21:19:35.168790095+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T21:19:35.168921437+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T21:19:35.168952848+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T21:19:35.169167651+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T21:19:35.170027995+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T21:19:35.170105413+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T21:19:35.170145144+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T21:19:42.868576522+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:19:44.845269768+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:19:45.115388936+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T21:19:51.479699139+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T21:19:51.48238365+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-06T21:19:51.482734286+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","prompt_length":8497,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-06T21:19:51.482992115+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":\"Input: Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\nLanguage: en\",\"instructions\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\",\"max_tokens\":600,\"temperature\":0.1,\"store\":true,\"reasoning\":{\"effort\":\"medium\"}}"}
{"time":"2025-09-06T21:19:51.732588283+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":400,"response_body":"{\n  \"error\": {\n    \"message\": \"Unknown parameter: 'max_tokens'.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": \"max_tokens\",\n    \"code\": \"unknown_parameter\"\n  }\n}"}
{"time":"2025-09-06T21:19:51.732672098+02:00","level":"ERROR","msg":"[MULTI] OpenAI API error","env":"local","status_code":400,"response":"{\n  \"error\": {\n    \"message\": \"Unknown parameter: 'max_tokens'.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": \"max_tokens\",\n    \"code\": \"unknown_parameter\"\n  }\n}"}
{"time":"2025-09-06T21:19:51.732713969+02:00","level":"ERROR","msg":"Failed to parse items with AI","env":"local","error":"responses API error: 400 - {\n  \"error\": {\n    \"message\": \"Unknown parameter: 'max_tokens'.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": \"max_tokens\",\n    \"code\": \"unknown_parameter\"\n  }\n}","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-06T21:19:51.732814327+02:00","level":"ERROR","msg":"AI parsing failed","env":"local","component":"shopping-service","error":"failed to parse items: responses API error: 400 - {\n  \"error\": {\n    \"message\": \"Unknown parameter: 'max_tokens'.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": \"max_tokens\",\n    \"code\": \"unknown_parameter\"\n  }\n}"}
{"time":"2025-09-06T21:19:51.732840373+02:00","level":"ERROR","msg":"Failed to add items to list with AI","env":"local","error":"failed to parse items with AI: failed to parse items: responses API error: 400 - {\n  \"error\": {\n    \"message\": \"Unknown parameter: 'max_tokens'.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": \"max_tokens\",\n    \"code\": \"unknown_parameter\"\n  }\n}"}
{"time":"2025-09-06T21:25:17.615970264+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T21:25:17.61603091+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T21:25:17.616047856+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T21:25:17.616068378+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T21:25:19.539220234+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T21:25:19.539393693+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T21:25:19.688304756+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T21:25:19.68834011+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T21:25:19.688349208+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T21:25:19.688512054+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T21:25:19.688554929+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T21:25:19.688511954+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T21:25:19.688588992+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T21:25:26.664549806+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:25:27.662588461+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:25:27.798431623+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T21:25:29.114323738+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"етка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T21:25:29.116797592+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"етка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-06T21:25:29.1170874+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"етка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","prompt_length":8495,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-06T21:25:29.117273809+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"етка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"етка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: етка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"medium\"}}"}
{"time":"2025-09-06T21:25:35.215566917+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":429,"response_body":"{\n  \"error\": {\n    \"message\": \"You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.\",\n    \"type\": \"insufficient_quota\",\n    \"param\": null,\n    \"code\": \"insufficient_quota\"\n  }\n}"}
{"time":"2025-09-06T21:25:35.215658128+02:00","level":"ERROR","msg":"[MULTI] OpenAI API error","env":"local","status_code":429,"response":"{\n  \"error\": {\n    \"message\": \"You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.\",\n    \"type\": \"insufficient_quota\",\n    \"param\": null,\n    \"code\": \"insufficient_quota\"\n  }\n}"}
{"time":"2025-09-06T21:25:35.215708395+02:00","level":"ERROR","msg":"Failed to parse items with AI","env":"local","error":"responses API error: 429 - {\n  \"error\": {\n    \"message\": \"You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.\",\n    \"type\": \"insufficient_quota\",\n    \"param\": null,\n    \"code\": \"insufficient_quota\"\n  }\n}","raw_text":"етка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-06T21:25:35.215801986+02:00","level":"ERROR","msg":"AI parsing failed","env":"local","component":"shopping-service","error":"failed to parse items: responses API error: 429 - {\n  \"error\": {\n    \"message\": \"You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.\",\n    \"type\": \"insufficient_quota\",\n    \"param\": null,\n    \"code\": \"insufficient_quota\"\n  }\n}"}
{"time":"2025-09-06T21:25:35.215826937+02:00","level":"ERROR","msg":"Failed to add items to list with AI","env":"local","error":"failed to parse items with AI: failed to parse items: responses API error: 429 - {\n  \"error\": {\n    \"message\": \"You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.\",\n    \"type\": \"insufficient_quota\",\n    \"param\": null,\n    \"code\": \"insufficient_quota\"\n  }\n}"}
{"time":"2025-09-06T21:27:05.473743738+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:27:06.884810288+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:27:07.010740071+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T21:27:08.666931417+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T21:27:08.667887331+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-06T21:27:08.668017147+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","prompt_length":8497,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-06T21:27:08.66809203+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"medium\"}}"}
{"time":"2025-09-06T21:27:49.785376554+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bc8b0d0ddc8195a728d3febb3ee89c0e435ff327deead8\",\n  \"object\": \"response\",\n  \"created_at\": 1757186829,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bc8b0e1258819585ba21adb02882970e435ff327deead8\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bc8b312a4c81958a3e4d368eb814fb0e435ff327deead8\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0429\\u0435\\u0442\\u043a\\u0430 \\u043d\\u0430 \\u0448\\u0432\\u0430\\u0431\\u0440\\u0443\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"cleaning_supplies\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0442\\u0443\\u0430\\u043b\\u0435\\u0442\\u043d\\u0430\\u044f \\u0431\\u0443\\u043c\\u0430\\u0433\\u0430\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"paper_products\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0447\\u0430\\u043b\\u043a\\u0438 \\u0434\\u043b\\u044f \\u043f\\u043e\\u0441\\u0443\\u0434\\u044b\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"cleaning_supplies\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043e\\u0433\\u0443\\u0440\\u0446\\u044b\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"cucumber\\\",\\n    \\\"quantity_value\\\": 3.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0443\\u043a\\u0443\\u0440\\u0443\\u0437\\u044b\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"corn\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043b\\u0438\\u0441\\u0442 \\u0441\\u0430\\u043b\\u0430\\u0442\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"lettuce\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"carrot\\\",\\n    \\\"quantity_value\\\": 0.5,\\n    \\\"quantity_unit\\\": \\\"kg\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0433\\u043e\\u043b\\u0443\\u0431\\u0438\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"blueberries\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043f\\u043e\\u043b \\u043a\\u0430\\u043f\\u0443\\u0441\\u0442\\u044b\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"cabbage\\\",\\n    \\\"quantity_value\\\": 0.5,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u0430\\u043b\\u0430\\u0442 \\u0446\\u0435\\u0437\\u0430\\u0440\\u044c\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"lettuce\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u0430\\u043b\\u0430\\u0442 \\u0441 \\u0442\\u0443\\u043d\\u0446\\u043e\\u043c\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"salad\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0445\\u043b\\u0435\\u0431 \\u0446\\u0435\\u043b\\u044c\\u043d\\u043e\\u0437\\u0435\\u0440\\u043d\\u043e\\u0432\\u043e\\u0439\\\",\\n    \\\"category\\\": \\\"bakery\\\",\\n    \\\"subcategory\\\": \\\"bread\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0440\\u044b\\u0431\\u0430 \\u043a\\u0440\\u0430\\u0441\\u043d\\u0430\\u044f \\u0444\\u0438\\u043b\\u0435\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"fish\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0440\\u043e\\u043b\\u0438\\u043a\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"rabbit\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0444\\u0438\\u043b\\u0435 \\u043a\\u0443\\u0440\\u0438\\u0446\\u044b\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"chicken\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u043b\\u0438\\u0432\\u043a\\u0438\\\",\\n    \\\"category\\\": \\\"dairy\\\",\\n    \\\"subcategory\\\": \\\"cream\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"medium\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2428,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 8230,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 7360\n    },\n    \"total_tokens\": 10658\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-06T21:27:49.786333971+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","model":"gpt-5-nano","items_count":16,"tokens_used":10658,"reasoning_effort":"medium"}
{"time":"2025-09-06T21:27:49.786414948+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","results_count":16}
{"time":"2025-09-06T21:27:49.786462534+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"Щетка на швабру","category":"household","subcategory":"cleaning_supplies","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.786564081+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":2,"standardized_name":"туалетная бумага","category":"household","subcategory":"paper_products","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.786602575+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":3,"standardized_name":"мочалки для посуды","category":"household","subcategory":"cleaning_supplies","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.786635151+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":4,"standardized_name":"огурцы","category":"produce","subcategory":"cucumber","quantity_value":3,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.78666994+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":5,"standardized_name":"кукурузы","category":"produce","subcategory":"corn","quantity_value":1,"quantity_unit":"pack","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.786701766+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":6,"standardized_name":"лист салата","category":"produce","subcategory":"lettuce","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.78673294+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":7,"standardized_name":"морковка","category":"produce","subcategory":"carrot","quantity_value":0.5,"quantity_unit":"kg","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.786765599+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":8,"standardized_name":"голубика","category":"produce","subcategory":"blueberries","quantity_value":1,"quantity_unit":"pack","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.786798091+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":9,"standardized_name":"пол капусты","category":"produce","subcategory":"cabbage","quantity_value":0.5,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.786830378+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":10,"standardized_name":"салат цезарь","category":"produce","subcategory":"lettuce","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.786861896+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":11,"standardized_name":"салат с тунцом","category":"produce","subcategory":"salad","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.786894253+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":12,"standardized_name":"хлеб цельнозерновой","category":"bakery","subcategory":"bread","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.786925896+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":13,"standardized_name":"рыба красная филе","category":"meat","subcategory":"fish","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.786956727+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":14,"standardized_name":"кролик","category":"meat","subcategory":"rabbit","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.786987378+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":15,"standardized_name":"филе курицы","category":"meat","subcategory":"chicken","quantity_value":1,"quantity_unit":"pack","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.787020107+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":16,"standardized_name":"сливки","category":"dairy","subcategory":"cream","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:27:49.796434161+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"Щетка на швабру","parsed":"Щетка на швабру","category":"household","confidence":0.95,"item_index":1,"total_items":16}
{"time":"2025-09-06T21:27:49.799166902+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"туалетная бумага","parsed":"туалетная бумага","category":"household","confidence":0.95,"item_index":2,"total_items":16}
{"time":"2025-09-06T21:27:49.801567701+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"мочалки для посуды","parsed":"мочалки для посуды","category":"household","confidence":0.95,"item_index":3,"total_items":16}
{"time":"2025-09-06T21:27:49.803501972+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"огурцы","parsed":"огурцы","category":"produce","confidence":0.95,"item_index":4,"total_items":16}
{"time":"2025-09-06T21:27:49.805349214+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"кукурузы","parsed":"кукурузы","category":"produce","confidence":0.95,"item_index":5,"total_items":16}
{"time":"2025-09-06T21:27:49.807210672+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"лист салата","parsed":"лист салата","category":"produce","confidence":0.95,"item_index":6,"total_items":16}
{"time":"2025-09-06T21:27:49.808858021+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95,"item_index":7,"total_items":16}
{"time":"2025-09-06T21:27:49.810543079+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"голубика","parsed":"голубика","category":"produce","confidence":0.95,"item_index":8,"total_items":16}
{"time":"2025-09-06T21:27:49.812201643+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"пол капусты","parsed":"пол капусты","category":"produce","confidence":0.95,"item_index":9,"total_items":16}
{"time":"2025-09-06T21:27:49.813944011+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"салат цезарь","parsed":"салат цезарь","category":"produce","confidence":0.95,"item_index":10,"total_items":16}
{"time":"2025-09-06T21:27:49.815582184+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"салат с тунцом","parsed":"салат с тунцом","category":"produce","confidence":0.95,"item_index":11,"total_items":16}
{"time":"2025-09-06T21:27:49.817223043+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"хлеб цельнозерновой","parsed":"хлеб цельнозерновой","category":"bakery","confidence":0.95,"item_index":12,"total_items":16}
{"time":"2025-09-06T21:27:49.818894017+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"рыба красная филе","parsed":"рыба красная филе","category":"meat","confidence":0.95,"item_index":13,"total_items":16}
{"time":"2025-09-06T21:27:49.820596901+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"кролик","parsed":"кролик","category":"meat","confidence":0.95,"item_index":14,"total_items":16}
{"time":"2025-09-06T21:27:49.822211006+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"филе курицы","parsed":"филе курицы","category":"meat","confidence":0.95,"item_index":15,"total_items":16}
{"time":"2025-09-06T21:27:49.823770944+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"сливки","parsed":"сливки","category":"dairy","confidence":0.95,"item_index":16,"total_items":16}
{"time":"2025-09-06T21:27:49.82378378+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","total_parsed":16,"successfully_stored":16}
{"time":"2025-09-06T21:27:49.82470797+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"Щетка на швабру","parsed":"Щетка на швабру","category":"household","confidence":0.95}
{"time":"2025-09-06T21:27:49.825361029+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"туалетная бумага","parsed":"туалетная бумага","category":"household","confidence":0.95}
{"time":"2025-09-06T21:27:49.826023522+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"мочалки для посуды","parsed":"мочалки для посуды","category":"household","confidence":0.95}
{"time":"2025-09-06T21:27:49.82669512+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"огурцы","parsed":"огурцы","category":"produce","confidence":0.95}
{"time":"2025-09-06T21:27:49.827450399+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"кукурузы","parsed":"кукурузы","category":"produce","confidence":0.95}
{"time":"2025-09-06T21:27:49.828226689+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"лист салата","parsed":"лист салата","category":"produce","confidence":0.95}
{"time":"2025-09-06T21:27:49.828934149+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95}
{"time":"2025-09-06T21:27:49.829607419+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"голубика","parsed":"голубика","category":"produce","confidence":0.95}
{"time":"2025-09-06T21:27:49.830266167+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"пол капусты","parsed":"пол капусты","category":"produce","confidence":0.95}
{"time":"2025-09-06T21:27:49.831045457+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"салат цезарь","parsed":"салат цезарь","category":"produce","confidence":0.95}
{"time":"2025-09-06T21:27:49.83174565+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"салат с тунцом","parsed":"салат с тунцом","category":"produce","confidence":0.95}
{"time":"2025-09-06T21:27:49.8324898+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"хлеб цельнозерновой","parsed":"хлеб цельнозерновой","category":"bakery","confidence":0.95}
{"time":"2025-09-06T21:27:49.833307304+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"рыба красная филе","parsed":"рыба красная филе","category":"meat","confidence":0.95}
{"time":"2025-09-06T21:27:49.834107153+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"кролик","parsed":"кролик","category":"meat","confidence":0.95}
{"time":"2025-09-06T21:27:49.834903562+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"филе курицы","parsed":"филе курицы","category":"meat","confidence":0.95}
{"time":"2025-09-06T21:27:49.835706542+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"сливки","parsed":"сливки","category":"dairy","confidence":0.95}
{"time":"2025-09-06T21:27:49.835753652+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-06T21:27:49.927526823+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"туалетная бумага","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:49.947658387+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"морковка","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:49.977032567+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"рыба красная филе","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:49.998225104+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"филе курицы","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:50.021851812+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"салат с тунцом","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:50.052049419+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"пол капусты","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:50.07615033+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"Щетка на швабру","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:50.097829717+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"голубика","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:50.122171198+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"хлеб цельнозерновой","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:50.15219649+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"мочалки для посуды","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:50.179657668+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"сливки","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:50.200040561+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"кролик","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:50.220385007+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"огурцы","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:50.244778811+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"лист салата","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:50.274997957+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"кукурузы","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:27:50.293132887+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"салат цезарь","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:28:20.396723726+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:34:24.823593857+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T21:34:24.823753089+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T21:34:24.823801894+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T21:34:24.823886566+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T21:34:32.494809135+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T21:34:32.494918536+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T21:34:32.641511441+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T21:34:32.641600403+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T21:34:32.641624328+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T21:34:32.641888661+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T21:34:32.642488803+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T21:34:32.642643332+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T21:34:32.642694007+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T21:34:45.374840659+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:34:47.826741847+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:34:47.895628108+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-06T21:39:03.989918767+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T21:39:03.990022504+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T21:39:03.990061652+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T21:39:03.990114391+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T21:39:25.132328623+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T21:39:25.132491828+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T21:39:25.283828124+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T21:39:25.283917937+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T21:39:25.283936371+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T21:39:25.28438999+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T21:39:25.284519237+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T21:39:25.284629721+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T21:39:25.284703422+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T21:39:50.236024545+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:39:54.357808754+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:39:54.687505509+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-06T21:39:56.549123916+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":508225490,"username":"washerd","message":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","chat_id":508225490,"message_type":"text","command":""}
{"time":"2025-09-06T21:39:56.549850948+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-06T21:39:56.549983148+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","prompt_length":8497,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-06T21:39:56.550073475+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-06T21:40:09.741369945+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bc8e0d28888197bc575ede570b3d3d0d93d35aa1557a48\",\n  \"object\": \"response\",\n  \"created_at\": 1757187597,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bc8e0df9f081979a2c2b415f1d36c40d93d35aa1557a48\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bc8e14d4388197aac2df8fa78699a80d93d35aa1557a48\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0429\\u0435\\u0442\\u043a\\u0430 \\u043d\\u0430 \\u0448\\u0432\\u0430\\u0431\\u0440\\u0443\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"cleaning_supplies\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0442\\u0443\\u0430\\u043b\\u0435\\u0442\\u043d\\u0430\\u044f \\u0431\\u0443\\u043c\\u0430\\u0433\\u0430\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"paper_products\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0447\\u0430\\u043b\\u043a\\u0438 \\u0434\\u043b\\u044f \\u043f\\u043e\\u0441\\u0443\\u0434\\u044b\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"cleaning_supplies\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043e\\u0433\\u0443\\u0440\\u0446\\u044b\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 3.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0443\\u043a\\u0443\\u0440\\u0443\\u0437\\u0430\\\",\\n    \\\"category\\\": \\\"pantry\\\",\\n    \\\"subcategory\\\": \\\"canned_goods\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043b\\u0438\\u0441\\u0442 \\u0441\\u0430\\u043b\\u0430\\u0442\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 0.5,\\n    \\\"quantity_unit\\\": \\\"kg\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0433\\u043e\\u043b\\u0443\\u0431\\u0438\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"fruits\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0430\\u043f\\u0443\\u0441\\u0442\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 0.5,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u0430\\u043b\\u0430\\u0442 \\u0446\\u0435\\u0437\\u0430\\u0440\\u044c\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 0.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.6\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u0430\\u043b\\u0430\\u0442 \\u0441 \\u0442\\u0443\\u043d\\u0446\\u043e\\u043c\\\",\\n    \\\"category\\\": \\\"pantry\\\",\\n    \\\"subcategory\\\": \\\"canned_goods\\\",\\n    \\\"quantity_value\\\": 0.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.6\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0445\\u043b\\u0435\\u0431 \\u0446\\u0435\\u043b\\u044c\\u043d\\u043e\\u0437\\u0435\\u0440\\u043d\\u043e\\u0432\\u043e\\u0439\\\",\\n    \\\"category\\\": \\\"bakery\\\",\\n    \\\"subcategory\\\": \\\"bread\\\",\\n    \\\"quantity_value\\\": 0.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0440\\u044b\\u0431\\u0430 \\u043a\\u0440\\u0430\\u0441\\u043d\\u0430\\u044f \\u0444\\u0438\\u043b\\u0435\\\",\\n    \\\"category\\\": \\\"beverages\\\",\\n    \\\"subcategory\\\": \\\"fish\\\",\\n    \\\"quantity_value\\\": 0.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.6\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0440\\u043e\\u043b\\u0438\\u043a\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"rabbit\\\",\\n    \\\"quantity_value\\\": 0.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.7\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0444\\u0438\\u043b\\u0435 \\u043a\\u0443\\u0440\\u0438\\u0446\\u044b\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"chicken\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u043b\\u0438\\u0432\\u043a\\u0438\\\",\\n    \\\"category\\\": \\\"dairy\\\",\\n    \\\"subcategory\\\": \\\"cream\\\",\\n    \\\"quantity_value\\\": 0.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2428,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 2445,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 1472\n    },\n    \"total_tokens\": 4873\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-06T21:40:09.741528386+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","model":"gpt-5-nano","items_count":16,"tokens_used":4873,"reasoning_effort":"low"}
{"time":"2025-09-06T21:40:09.741538727+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","results_count":16}
{"time":"2025-09-06T21:40:09.741543748+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"Щетка на швабру","category":"household","subcategory":"cleaning_supplies","quantity_value":1,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-06T21:40:09.741554005+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":2,"standardized_name":"туалетная бумага","category":"household","subcategory":"paper_products","quantity_value":1,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:40:09.741557542+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":3,"standardized_name":"мочалки для посуды","category":"household","subcategory":"cleaning_supplies","quantity_value":1,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-06T21:40:09.741560507+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":4,"standardized_name":"огурцы","category":"produce","subcategory":"vegetables","quantity_value":3,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:40:09.74156614+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":5,"standardized_name":"кукуруза","category":"pantry","subcategory":"canned_goods","quantity_value":1,"quantity_unit":"pack","confidence_score":0.9}
{"time":"2025-09-06T21:40:09.741569008+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":6,"standardized_name":"лист салата","category":"produce","subcategory":"vegetables","quantity_value":1,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-06T21:40:09.741571793+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":7,"standardized_name":"морковка","category":"produce","subcategory":"vegetables","quantity_value":0.5,"quantity_unit":"kg","confidence_score":0.95}
{"time":"2025-09-06T21:40:09.741575052+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":8,"standardized_name":"голубика","category":"produce","subcategory":"fruits","quantity_value":1,"quantity_unit":"pack","confidence_score":0.9}
{"time":"2025-09-06T21:40:09.741577964+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":9,"standardized_name":"капуста","category":"produce","subcategory":"vegetables","quantity_value":0.5,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-06T21:40:09.741580749+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":10,"standardized_name":"салат цезарь","category":"produce","subcategory":"vegetables","quantity_value":0,"quantity_unit":"pieces","confidence_score":0.6}
{"time":"2025-09-06T21:40:09.741585158+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":11,"standardized_name":"салат с тунцом","category":"pantry","subcategory":"canned_goods","quantity_value":0,"quantity_unit":"pieces","confidence_score":0.6}
{"time":"2025-09-06T21:40:09.741588018+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":12,"standardized_name":"хлеб цельнозерновой","category":"bakery","subcategory":"bread","quantity_value":0,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T21:40:09.741590805+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":13,"standardized_name":"рыба красная филе","category":"beverages","subcategory":"fish","quantity_value":0,"quantity_unit":"pieces","confidence_score":0.6}
{"time":"2025-09-06T21:40:09.741593816+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":14,"standardized_name":"кролик","category":"meat","subcategory":"rabbit","quantity_value":0,"quantity_unit":"pieces","confidence_score":0.7}
{"time":"2025-09-06T21:40:09.741599106+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":15,"standardized_name":"филе курицы","category":"meat","subcategory":"chicken","quantity_value":1,"quantity_unit":"pack","confidence_score":0.95}
{"time":"2025-09-06T21:40:09.741601863+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":16,"standardized_name":"сливки","category":"dairy","subcategory":"cream","quantity_value":0,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-06T21:40:09.748224771+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"Щетка на швабру","parsed":"Щетка на швабру","category":"household","confidence":0.9,"item_index":1,"total_items":16}
{"time":"2025-09-06T21:40:09.750065227+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"туалетная бумага","parsed":"туалетная бумага","category":"household","confidence":0.95,"item_index":2,"total_items":16}
{"time":"2025-09-06T21:40:09.752164485+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"мочалки для посуды","parsed":"мочалки для посуды","category":"household","confidence":0.9,"item_index":3,"total_items":16}
{"time":"2025-09-06T21:40:09.754011984+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"огурцы","parsed":"огурцы","category":"produce","confidence":0.95,"item_index":4,"total_items":16}
{"time":"2025-09-06T21:40:09.755567943+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"кукуруза","parsed":"кукуруза","category":"pantry","confidence":0.9,"item_index":5,"total_items":16}
{"time":"2025-09-06T21:40:09.757058491+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"лист салата","parsed":"лист салата","category":"produce","confidence":0.9,"item_index":6,"total_items":16}
{"time":"2025-09-06T21:40:09.758680847+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95,"item_index":7,"total_items":16}
{"time":"2025-09-06T21:40:09.760304816+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"голубика","parsed":"голубика","category":"produce","confidence":0.9,"item_index":8,"total_items":16}
{"time":"2025-09-06T21:40:09.761798121+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"капуста","parsed":"капуста","category":"produce","confidence":0.9,"item_index":9,"total_items":16}
{"time":"2025-09-06T21:40:09.763270375+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"салат цезарь","parsed":"салат цезарь","category":"produce","confidence":0.6,"item_index":10,"total_items":16}
{"time":"2025-09-06T21:40:09.764917847+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"салат с тунцом","parsed":"салат с тунцом","category":"pantry","confidence":0.6,"item_index":11,"total_items":16}
{"time":"2025-09-06T21:40:09.766519988+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"хлеб цельнозерновой","parsed":"хлеб цельнозерновой","category":"bakery","confidence":0.95,"item_index":12,"total_items":16}
{"time":"2025-09-06T21:40:09.767969885+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"рыба красная филе","parsed":"рыба красная филе","category":"beverages","confidence":0.6,"item_index":13,"total_items":16}
{"time":"2025-09-06T21:40:09.76946547+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"кролик","parsed":"кролик","category":"meat","confidence":0.7,"item_index":14,"total_items":16}
{"time":"2025-09-06T21:40:09.771209321+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"филе курицы","parsed":"филе курицы","category":"meat","confidence":0.95,"item_index":15,"total_items":16}
{"time":"2025-09-06T21:40:09.772923424+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"сливки","parsed":"сливки","category":"dairy","confidence":0.9,"item_index":16,"total_items":16}
{"time":"2025-09-06T21:40:09.77293389+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","total_parsed":16,"successfully_stored":16}
{"time":"2025-09-06T21:40:09.773842153+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"Щетка на швабру","parsed":"Щетка на швабру","category":"household","confidence":0.9}
{"time":"2025-09-06T21:40:09.774440928+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"туалетная бумага","parsed":"туалетная бумага","category":"household","confidence":0.95}
{"time":"2025-09-06T21:40:09.774981662+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"мочалки для посуды","parsed":"мочалки для посуды","category":"household","confidence":0.9}
{"time":"2025-09-06T21:40:09.775569548+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"огурцы","parsed":"огурцы","category":"produce","confidence":0.95}
{"time":"2025-09-06T21:40:09.776195178+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"кукуруза","parsed":"кукуруза","category":"pantry","confidence":0.9}
{"time":"2025-09-06T21:40:09.776876246+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"лист салата","parsed":"лист салата","category":"produce","confidence":0.9}
{"time":"2025-09-06T21:40:09.777539595+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95}
{"time":"2025-09-06T21:40:09.778189139+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"голубика","parsed":"голубика","category":"produce","confidence":0.9}
{"time":"2025-09-06T21:40:09.778799142+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"капуста","parsed":"капуста","category":"produce","confidence":0.9}
{"time":"2025-09-06T21:40:09.779420655+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"салат цезарь","parsed":"салат цезарь","category":"produce","confidence":0.6}
{"time":"2025-09-06T21:40:09.78007758+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"салат с тунцом","parsed":"салат с тунцом","category":"pantry","confidence":0.6}
{"time":"2025-09-06T21:40:09.780602045+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"хлеб цельнозерновой","parsed":"хлеб цельнозерновой","category":"bakery","confidence":0.95}
{"time":"2025-09-06T21:40:09.781116787+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"рыба красная филе","parsed":"рыба красная филе","category":"beverages","confidence":0.6}
{"time":"2025-09-06T21:40:09.781627967+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"кролик","parsed":"кролик","category":"meat","confidence":0.7}
{"time":"2025-09-06T21:40:09.782136249+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"филе курицы","parsed":"филе курицы","category":"meat","confidence":0.95}
{"time":"2025-09-06T21:40:09.782678684+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"сливки","parsed":"сливки","category":"dairy","confidence":0.9}
{"time":"2025-09-06T21:40:09.782692261+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-06T21:40:09.866044451+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"кролик","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:09.890691027+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"капуста","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:09.921200904+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"туалетная бумага","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:09.946609523+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"голубика","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:09.967305474+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"огурцы","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:09.99421666+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"мочалки для посуды","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:10.033678178+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"сливки","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:10.061639587+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"салат с тунцом","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:10.085540036+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"филе курицы","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:10.106178636+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"Щетка на швабру","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:10.12456301+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"кукуруза","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:10.144704154+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"морковка","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:10.1738345+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"салат цезарь","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:10.201442715+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"рыба красная филе","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:10.235181238+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"хлеб цельнозерновой","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:10.251749942+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_added_notification","item_name":"лист салата","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:35.495920736+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T21:40:52.485747057+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"li_t_5b905390_08e9eccc","chat_id":508225490}
{"time":"2025-09-06T21:40:52.61360972+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_completed_notification","item_name":"Щетка на швабру","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:40:56.721654266+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"li_t_5b905390_08e9eccc","chat_id":508225490}
{"time":"2025-09-06T21:40:56.855807682+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_uncompleted_notification","item_name":"Щетка на швабру","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:41:00.392743036+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"li_t_5b905390_08e9eccc","chat_id":508225490}
{"time":"2025-09-06T21:41:00.508790787+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_completed_notification","item_name":"Щетка на швабру","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:41:01.519819029+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"li_t_5b905390_93c6d5b7","chat_id":508225490}
{"time":"2025-09-06T21:41:01.783101274+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_completed_notification","item_name":"туалетная бумага","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:41:02.52723842+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"li_t_5b905390_b21d64a8","chat_id":508225490}
{"time":"2025-09-06T21:41:02.743677542+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_completed_notification","item_name":"мочалки для посуды","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:41:03.193594695+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"li_t_5b905390_33911619","chat_id":508225490}
{"time":"2025-09-06T21:41:03.578571408+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":456230761,"template_name":"item_completed_notification","item_name":"огурцы","list_name":"на субботу","actor":"@washerd"}
{"time":"2025-09-06T21:52:34.670286804+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-06T21:52:34.670329813+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-06T21:52:34.670336584+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-06T21:52:34.670346529+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-06T21:52:36.150628988+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-06T21:52:36.150747313+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-06T21:52:36.289460111+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-06T21:52:36.289485126+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-06T21:52:36.289490382+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-06T21:52:36.289663012+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-06T21:52:36.289826188+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-06T21:52:36.289886582+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-06T21:52:36.289919005+02:00","level":"INFO","msg":"Starting Telegram bot","env":"local","bot_username":"shopping_service_bot"}
{"time":"2025-09-06T21:59:21.975750361+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":456230761}
{"time":"2025-09-06T21:59:41.503817348+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/start","chat_id":456230761,"message_type":"command","command":"start"}
{"time":"2025-09-06T21:59:49.913028353+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/help","chat_id":456230761,"message_type":"command","command":"help"}
{"time":"2025-09-06T21:59:58.681734994+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"/createlist","chat_id":456230761,"message_type":"command","command":"createlist"}
{"time":"2025-09-06T22:00:01.518794686+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"createlist_family_e204dcfd-b89d-4cc5-93d1-1c1a29e2f724","chat_id":456230761}
{"time":"2025-09-06T22:00:01.660229765+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":456230761,"state":"creating_list_for_family","value":"e204dcfd-b89d-4cc5-93d1-1c1a29e2f724"}
{"time":"2025-09-06T22:00:10.421901315+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"Пожрать","chat_id":456230761,"message_type":"text","command":""}
{"time":"2025-09-06T22:00:10.425990773+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":456230761,"state":"creating_list_for_family"}
{"time":"2025-09-06T22:00:10.588896401+02:00","level":"INFO","msg":"Sent family new list notification","env":"local","member_telegram_id":508225490,"list_name":"Пожрать","family_name":"Семья","created_by":"Владислава"}
{"time":"2025-09-06T22:00:13.329061287+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_additem_4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4","chat_id":456230761}
{"time":"2025-09-06T22:00:13.435678128+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":456230761,"state":"adding_item_to_list","value":"4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4"}
{"time":"2025-09-06T22:00:26.1219714+02:00","level":"INFO","msg":"Received message","env":"local","component":"telegram_bot","user_id":456230761,"username":"","message":"Лече, малинка","chat_id":456230761,"message_type":"text","command":""}
{"time":"2025-09-06T22:00:26.12346663+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Лече, малинка","language":"uk","user_id":"a7eb2db9-6702-4768-b99a-26cd381249e9"}
{"time":"2025-09-06T22:00:26.123649969+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"Лече, малинка","language":"uk","prompt_length":8047,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-06T22:00:26.123736829+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"Лече, малинка","language":"uk","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"Лече, малинка\\\"\\nLanguage: uk\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: Лече, малинка\\nLanguage: uk\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-06T22:00:34.229825056+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bc92da8a908195aad1d68148046f410da6f3c89c6df503\",\n  \"object\": \"response\",\n  \"created_at\": 1757188826,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bc92dc8f1c8195bcc418f5c7aa7da90da6f3c89c6df503\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bc92e14c908195a1e8541f37e45aa30da6f3c89c6df503\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u041b\\u0435\\u0447\\u0435\\\",\\n    \\\"category\\\": \\\"dairy\\\",\\n    \\\"subcategory\\\": \\\"milk\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.4\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u0430\\u043b\\u0438\\u043d\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"fruits\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2214,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 999,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 896\n    },\n    \"total_tokens\": 3213\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-06T22:00:34.229977289+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"Лече, малинка","language":"uk","model":"gpt-5-nano","items_count":2,"tokens_used":3213,"reasoning_effort":"low"}
{"time":"2025-09-06T22:00:34.229991657+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"Лече, малинка","language":"uk","results_count":2}
{"time":"2025-09-06T22:00:34.229997147+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"Лече","category":"dairy","subcategory":"milk","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.4}
{"time":"2025-09-06T22:00:34.23001443+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":2,"standardized_name":"малина","category":"produce","subcategory":"fruits","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-06T22:00:34.237515549+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"3b743c1c-b9d8-4976-abbd-5716c548d929","parsed_id":"71953342-160e-48df-83b7-c2f9cc32d1c5"}
{"time":"2025-09-06T22:00:34.237551755+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"Лече, малинка","parsed":"Лече","category":"dairy","confidence":0.4,"item_index":1,"total_items":2}
{"time":"2025-09-06T22:00:34.238423065+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"3b743c1c-b9d8-4976-abbd-5716c548d929","parsed_id":"770e4ad0-4fb1-4694-ab76-e5e0e0c52aef"}
{"time":"2025-09-06T22:00:34.238445721+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"Лече, малинка","parsed":"малина","category":"produce","confidence":0.95,"item_index":2,"total_items":2}
{"time":"2025-09-06T22:00:34.238455197+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"Лече, малинка","language":"uk","total_parsed":2,"successfully_stored":2}
{"time":"2025-09-06T22:00:34.239401171+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"Лече","parsed":"Лече","category":"dairy","confidence":0.4}
{"time":"2025-09-06T22:00:34.24010566+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"малина","parsed":"малина","category":"produce","confidence":0.95}
{"time":"2025-09-06T22:00:34.240129803+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":456230761,"state":"adding_item_to_list"}
{"time":"2025-09-06T22:00:34.315993932+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":508225490,"template_name":"item_added_notification","item_name":"Лече","list_name":"Пожрать","actor":"Владислава"}
{"time":"2025-09-06T22:00:34.345154024+02:00","level":"INFO","msg":"Sent item edit notification","env":"local","member_telegram_id":508225490,"template_name":"item_added_notification","item_name":"малина","list_name":"Пожрать","actor":"Владислава"}
{"time":"2025-09-06T22:00:41.207701134+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_additem_4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4","chat_id":456230761}
{"time":"2025-09-06T22:00:41.315047257+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":456230761,"state":"adding_item_to_list","value":"4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4"}
{"time":"2025-09-06T22:00:50.225090686+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":456230761,"data":"list_view_4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4","chat_id":456230761}
{"time":"2025-09-06T22:52:25.637750229+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4","chat_id":508225490}
{"time":"2025-09-06T22:52:29.409454609+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4","chat_id":508225490}
{"time":"2025-09-06T22:52:29.463842792+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-06T22:52:32.887657461+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-06T22:52:36.463144737+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-06T22:52:39.766272035+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-07T07:49:53.910748886+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T07:49:57.946338859+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T07:49:58.012355162+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-07T07:50:00.108732328+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T07:50:00.19469909+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-07T08:05:20.142513389+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_additem_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T08:05:20.249770556+02:00","level":"INFO","msg":"Storing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"5b905390-b306-49a3-a256-4976be3d9cac"}
{"time":"2025-09-07T08:05:22.350758508+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T08:05:24.502536131+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T08:05:24.599259612+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-07T08:05:29.063023725+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-07T08:05:33.126321159+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T08:05:43.940018236+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-07T08:05:46.117853738+02:00","level":"INFO","msg":"Received callback query","env":"local","component":"telegram_bot","user_id":508225490,"data":"list_view_4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4","chat_id":508225490}
{"time":"2025-09-07T08:53:41.312788865+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T08:53:41.312923295+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T08:53:41.312956224+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T08:53:41.313003052+02:00","level":"INFO","msg":"Bot context cancelled, stopping","env":"local"}
{"time":"2025-09-07T09:05:18.959793874+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T09:05:18.959914714+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T09:05:19.134046802+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T09:05:19.134123201+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T09:05:19.134150039+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T09:05:19.134623219+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T09:05:19.134891218+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T09:05:19.135042261+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T09:05:19.135131343+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T09:11:26.867725705+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T09:11:26.867903562+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T09:11:27.020829539+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T09:11:27.020917313+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T09:11:27.020945071+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T09:11:27.021303398+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T09:11:27.021969442+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T09:11:27.022120804+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T09:11:27.022228684+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T09:11:52.176345486+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/start","is_command":true}
{"time":"2025-09-07T09:20:56.157908439+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T09:20:56.158029899+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T09:20:56.304407562+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T09:20:56.304428555+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T09:20:56.304434731+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T09:20:56.3047138+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T09:20:56.304820323+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T09:20:56.304855458+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T09:20:56.304893991+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T09:20:56.304994502+02:00","level":"ERROR","msg":"HTTP server error","env":"local","error":"failed to listen: listen tcp4 0.0.0.0:3001: bind: address already in use"}
{"time":"2025-09-07T09:21:11.270354232+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T09:21:11.270527781+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T09:21:11.270581711+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T09:21:11.270643818+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T09:21:11.270688508+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T09:21:11.273767713+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T09:21:11.273869627+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T09:38:47.952774283+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/start","is_command":true}
{"time":"2025-09-07T09:51:45.601182262+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T09:51:45.601316982+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T09:51:45.735105363+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T09:51:45.735130612+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T09:51:45.735139729+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T09:51:45.735256416+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T09:51:45.735408374+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T09:51:45.735473923+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T09:51:45.735497301+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T09:51:53.541294453+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T09:51:53.5413623+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T09:51:53.541373193+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T09:51:53.541386875+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T09:51:53.541394303+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T09:51:53.543395317+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T09:51:53.543409846+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T09:52:19.243816746+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/start","is_command":true}
{"time":"2025-09-07T09:52:23.449364299+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/help","is_command":true}
{"time":"2025-09-07T09:52:26.398094326+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/createlist","is_command":true}
{"time":"2025-09-07T09:52:29.660950636+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/lists","is_command":true}
{"time":"2025-09-07T09:52:34.06658911+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T09:52:46.314734843+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T09:52:46.385348277+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-07T09:52:50.366116067+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"li_t_5b905390_e101b2c8","chat_id":508225490}
{"time":"2025-09-07T09:52:55.779570514+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"li_t_5b905390_e101b2c8","chat_id":508225490}
{"time":"2025-09-07T11:01:10.053099219+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T11:01:10.177290852+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-07T11:01:12.225105218+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T11:01:12.325350638+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-07T11:01:13.491304658+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-07T11:01:18.522155096+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T11:01:20.065738236+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T11:01:20.175404723+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-07T11:01:21.95946438+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-07T11:01:23.30414752+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4","chat_id":508225490}
{"time":"2025-09-07T11:01:24.901620642+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4","chat_id":508225490}
{"time":"2025-09-07T11:01:25.012658942+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4"}
{"time":"2025-09-07T11:01:25.012689862+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4"}
{"time":"2025-09-07T11:01:26.158290675+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4","chat_id":508225490}
{"time":"2025-09-07T11:01:28.582445623+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_4ecccf9c-f2ac-41d7-b50d-cd04bb6acfe4","chat_id":508225490}
{"time":"2025-09-07T11:01:28.641189775+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-07T11:01:29.474776035+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-07T11:01:30.762401035+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T11:01:47.510047266+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","is_command":false}
{"time":"2025-09-07T11:01:47.512641654+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T11:01:47.512750021+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","prompt_length":8497,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T11:01:47.512818445+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T11:02:04.432415556+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bd49fc540881979028477eac4e1c3006d231711b58d906\",\n  \"object\": \"response\",\n  \"created_at\": 1757235708,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bd49fe27c88197999dd32a4766126706d231711b58d906\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bd4a075b4481978f185566b3f17abd06d231711b58d906\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0429\\u0435\\u0442\\u043a\\u0430 \\u043d\\u0430 \\u0448\\u0432\\u0430\\u0431\\u0440\\u0443\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"cleaning_supplies\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0442\\u0443\\u0430\\u043b\\u0435\\u0442\\u043d\\u0430\\u044f \\u0431\\u0443\\u043c\\u0430\\u0433\\u0430\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"paper_products\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0447\\u0430\\u043b\\u043a\\u0438 \\u0434\\u043b\\u044f \\u043f\\u043e\\u0441\\u0443\\u0434\\u044b\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"cleaning_supplies\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043e\\u0433\\u0443\\u0440\\u0446\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 3.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0443\\u043a\\u0443\\u0440\\u0443\\u0437\\u0430\\\",\\n    \\\"category\\\": \\\"pantry\\\",\\n    \\\"subcategory\\\": \\\"canned_goods\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043b\\u0438\\u0441\\u0442 \\u0441\\u0430\\u043b\\u0430\\u0442\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 0.5,\\n    \\\"quantity_unit\\\": \\\"kg\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0433\\u043e\\u043b\\u0443\\u0431\\u0438\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"berries\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0430\\u043f\\u0443\\u0441\\u0442\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 0.5,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u0430\\u043b\\u0430\\u0442 \\u0446\\u0435\\u0437\\u0430\\u0440\\u044c\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"salad\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.85\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u0430\\u043b\\u0430\\u0442 \\u0441 \\u0442\\u0443\\u043d\\u0446\\u043e\\u043c\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"salad\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.85\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0445\\u043b\\u0435\\u0431 \\u0446\\u0435\\u043b\\u044c\\u043d\\u043e\\u0437\\u0435\\u0440\\u043d\\u043e\\u0432\\u043e\\u0439\\\",\\n    \\\"category\\\": \\\"bakery\\\",\\n    \\\"subcategory\\\": \\\"bread\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0440\\u044b\\u0431\\u0430 \\u043a\\u0440\\u0430\\u0441\\u043d\\u0430\\u044f \\u0444\\u0438\\u043b\\u0435\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"fish\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.85\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0440\\u043e\\u043b\\u0438\\u043a\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"rabbit\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.85\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0444\\u0438\\u043b\\u0435 \\u043a\\u0443\\u0440\\u0438\\u0446\\u044b\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"chicken\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u043b\\u0438\\u0432\\u043a\\u0438\\\",\\n    \\\"category\\\": \\\"dairy\\\",\\n    \\\"subcategory\\\": \\\"cream\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2428,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 2668,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 1728\n    },\n    \"total_tokens\": 5096\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T11:02:04.433791286+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","model":"gpt-5-nano","items_count":16,"tokens_used":5096,"reasoning_effort":"low"}
{"time":"2025-09-07T11:02:04.433843492+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","results_count":16}
{"time":"2025-09-07T11:02:04.433866654+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"Щетка на швабру","category":"household","subcategory":"cleaning_supplies","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T11:02:04.433897264+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":2,"standardized_name":"туалетная бумага","category":"household","subcategory":"paper_products","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T11:02:04.433912966+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":3,"standardized_name":"мочалки для посуды","category":"household","subcategory":"cleaning_supplies","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T11:02:04.433927041+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":4,"standardized_name":"огурца","category":"produce","subcategory":"vegetables","quantity_value":3,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T11:02:04.43394268+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":5,"standardized_name":"кукуруза","category":"pantry","subcategory":"canned_goods","quantity_value":1,"quantity_unit":"pack","confidence_score":0.9}
{"time":"2025-09-07T11:02:04.433957397+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":6,"standardized_name":"лист салата","category":"produce","subcategory":"vegetables","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T11:02:04.43397162+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":7,"standardized_name":"морковка","category":"produce","subcategory":"vegetables","quantity_value":0.5,"quantity_unit":"kg","confidence_score":0.95}
{"time":"2025-09-07T11:02:04.433986167+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":8,"standardized_name":"голубика","category":"produce","subcategory":"berries","quantity_value":1,"quantity_unit":"pack","confidence_score":0.9}
{"time":"2025-09-07T11:02:04.434000552+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":9,"standardized_name":"капуста","category":"produce","subcategory":"vegetables","quantity_value":0.5,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T11:02:04.434020775+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":10,"standardized_name":"салат цезарь","category":"produce","subcategory":"salad","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.85}
{"time":"2025-09-07T11:02:04.434035706+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":11,"standardized_name":"салат с тунцом","category":"produce","subcategory":"salad","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.85}
{"time":"2025-09-07T11:02:04.434049938+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":12,"standardized_name":"хлеб цельнозерновой","category":"bakery","subcategory":"bread","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T11:02:04.434063883+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":13,"standardized_name":"рыба красная филе","category":"meat","subcategory":"fish","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.85}
{"time":"2025-09-07T11:02:04.434077767+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":14,"standardized_name":"кролик","category":"meat","subcategory":"rabbit","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.85}
{"time":"2025-09-07T11:02:04.434091188+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":15,"standardized_name":"филе курицы","category":"meat","subcategory":"chicken","quantity_value":1,"quantity_unit":"pack","confidence_score":0.9}
{"time":"2025-09-07T11:02:04.434104979+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":16,"standardized_name":"сливки","category":"dairy","subcategory":"cream","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T11:02:04.43629884+02:00","level":"ERROR","msg":"Failed to store original item","env":"local","error":"failed to insert original item: ERROR: value too long for type character varying(255) (SQLSTATE 22001)","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки"}
{"time":"2025-09-07T11:02:04.436346887+02:00","level":"ERROR","msg":"AI parsing failed","env":"local","component":"shopping-service","error":"failed to store original item: failed to insert original item: ERROR: value too long for type character varying(255) (SQLSTATE 22001)"}
{"time":"2025-09-07T11:02:04.436366659+02:00","level":"ERROR","msg":"Failed to add items to list with AI","env":"local","error":"failed to parse items with AI: failed to store original item: failed to insert original item: ERROR: value too long for type character varying(255) (SQLSTATE 22001)"}
{"time":"2025-09-07T11:02:04.524380768+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T14:19:43.510852894+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T14:19:43.51111016+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T14:19:43.650088846+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T14:19:43.650173527+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T14:19:43.650194517+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T14:19:43.650608837+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T14:19:43.6510646+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T14:19:43.652002236+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T14:19:43.652087438+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T14:20:14.026686303+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T14:20:14.026787232+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T14:20:14.026829851+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T14:20:14.026895086+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T14:20:14.026918488+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T14:20:14.029282172+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T14:20:14.029347689+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T14:22:34.332355577+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T14:22:34.332574021+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T14:22:34.486100276+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T14:22:34.486188355+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T14:22:34.486218236+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T14:22:34.486628806+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T14:22:34.48714726+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T14:22:34.487321042+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T14:22:34.487438528+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T14:22:54.42072771+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T14:22:54.420882421+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T14:22:54.420953629+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T14:22:54.421020797+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T14:22:54.421067926+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T14:22:54.424013779+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T14:22:54.424092024+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T14:24:21.906048225+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T14:24:21.906326978+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T14:24:22.073092409+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T14:24:22.07321556+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T14:24:22.07327108+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T14:24:22.073720195+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T14:24:22.073791328+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T14:24:22.073753815+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T14:24:22.075100094+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T14:24:35.09995682+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T14:24:35.226388782+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message"}
{"time":"2025-09-07T14:33:41.934526733+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T14:33:41.934609839+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T14:33:41.934634534+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T14:33:41.934670748+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T14:33:41.934690185+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T14:33:41.936329018+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T14:33:41.936369648+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T14:33:43.503088824+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T14:33:43.503272467+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T14:33:43.655868786+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T14:33:43.655949893+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T14:33:43.655976991+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T14:33:43.656121036+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T14:33:43.656319961+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T14:33:43.65639666+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T14:33:43.656455735+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T14:33:50.137005076+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T14:33:55.841991408+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-07T14:33:57.808915449+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T14:33:58.884034489+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_5b905390-b306-49a3-a256-4976be3d9cac","chat_id":508225490}
{"time":"2025-09-07T14:34:01.703278295+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-07T14:34:04.423990666+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/help","is_command":true}
{"time":"2025-09-07T14:34:05.842551342+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/createlist","is_command":true}
{"time":"2025-09-07T14:37:24.117715877+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/start","is_command":true}
{"time":"2025-09-07T14:37:25.982039631+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/help","is_command":true}
{"time":"2025-09-07T14:37:28.627000121+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/status","is_command":true}
{"time":"2025-09-07T14:37:28.62713938+02:00","level":"ERROR","msg":"Failed to render status template","env":"local","error":"failed to execute template status.html for locale en: template: status.html:4:29: executing \"status.html\" at <.LastName>: can't evaluate field LastName in type commands.StatusTemplateData"}
{"time":"2025-09-07T14:37:28.693299634+02:00","level":"ERROR","msg":"Command execution failed","env":"local","error":"failed to execute template status.html for locale en: template: status.html:4:29: executing \"status.html\" at <.LastName>: can't evaluate field LastName in type commands.StatusTemplateData","command":"status"}
{"time":"2025-09-07T14:37:52.242839252+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/myid","is_command":true}
{"time":"2025-09-07T14:49:29.428946607+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T14:49:29.42911005+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T14:49:29.429163485+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T14:49:29.429236537+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T14:49:29.429321438+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T14:49:29.431611039+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T14:49:29.431674036+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T14:49:30.837211648+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T14:49:30.837374051+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T14:49:30.999119242+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T14:49:30.999262118+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T14:49:30.999292083+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T14:49:30.999846376+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T14:49:31.000222072+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T14:49:31.000444244+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T14:49:31.000521164+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T14:49:37.388576301+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/start","is_command":true}
{"time":"2025-09-07T14:49:38.889309778+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/help","is_command":true}
{"time":"2025-09-07T14:49:45.208425057+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/status","is_command":true}
{"time":"2025-09-07T14:49:45.208649422+02:00","level":"ERROR","msg":"Failed to render status template","env":"local","error":"failed to execute template status.html for locale en: template: status.html:4:29: executing \"status.html\" at <.LastName>: can't evaluate field LastName in type commands.StatusTemplateData"}
{"time":"2025-09-07T14:49:45.286529497+02:00","level":"ERROR","msg":"Command execution failed","env":"local","error":"failed to execute template status.html for locale en: template: status.html:4:29: executing \"status.html\" at <.LastName>: can't evaluate field LastName in type commands.StatusTemplateData","command":"status"}
{"time":"2025-09-07T14:54:20.556284856+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T14:54:20.556471874+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T14:54:20.556535612+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T14:54:20.556613825+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T14:54:20.556652047+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T14:54:20.559385156+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T14:54:20.559463066+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T14:54:21.879359801+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T14:54:21.879526373+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T14:54:22.051380433+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T14:54:22.051509969+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T14:54:22.051535588+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T14:54:22.051825889+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T14:54:22.052411182+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T14:54:22.052532667+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T14:54:22.052718763+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T14:54:26.741672644+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/status","is_command":true}
{"time":"2025-09-07T14:54:59.118334612+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/users","is_command":true}
{"time":"2025-09-07T14:55:02.352316159+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/authorize","is_command":true}
{"time":"2025-09-07T14:55:06.459798222+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/revoke","is_command":true}
{"time":"2025-09-07T14:55:08.880984242+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/families","is_command":true}
{"time":"2025-09-07T14:55:08.882548207+02:00","level":"ERROR","msg":"Failed to render families list template","env":"local","error":"failed to execute template families_list.html for locale en: template: families_list.html:7:19: executing \"families_list.html\" at <.MemberCount>: can't evaluate field MemberCount in type *families.Family"}
{"time":"2025-09-07T14:55:08.956996508+02:00","level":"ERROR","msg":"Command execution failed","env":"local","error":"failed to execute template families_list.html for locale en: template: families_list.html:7:19: executing \"families_list.html\" at <.MemberCount>: can't evaluate field MemberCount in type *families.Family","command":"families"}
{"time":"2025-09-07T14:59:01.922802563+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T14:59:01.922922773+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T14:59:01.92295343+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T14:59:01.922991334+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T14:59:01.923141259+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T14:59:01.925591301+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T14:59:01.925657347+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T14:59:03.626717985+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T14:59:03.626834457+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T14:59:03.776619859+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T14:59:03.776661274+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T14:59:03.776673337+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T14:59:03.776905445+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T14:59:03.777699306+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T14:59:03.77774573+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T14:59:03.777777898+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T14:59:09.080394311+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/families","is_command":true}
{"time":"2025-09-07T14:59:14.288066213+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/createfamily","is_command":true}
{"time":"2025-09-07T15:02:15.025333182+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T15:02:15.025560956+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T15:02:15.025611483+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T15:02:15.025694021+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T15:02:15.025741532+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T15:02:15.028615855+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T15:02:15.028698152+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T15:02:16.2851981+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T15:02:16.285332956+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T15:02:16.44823065+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T15:02:16.448435361+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T15:02:16.44848548+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T15:02:16.448790707+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T15:02:16.449029498+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T15:02:16.449184124+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T15:02:16.449299502+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T15:02:24.547652313+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/createfamily","is_command":true}
{"time":"2025-09-07T15:02:39.069214195+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/help","is_command":true}
{"time":"2025-09-07T15:02:41.303624187+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/addfamilymember","is_command":true}
{"time":"2025-09-07T15:06:34.522675875+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T15:06:34.522827536+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T15:06:34.522882359+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T15:06:34.522928661+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T15:06:34.523016633+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T15:06:34.525182239+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T15:06:34.525265595+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T15:06:35.938600835+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T15:06:35.938757561+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T15:06:36.097088752+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T15:06:36.097176349+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T15:06:36.097214671+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T15:06:36.097566718+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T15:06:36.100395864+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T15:06:36.100521515+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T15:06:36.100656841+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T15:06:37.96679908+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/addfamilymember","is_command":true}
{"time":"2025-09-07T15:06:50.18245248+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/families","is_command":true}
{"time":"2025-09-07T15:06:51.853712241+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/lists","is_command":true}
{"time":"2025-09-07T15:06:53.658558118+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"create_new_list","chat_id":508225490}
{"time":"2025-09-07T15:06:56.633773075+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"createlist_e204dcfd-b89d-4cc5-93d1-1c1a29e2f724","chat_id":508225490}
{"time":"2025-09-07T15:06:57.014706063+02:00","level":"INFO","msg":"User entered create list state","env":"local","user_id":508225490,"family_id":"e204dcfd-b89d-4cc5-93d1-1c1a29e2f724"}
{"time":"2025-09-07T15:06:57.014910891+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"creating_list_for_family","value":"e204dcfd-b89d-4cc5-93d1-1c1a29e2f724"}
{"time":"2025-09-07T15:07:05.0231035+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"123","is_command":false}
{"time":"2025-09-07T15:07:05.027438531+02:00","level":"INFO","msg":"Shopping list created successfully","env":"local","list_id":"73b7581e-7902-4e6d-85c2-77f313bf9479","list_name":"123","family_id":"e204dcfd-b89d-4cc5-93d1-1c1a29e2f724","created_by":508225490}
{"time":"2025-09-07T15:07:05.027634437+02:00","level":"ERROR","msg":"Failed to render list created success template","env":"local","error":"failed to execute template list_created_success.html for locale en: template: list_created_success.html:5:33: executing \"list_created_success.html\" at <.CreatedAt.Format>: can't evaluate field Format in type string"}
{"time":"2025-09-07T15:07:05.095472336+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"creating_list_for_family"}
{"time":"2025-09-07T15:07:09.790105014+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_73b7581e-7902-4e6d-85c2-77f313bf9479","chat_id":508225490}
{"time":"2025-09-07T15:07:10.960796793+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_73b7581e-7902-4e6d-85c2-77f313bf9479","chat_id":508225490}
{"time":"2025-09-07T15:07:11.073552939+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"73b7581e-7902-4e6d-85c2-77f313bf9479"}
{"time":"2025-09-07T15:07:11.073664896+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"73b7581e-7902-4e6d-85c2-77f313bf9479"}
{"time":"2025-09-07T15:07:24.844916678+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","is_command":false}
{"time":"2025-09-07T15:07:24.845348173+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T15:07:24.845602601+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","prompt_length":8497,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T15:07:24.845939886+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T15:07:37.759207046+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bd838d843c8193974916efae65ecc400f147f781138b96\",\n  \"object\": \"response\",\n  \"created_at\": 1757250445,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bd838ec9088193bbbd278b25a5fda300f147f781138b96\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bd8394f5f081938a609dcf8975b0e900f147f781138b96\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0429\\u0435\\u0442\\u043a\\u0430 \\u043d\\u0430 \\u0448\\u0432\\u0430\\u0431\\u0440\\u0443\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"cleaning_supplies\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0442\\u0443\\u0430\\u043b\\u0435\\u0442\\u043d\\u0430\\u044f \\u0431\\u0443\\u043c\\u0430\\u0433\\u0430\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"paper_products\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0447\\u0430\\u043b\\u043a\\u0438 \\u0434\\u043b\\u044f \\u043f\\u043e\\u0441\\u0443\\u0434\\u044b\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"cleaning_supplies\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043e\\u0433\\u0443\\u0440\\u0446\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 3.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0443\\u043a\\u0443\\u0440\\u0443\\u0437\\u044b\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043b\\u0438\\u0441\\u0442 \\u0441\\u0430\\u043b\\u0430\\u0442\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 0.5,\\n    \\\"quantity_unit\\\": \\\"kg\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0433\\u043e\\u043b\\u0443\\u0431\\u0438\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"fruits\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0430\\u043f\\u0443\\u0441\\u0442\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 0.5,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u0430\\u043b\\u0430\\u0442 \\u0446\\u0435\\u0437\\u0430\\u0440\\u044c\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u0430\\u043b\\u0430\\u0442 \\u0441 \\u0442\\u0443\\u043d\\u0446\\u043e\\u043c\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0445\\u043b\\u0435\\u0431 \\u0446\\u0435\\u043b\\u044c\\u043d\\u043e\\u0437\\u0435\\u0440\\u043d\\u043e\\u0432\\u043e\\u0439\\\",\\n    \\\"category\\\": \\\"bakery\\\",\\n    \\\"subcategory\\\": \\\"bread\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0440\\u044b\\u0431\\u0430 \\u043a\\u0440\\u0430\\u0441\\u043d\\u0430\\u044f \\u0444\\u0438\\u043b\\u0435\\\",\\n    \\\"category\\\": \\\"seafood\\\",\\n    \\\"subcategory\\\": \\\"fish\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0440\\u043e\\u043b\\u0438\\u043a\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"rabbit\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0444\\u0438\\u043b\\u0435 \\u043a\\u0443\\u0440\\u0438\\u0446\\u044b\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"chicken\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u043b\\u0438\\u0432\\u043a\\u0438\\\",\\n    \\\"category\\\": \\\"dairy\\\",\\n    \\\"subcategory\\\": \\\"milk\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2428,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 2219,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 1280\n    },\n    \"total_tokens\": 4647\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T15:07:37.759829599+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","model":"gpt-5-nano","items_count":16,"tokens_used":4647,"reasoning_effort":"low"}
{"time":"2025-09-07T15:07:37.759873739+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","results_count":16}
{"time":"2025-09-07T15:07:37.759903558+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"Щетка на швабру","category":"household","subcategory":"cleaning_supplies","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:07:37.759934937+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":2,"standardized_name":"туалетная бумага","category":"household","subcategory":"paper_products","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:07:37.759952013+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":3,"standardized_name":"мочалки для посуды","category":"household","subcategory":"cleaning_supplies","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:07:37.759967602+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":4,"standardized_name":"огурца","category":"produce","subcategory":"vegetables","quantity_value":3,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T15:07:37.759984478+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":5,"standardized_name":"кукурузы","category":"produce","subcategory":"vegetables","quantity_value":1,"quantity_unit":"pack","confidence_score":0.95}
{"time":"2025-09-07T15:07:37.760001269+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":6,"standardized_name":"лист салата","category":"produce","subcategory":"vegetables","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:07:37.760016275+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":7,"standardized_name":"морковка","category":"produce","subcategory":"vegetables","quantity_value":0.5,"quantity_unit":"kg","confidence_score":0.95}
{"time":"2025-09-07T15:07:37.760033471+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":8,"standardized_name":"голубика","category":"produce","subcategory":"fruits","quantity_value":1,"quantity_unit":"pack","confidence_score":0.95}
{"time":"2025-09-07T15:07:37.760048639+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":9,"standardized_name":"капуста","category":"produce","subcategory":"vegetables","quantity_value":0.5,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T15:07:37.760064581+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":10,"standardized_name":"салат цезарь","category":"produce","subcategory":"vegetables","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:07:37.760080246+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":11,"standardized_name":"салат с тунцом","category":"produce","subcategory":"vegetables","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:07:37.760095548+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":12,"standardized_name":"хлеб цельнозерновой","category":"bakery","subcategory":"bread","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:07:37.760111015+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":13,"standardized_name":"рыба красная филе","category":"seafood","subcategory":"fish","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:07:37.760126614+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":14,"standardized_name":"кролик","category":"meat","subcategory":"rabbit","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:07:37.760141474+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":15,"standardized_name":"филе курицы","category":"meat","subcategory":"chicken","quantity_value":1,"quantity_unit":"pack","confidence_score":0.95}
{"time":"2025-09-07T15:07:37.76016021+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":16,"standardized_name":"сливки","category":"dairy","subcategory":"milk","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:07:37.761905562+02:00","level":"ERROR","msg":"Failed to store original item","env":"local","error":"failed to insert original item: ERROR: value too long for type character varying(255) (SQLSTATE 22001)","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки"}
{"time":"2025-09-07T15:07:37.76204934+02:00","level":"ERROR","msg":"AI parsing failed","env":"local","component":"shopping-service","error":"failed to store original item: failed to insert original item: ERROR: value too long for type character varying(255) (SQLSTATE 22001)"}
{"time":"2025-09-07T15:07:37.762097174+02:00","level":"ERROR","msg":"Failed to add items to list with AI","env":"local","error":"failed to parse items with AI: failed to store original item: failed to insert original item: ERROR: value too long for type character varying(255) (SQLSTATE 22001)"}
{"time":"2025-09-07T15:07:37.83978701+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T15:15:47.161863019+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T15:15:47.161901447+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T15:15:47.161910559+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T15:15:47.161928528+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T15:15:47.161933459+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T15:15:47.162478283+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T15:15:47.162487506+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T15:15:48.62618044+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T15:15:48.626359298+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T15:15:48.803151461+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T15:15:48.803281435+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T15:15:48.80330781+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T15:15:48.803623784+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T15:15:48.805948002+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T15:15:48.806085841+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T15:15:48.806200171+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T15:16:00.665393569+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_73b7581e-7902-4e6d-85c2-77f313bf9479","chat_id":508225490}
{"time":"2025-09-07T15:16:02.554749361+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_73b7581e-7902-4e6d-85c2-77f313bf9479","chat_id":508225490}
{"time":"2025-09-07T15:16:10.229847597+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/families","is_command":true}
{"time":"2025-09-07T15:16:12.410362673+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/createfamily","is_command":true}
{"time":"2025-09-07T15:16:23.389266084+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/createfamily TEST","is_command":false}
{"time":"2025-09-07T15:16:37.220335441+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/createfamily TEST","is_command":true}
{"time":"2025-09-07T15:16:37.225083418+02:00","level":"ERROR","msg":"Failed to render family created template","env":"local","error":"failed to execute template family_created.html for locale en: template: family_created.html:3:20: executing \"family_created.html\" at <.Name>: can't evaluate field Name in type struct { FamilyName string }"}
{"time":"2025-09-07T15:16:37.286843703+02:00","level":"ERROR","msg":"Command execution failed","env":"local","error":"failed to execute template family_created.html for locale en: template: family_created.html:3:20: executing \"family_created.html\" at <.Name>: can't evaluate field Name in type struct { FamilyName string }","command":"createfamily"}
{"time":"2025-09-07T15:20:17.466249587+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T15:20:17.466288126+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T15:20:17.46629681+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T15:20:17.466305135+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T15:20:17.466329227+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T15:20:17.467108782+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T15:20:17.467123478+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T15:20:18.636250816+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T15:20:18.636417597+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T15:20:18.798215653+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T15:20:18.798258842+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T15:20:18.798271195+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T15:20:18.798531709+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T15:20:18.798554702+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T15:20:18.798594015+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T15:20:18.798635908+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T15:20:31.062010009+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/createfamily TEST","is_command":true}
{"time":"2025-09-07T15:20:31.170779361+02:00","level":"INFO","msg":"Family created successfully","env":"local","family_id":"23d5a9b4-ccba-4d04-b094-4e76513a5a9e","family_name":"TEST","created_by":508225490,"creator_name":"Ivan"}
{"time":"2025-09-07T15:20:35.557321394+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/families","is_command":true}
{"time":"2025-09-07T15:20:42.908378414+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/help","is_command":true}
{"time":"2025-09-07T15:20:45.43645163+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/lists","is_command":true}
{"time":"2025-09-07T15:20:49.928578131+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"create_new_list","chat_id":508225490}
{"time":"2025-09-07T15:20:57.782694137+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"createlist_23d5a9b4-ccba-4d04-b094-4e76513a5a9e","chat_id":508225490}
{"time":"2025-09-07T15:20:57.898153508+02:00","level":"INFO","msg":"User entered create list state","env":"local","user_id":508225490,"family_id":"23d5a9b4-ccba-4d04-b094-4e76513a5a9e"}
{"time":"2025-09-07T15:20:57.898334716+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"creating_list_for_family","value":"23d5a9b4-ccba-4d04-b094-4e76513a5a9e"}
{"time":"2025-09-07T15:21:04.715105442+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"123445","is_command":false}
{"time":"2025-09-07T15:21:04.721087168+02:00","level":"INFO","msg":"Shopping list created successfully","env":"local","list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82","list_name":"123445","family_id":"23d5a9b4-ccba-4d04-b094-4e76513a5a9e","created_by":508225490}
{"time":"2025-09-07T15:21:04.721315587+02:00","level":"ERROR","msg":"Failed to render list created success template","env":"local","error":"failed to execute template list_created_success.html for locale en: template: list_created_success.html:5:33: executing \"list_created_success.html\" at <.CreatedAt.Format>: can't evaluate field Format in type string"}
{"time":"2025-09-07T15:21:04.782375283+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"creating_list_for_family"}
{"time":"2025-09-07T15:21:06.472617856+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:21:07.753037624+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-07T15:23:06.825807356+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:23:08.789997646+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:23:08.937360889+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T15:23:08.937409779+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T15:23:23.678337474+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","is_command":false}
{"time":"2025-09-07T15:23:23.678875553+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T15:23:23.678987325+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","prompt_length":8497,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T15:23:23.679082672+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T15:23:43.258339544+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bd874c78a48190a36bc1907774bd370671753245b2c741\",\n  \"object\": \"response\",\n  \"created_at\": 1757251404,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bd874d546481909dcf26fcdfeaea8f0671753245b2c741\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bd8756cc14819084523538bc58ad0f0671753245b2c741\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0429\\u0435\\u0442\\u043a\\u0430 \\u043d\\u0430 \\u0448\\u0432\\u0430\\u0431\\u0440\\u0443\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"cleaning_supplies\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0442\\u0443\\u0430\\u043b\\u0435\\u0442\\u043d\\u0430\\u044f \\u0431\\u0443\\u043c\\u0430\\u0433\\u0430\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"paper_products\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0447\\u0430\\u043b\\u043a\\u0438 \\u0434\\u043b\\u044f \\u043f\\u043e\\u0441\\u0443\\u0434\\u044b\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"cleaning_supplies\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043e\\u0433\\u0443\\u0440\\u0446\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 3.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0443\\u043a\\u0443\\u0440\\u0443\\u0437\\u044b\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043b\\u0438\\u0441\\u0442 \\u0441\\u0430\\u043b\\u0430\\u0442\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 0.5,\\n    \\\"quantity_unit\\\": \\\"kg\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0433\\u043e\\u043b\\u0443\\u0431\\u0438\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"fruits\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043f\\u043e\\u043b \\u043a\\u0430\\u043f\\u0443\\u0441\\u0442\\u044b\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 0.5,\\n    \\\"quantity_unit\\\": \\\"head\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u0430\\u043b\\u0430\\u0442 \\u0446\\u0435\\u0437\\u0430\\u0440\\u044c\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.85\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u0430\\u043b\\u0430\\u0442 \\u0441 \\u0442\\u0443\\u043d\\u0446\\u043e\\u043c\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.85\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0445\\u043b\\u0435\\u0431 \\u0446\\u0435\\u043b\\u044c\\u043d\\u043e\\u0437\\u0435\\u0440\\u043d\\u043e\\u0432\\u043e\\u0439\\\",\\n    \\\"category\\\": \\\"bakery\\\",\\n    \\\"subcategory\\\": \\\"bread\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0440\\u044b\\u0431\\u0430 \\u043a\\u0440\\u0430\\u0441\\u043d\\u0430\\u044f \\u0444\\u0438\\u043b\\u0435\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"fish\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0440\\u043e\\u043b\\u0438\\u043a\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"lamb\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.85\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0444\\u0438\\u043b\\u0435 \\u043a\\u0443\\u0440\\u0438\\u0446\\u044b\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"chicken\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u043b\\u0438\\u0432\\u043a\\u0438\\\",\\n    \\\"category\\\": \\\"dairy\\\",\\n    \\\"subcategory\\\": \\\"cream\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2428,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 2221,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 1280\n    },\n    \"total_tokens\": 4649\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T15:23:43.258504972+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","model":"gpt-5-nano","items_count":16,"tokens_used":4649,"reasoning_effort":"low"}
{"time":"2025-09-07T15:23:43.258516587+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","results_count":16}
{"time":"2025-09-07T15:23:43.258520927+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"Щетка на швабру","category":"household","subcategory":"cleaning_supplies","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T15:23:43.25852898+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":2,"standardized_name":"туалетная бумага","category":"household","subcategory":"paper_products","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T15:23:43.258532169+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":3,"standardized_name":"мочалки для посуды","category":"household","subcategory":"cleaning_supplies","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T15:23:43.258534968+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":4,"standardized_name":"огурца","category":"produce","subcategory":"vegetables","quantity_value":3,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T15:23:43.258538301+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":5,"standardized_name":"кукурузы","category":"produce","subcategory":"vegetables","quantity_value":1,"quantity_unit":"pack","confidence_score":0.95}
{"time":"2025-09-07T15:23:43.258542875+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":6,"standardized_name":"лист салата","category":"produce","subcategory":"vegetables","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T15:23:43.258545663+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":7,"standardized_name":"морковка","category":"produce","subcategory":"vegetables","quantity_value":0.5,"quantity_unit":"kg","confidence_score":0.95}
{"time":"2025-09-07T15:23:43.258548783+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":8,"standardized_name":"голубика","category":"produce","subcategory":"fruits","quantity_value":1,"quantity_unit":"pack","confidence_score":0.95}
{"time":"2025-09-07T15:23:43.258552434+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":9,"standardized_name":"пол капусты","category":"produce","subcategory":"vegetables","quantity_value":0.5,"quantity_unit":"head","confidence_score":0.95}
{"time":"2025-09-07T15:23:43.258555221+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":10,"standardized_name":"салат цезарь","category":"produce","subcategory":"vegetables","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.85}
{"time":"2025-09-07T15:23:43.258558602+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":11,"standardized_name":"салат с тунцом","category":"produce","subcategory":"vegetables","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.85}
{"time":"2025-09-07T15:23:43.258561381+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":12,"standardized_name":"хлеб цельнозерновой","category":"bakery","subcategory":"bread","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T15:23:43.258564286+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":13,"standardized_name":"рыба красная филе","category":"meat","subcategory":"fish","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T15:23:43.25856753+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":14,"standardized_name":"кролик","category":"meat","subcategory":"lamb","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.85}
{"time":"2025-09-07T15:23:43.258570412+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":15,"standardized_name":"филе курицы","category":"meat","subcategory":"chicken","quantity_value":1,"quantity_unit":"pack","confidence_score":0.95}
{"time":"2025-09-07T15:23:43.258573565+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":16,"standardized_name":"сливки","category":"dairy","subcategory":"cream","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T15:23:43.262799528+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"8da25bb2-229c-4d0d-bba3-310c027f5b31","parsed_id":"5b2a06ca-8a29-4394-9ff2-d97eb5e9546d"}
{"time":"2025-09-07T15:23:43.26282882+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"Щетка на швабру","parsed":"Щетка на швабру","category":"household","confidence":0.95,"item_index":1,"total_items":16}
{"time":"2025-09-07T15:23:43.26404315+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"eced9038-0366-4502-b451-d89f1de59d66","parsed_id":"162fbde6-7057-4496-887e-9f58cd730127"}
{"time":"2025-09-07T15:23:43.264063595+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"туалетная бумага","parsed":"туалетная бумага","category":"household","confidence":0.95,"item_index":2,"total_items":16}
{"time":"2025-09-07T15:23:43.264840134+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"e2e30e21-9492-4854-b29c-fd7d8c60774c","parsed_id":"1428f052-2efe-4f8a-bae6-88fbd9290042"}
{"time":"2025-09-07T15:23:43.264846386+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"мочалки для посуды","parsed":"мочалки для посуды","category":"household","confidence":0.95,"item_index":3,"total_items":16}
{"time":"2025-09-07T15:23:43.266165534+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"4f3783ea-baae-4ecd-b0d3-7c56e381967c","parsed_id":"86122453-35c4-4f5e-8211-36b3d3d745e6"}
{"time":"2025-09-07T15:23:43.26621417+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"огурца","parsed":"огурца","category":"produce","confidence":0.95,"item_index":4,"total_items":16}
{"time":"2025-09-07T15:23:43.267475009+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"9bca6b9a-d97d-40c5-94f1-3a2a3038dc5b","parsed_id":"83062e95-e21c-4976-a325-05e586c049f8"}
{"time":"2025-09-07T15:23:43.267488117+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"кукурузы","parsed":"кукурузы","category":"produce","confidence":0.95,"item_index":5,"total_items":16}
{"time":"2025-09-07T15:23:43.268167578+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"c06a08da-fcd2-44b3-90f2-0a6c6d12f230","parsed_id":"14543817-911e-40f8-9128-593dd706cc5f"}
{"time":"2025-09-07T15:23:43.268180968+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"лист салата","parsed":"лист салата","category":"produce","confidence":0.95,"item_index":6,"total_items":16}
{"time":"2025-09-07T15:23:43.268873197+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"0acefc59-c725-4080-9ad9-b17ac45ff2b4","parsed_id":"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8"}
{"time":"2025-09-07T15:23:43.268885606+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95,"item_index":7,"total_items":16}
{"time":"2025-09-07T15:23:43.269502925+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"e373bc0d-18cc-4e4f-bbf4-3ec9c66eec25","parsed_id":"c85782fa-75f3-43de-bccb-36397fdd11de"}
{"time":"2025-09-07T15:23:43.269509465+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"голубика","parsed":"голубика","category":"produce","confidence":0.95,"item_index":8,"total_items":16}
{"time":"2025-09-07T15:23:43.270715173+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"2616a0bf-139f-4ed0-8996-a8ffce951668","parsed_id":"79204f47-db4f-43dc-a480-321272158a67"}
{"time":"2025-09-07T15:23:43.270724231+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"пол капусты","parsed":"пол капусты","category":"produce","confidence":0.95,"item_index":9,"total_items":16}
{"time":"2025-09-07T15:23:43.271393191+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"ab40cdbe-4b95-4fd9-bcb3-ea63ac50cd4f","parsed_id":"a9eca4f3-ff97-469c-bfe7-a8602911a7bb"}
{"time":"2025-09-07T15:23:43.27140888+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"салат цезарь","parsed":"салат цезарь","category":"produce","confidence":0.85,"item_index":10,"total_items":16}
{"time":"2025-09-07T15:23:43.272028209+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"2455b964-ce5a-495f-ba65-45497332d748","parsed_id":"e152abb4-42bd-46c3-8ca3-de2c6a5ad947"}
{"time":"2025-09-07T15:23:43.272039113+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"салат с тунцом","parsed":"салат с тунцом","category":"produce","confidence":0.85,"item_index":11,"total_items":16}
{"time":"2025-09-07T15:23:43.272652723+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"958b930d-3701-42c3-878e-14eefc14129a","parsed_id":"79e215aa-0376-455c-8b49-a63449e06895"}
{"time":"2025-09-07T15:23:43.272660601+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"хлеб цельнозерновой","parsed":"хлеб цельнозерновой","category":"bakery","confidence":0.95,"item_index":12,"total_items":16}
{"time":"2025-09-07T15:23:43.273392209+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"9cd246a5-236b-44ec-9365-eed6ee1f5842","parsed_id":"7ac68b2b-93d2-4274-874c-050b9cc6d63b"}
{"time":"2025-09-07T15:23:43.273413036+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"рыба красная филе","parsed":"рыба красная филе","category":"meat","confidence":0.95,"item_index":13,"total_items":16}
{"time":"2025-09-07T15:23:43.274080929+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"a507581f-aec7-4a2f-8f99-366fafef2878","parsed_id":"6117d53e-01db-48fb-8ae6-b17fca9ab1f8"}
{"time":"2025-09-07T15:23:43.274089833+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"кролик","parsed":"кролик","category":"meat","confidence":0.85,"item_index":14,"total_items":16}
{"time":"2025-09-07T15:23:43.274731724+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"66dde469-1748-4d4e-b59b-ffe83f0e3077","parsed_id":"20c927a5-07bf-42fe-9fd2-32020061bf3b"}
{"time":"2025-09-07T15:23:43.274744569+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"филе курицы","parsed":"филе курицы","category":"meat","confidence":0.95,"item_index":15,"total_items":16}
{"time":"2025-09-07T15:23:43.275410067+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"cd72f63c-aa49-4dd7-850d-ea0bf3dd3237","parsed_id":"8633296e-8ad7-4949-813b-3ccf7d6c50ce"}
{"time":"2025-09-07T15:23:43.27541858+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"сливки","parsed":"сливки","category":"dairy","confidence":0.95,"item_index":16,"total_items":16}
{"time":"2025-09-07T15:23:43.27542492+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","total_parsed":16,"successfully_stored":16}
{"time":"2025-09-07T15:23:43.276543586+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"Щетка на швабру","parsed":"Щетка на швабру","category":"household","confidence":0.95}
{"time":"2025-09-07T15:23:43.277262756+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"туалетная бумага","parsed":"туалетная бумага","category":"household","confidence":0.95}
{"time":"2025-09-07T15:23:43.27795521+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"мочалки для посуды","parsed":"мочалки для посуды","category":"household","confidence":0.95}
{"time":"2025-09-07T15:23:43.278667062+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"огурца","parsed":"огурца","category":"produce","confidence":0.95}
{"time":"2025-09-07T15:23:43.27939283+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"кукурузы","parsed":"кукурузы","category":"produce","confidence":0.95}
{"time":"2025-09-07T15:23:43.280291437+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"лист салата","parsed":"лист салата","category":"produce","confidence":0.95}
{"time":"2025-09-07T15:23:43.280976102+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95}
{"time":"2025-09-07T15:23:43.281642901+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"голубика","parsed":"голубика","category":"produce","confidence":0.95}
{"time":"2025-09-07T15:23:43.282514657+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"пол капусты","parsed":"пол капусты","category":"produce","confidence":0.95}
{"time":"2025-09-07T15:23:43.283551422+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"салат цезарь","parsed":"салат цезарь","category":"produce","confidence":0.85}
{"time":"2025-09-07T15:23:43.284245428+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"салат с тунцом","parsed":"салат с тунцом","category":"produce","confidence":0.85}
{"time":"2025-09-07T15:23:43.284892993+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"хлеб цельнозерновой","parsed":"хлеб цельнозерновой","category":"bakery","confidence":0.95}
{"time":"2025-09-07T15:23:43.285519929+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"рыба красная филе","parsed":"рыба красная филе","category":"meat","confidence":0.95}
{"time":"2025-09-07T15:23:43.286136583+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"кролик","parsed":"кролик","category":"meat","confidence":0.85}
{"time":"2025-09-07T15:23:43.286734859+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"филе курицы","parsed":"филе курицы","category":"meat","confidence":0.95}
{"time":"2025-09-07T15:23:43.287318881+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"сливки","parsed":"сливки","category":"dairy","confidence":0.95}
{"time":"2025-09-07T15:23:43.404530173+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T15:23:53.130838551+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:33:58.025779474+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T15:33:58.025916502+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T15:33:58.025957715+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T15:33:58.026001231+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T15:33:58.026116619+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T15:33:58.028024725+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T15:33:58.02809041+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T15:33:59.292651063+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T15:33:59.292835127+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T15:33:59.445235296+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T15:33:59.445335114+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T15:33:59.445356047+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T15:33:59.445650999+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T15:33:59.448116156+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T15:33:59.448237824+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T15:33:59.448360839+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T15:34:09.579120171+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:34:24.518568091+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-07T15:34:28.514608418+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:34:30.32871464+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"li_t_acb1f108_f0d5315b","chat_id":508225490}
{"time":"2025-09-07T15:34:33.894570355+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"li_t_acb1f108_f0d5315b","chat_id":508225490}
{"time":"2025-09-07T15:34:38.687149306+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"li_t_acb1f108_4539f0bd","chat_id":508225490}
{"time":"2025-09-07T15:35:39.154404911+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T15:35:39.154604707+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T15:35:39.1546487+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T15:35:39.15471817+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T15:35:39.154756019+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T15:35:39.158300973+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T15:35:39.158389513+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T15:35:41.346722065+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T15:35:41.346827864+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T15:35:41.512210628+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T15:35:41.512418331+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T15:35:41.512468344+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T15:35:41.51278305+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T15:35:41.514594599+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T15:35:41.515155473+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T15:35:41.515234085+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T15:35:56.138725816+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:35:56.260667642+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T15:35:56.260721143+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T15:36:02.29611021+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","is_command":false}
{"time":"2025-09-07T15:36:02.297029454+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T15:36:02.297148246+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","prompt_length":8497,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T15:36:02.297235955+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T15:36:17.614537306+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bd8a42fa2081958334ff9233fb00540bcc1b9e37af469f\",\n  \"object\": \"response\",\n  \"created_at\": 1757252163,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bd8a441fb48195902986da5c8ca5ff0bcc1b9e37af469f\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bd8a4c821881958f8628672ade8faa0bcc1b9e37af469f\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0429\\u0435\\u0442\\u043a\\u0430 \\u043d\\u0430 \\u0448\\u0432\\u0430\\u0431\\u0440\\u0443\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"cleaning_supplies\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0442\\u0443\\u0430\\u043b\\u0435\\u0442\\u043d\\u0430\\u044f \\u0431\\u0443\\u043c\\u0430\\u0433\\u0430\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"paper_products\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0447\\u0430\\u043b\\u043a\\u0438 \\u0434\\u043b\\u044f \\u043f\\u043e\\u0441\\u0443\\u0434\\u044b\\\",\\n    \\\"category\\\": \\\"household\\\",\\n    \\\"subcategory\\\": \\\"cleaning_supplies\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043e\\u0433\\u0443\\u0440\\u0446\\u044b\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 3.0,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0443\\u043a\\u0443\\u0440\\u0443\\u0437\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043b\\u0438\\u0441\\u0442 \\u0441\\u0430\\u043b\\u0430\\u0442\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 0.5,\\n    \\\"quantity_unit\\\": \\\"kg\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0433\\u043e\\u043b\\u0443\\u0431\\u0438\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"fruits\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0430\\u043f\\u0443\\u0441\\u0442\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": 0.5,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u0430\\u043b\\u0430\\u0442 \\u0446\\u0435\\u0437\\u0430\\u0440\\u044c\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u0430\\u043b\\u0430\\u0442 \\u0441 \\u0442\\u0443\\u043d\\u0446\\u043e\\u043c\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0445\\u043b\\u0435\\u0431 \\u0446\\u0435\\u043b\\u044c\\u043d\\u043e\\u0437\\u0435\\u0440\\u043d\\u043e\\u0432\\u043e\\u0439\\\",\\n    \\\"category\\\": \\\"bakery\\\",\\n    \\\"subcategory\\\": \\\"bread\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0440\\u044b\\u0431\\u0430 \\u043a\\u0440\\u0430\\u0441\\u043d\\u0430\\u044f \\u0444\\u0438\\u043b\\u0435\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"fish\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0440\\u043e\\u043b\\u0438\\u043a\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"rabbit\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0444\\u0438\\u043b\\u0435 \\u043a\\u0443\\u0440\\u0438\\u0446\\u044b\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"chicken\\\",\\n    \\\"quantity_value\\\": 1.0,\\n    \\\"quantity_unit\\\": \\\"pack\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0441\\u043b\\u0438\\u0432\\u043a\\u0438\\\",\\n    \\\"category\\\": \\\"dairy\\\",\\n    \\\"subcategory\\\": \\\"cream\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2428,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 2304\n    },\n    \"output_tokens\": 2795,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 1856\n    },\n    \"total_tokens\": 5223\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T15:36:17.615127341+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","model":"gpt-5-nano","items_count":16,"tokens_used":5223,"reasoning_effort":"low"}
{"time":"2025-09-07T15:36:17.615166383+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","results_count":16}
{"time":"2025-09-07T15:36:17.615186406+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"Щетка на швабру","category":"household","subcategory":"cleaning_supplies","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:36:17.61521577+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":2,"standardized_name":"туалетная бумага","category":"household","subcategory":"paper_products","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:36:17.615239424+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":3,"standardized_name":"мочалки для посуды","category":"household","subcategory":"cleaning_supplies","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:36:17.615276039+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":4,"standardized_name":"огурцы","category":"produce","subcategory":"vegetables","quantity_value":3,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T15:36:17.615294844+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":5,"standardized_name":"кукуруза","category":"produce","subcategory":"vegetables","quantity_value":1,"quantity_unit":"pack","confidence_score":0.95}
{"time":"2025-09-07T15:36:17.615319422+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":6,"standardized_name":"лист салата","category":"produce","subcategory":"vegetables","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:36:17.615338944+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":7,"standardized_name":"морковка","category":"produce","subcategory":"vegetables","quantity_value":0.5,"quantity_unit":"kg","confidence_score":0.95}
{"time":"2025-09-07T15:36:17.615358828+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":8,"standardized_name":"голубика","category":"produce","subcategory":"fruits","quantity_value":1,"quantity_unit":"pack","confidence_score":0.95}
{"time":"2025-09-07T15:36:17.615372706+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":9,"standardized_name":"капуста","category":"produce","subcategory":"vegetables","quantity_value":0.5,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:36:17.615386745+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":10,"standardized_name":"салат цезарь","category":"produce","subcategory":"vegetables","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:36:17.615403345+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":11,"standardized_name":"салат с тунцом","category":"produce","subcategory":"vegetables","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:36:17.615418852+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":12,"standardized_name":"хлеб цельнозерновой","category":"bakery","subcategory":"bread","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:36:17.615434208+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":13,"standardized_name":"рыба красная филе","category":"meat","subcategory":"fish","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:36:17.61545054+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":14,"standardized_name":"кролик","category":"meat","subcategory":"rabbit","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:36:17.615465683+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":15,"standardized_name":"филе курицы","category":"meat","subcategory":"chicken","quantity_value":1,"quantity_unit":"pack","confidence_score":0.95}
{"time":"2025-09-07T15:36:17.615482107+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":16,"standardized_name":"сливки","category":"dairy","subcategory":"cream","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T15:36:17.623904949+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"242e3133-4079-4601-a904-2688ba0a5a92","parsed_id":"5b2a06ca-8a29-4394-9ff2-d97eb5e9546d"}
{"time":"2025-09-07T15:36:17.623978271+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"Щетка на швабру","parsed":"Щетка на швабру","category":"household","confidence":0.9,"item_index":1,"total_items":16}
{"time":"2025-09-07T15:36:17.626776448+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"d959ffd8-6f10-4ef1-9c25-dec63dd0e289","parsed_id":"162fbde6-7057-4496-887e-9f58cd730127"}
{"time":"2025-09-07T15:36:17.626939529+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"туалетная бумага","parsed":"туалетная бумага","category":"household","confidence":0.9,"item_index":2,"total_items":16}
{"time":"2025-09-07T15:36:17.629213194+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"ffd558e8-004a-4865-afe6-7058ab89a9dd","parsed_id":"1428f052-2efe-4f8a-bae6-88fbd9290042"}
{"time":"2025-09-07T15:36:17.629379544+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"мочалки для посуды","parsed":"мочалки для посуды","category":"household","confidence":0.9,"item_index":3,"total_items":16}
{"time":"2025-09-07T15:36:17.632207367+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"7d74ba98-5b0c-4d32-9608-d27ec95b77e7","parsed_id":"5fb89fcb-0993-4c41-a901-034a134bb6a0"}
{"time":"2025-09-07T15:36:17.632480694+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"огурцы","parsed":"огурцы","category":"produce","confidence":0.95,"item_index":4,"total_items":16}
{"time":"2025-09-07T15:36:17.634793717+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"127fb4a0-f6d0-4cbc-9925-b4cd6a614f81","parsed_id":"5bb661a9-89ef-4db0-9eb7-0307e299c277"}
{"time":"2025-09-07T15:36:17.634862959+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"кукуруза","parsed":"кукуруза","category":"produce","confidence":0.95,"item_index":5,"total_items":16}
{"time":"2025-09-07T15:36:17.637607218+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"ea564dff-8183-4aae-a27f-d0d49328ad98","parsed_id":"14543817-911e-40f8-9128-593dd706cc5f"}
{"time":"2025-09-07T15:36:17.637673839+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"лист салата","parsed":"лист салата","category":"produce","confidence":0.9,"item_index":6,"total_items":16}
{"time":"2025-09-07T15:36:17.639994107+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"97eda2fa-afaa-4d65-81be-aaa14fcd9b60","parsed_id":"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8"}
{"time":"2025-09-07T15:36:17.640066102+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95,"item_index":7,"total_items":16}
{"time":"2025-09-07T15:36:17.642102992+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"6ab8df5c-29af-478d-b324-3a3138e96525","parsed_id":"c85782fa-75f3-43de-bccb-36397fdd11de"}
{"time":"2025-09-07T15:36:17.642132875+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"голубика","parsed":"голубика","category":"produce","confidence":0.95,"item_index":8,"total_items":16}
{"time":"2025-09-07T15:36:17.643925176+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"2edb9a68-c971-4649-b34e-4aaeeaa6e38f","parsed_id":"f878c49c-b776-4ff3-819e-eb507ecc85a7"}
{"time":"2025-09-07T15:36:17.643974659+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"капуста","parsed":"капуста","category":"produce","confidence":0.9,"item_index":9,"total_items":16}
{"time":"2025-09-07T15:36:17.645455757+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"dbd24271-5683-4826-ad96-ff9171c23577","parsed_id":"a9eca4f3-ff97-469c-bfe7-a8602911a7bb"}
{"time":"2025-09-07T15:36:17.645479247+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"салат цезарь","parsed":"салат цезарь","category":"produce","confidence":0.9,"item_index":10,"total_items":16}
{"time":"2025-09-07T15:36:17.646869661+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"c35568a8-0f06-4736-a1a2-8f8e78a90e0d","parsed_id":"e152abb4-42bd-46c3-8ca3-de2c6a5ad947"}
{"time":"2025-09-07T15:36:17.646895172+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"салат с тунцом","parsed":"салат с тунцом","category":"produce","confidence":0.9,"item_index":11,"total_items":16}
{"time":"2025-09-07T15:36:17.648212496+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"e53e7c9d-9406-4482-abb1-ad523b9f44d3","parsed_id":"79e215aa-0376-455c-8b49-a63449e06895"}
{"time":"2025-09-07T15:36:17.648236179+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"хлеб цельнозерновой","parsed":"хлеб цельнозерновой","category":"bakery","confidence":0.9,"item_index":12,"total_items":16}
{"time":"2025-09-07T15:36:17.649639475+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"f24a9b4e-9a1e-4341-9fd5-950f91ff30c8","parsed_id":"7ac68b2b-93d2-4274-874c-050b9cc6d63b"}
{"time":"2025-09-07T15:36:17.649693105+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"рыба красная филе","parsed":"рыба красная филе","category":"meat","confidence":0.9,"item_index":13,"total_items":16}
{"time":"2025-09-07T15:36:17.650961435+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"903ad8a2-e4f7-401a-9193-3f849b2dee41","parsed_id":"6117d53e-01db-48fb-8ae6-b17fca9ab1f8"}
{"time":"2025-09-07T15:36:17.651024411+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"кролик","parsed":"кролик","category":"meat","confidence":0.9,"item_index":14,"total_items":16}
{"time":"2025-09-07T15:36:17.652626783+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"c05dacb6-be84-486e-ac30-381c48b1e601","parsed_id":"20c927a5-07bf-42fe-9fd2-32020061bf3b"}
{"time":"2025-09-07T15:36:17.652689298+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"филе курицы","parsed":"филе курицы","category":"meat","confidence":0.95,"item_index":15,"total_items":16}
{"time":"2025-09-07T15:36:17.653863595+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"3a89b953-1f1a-48eb-984c-be92f0541d9d","parsed_id":"8633296e-8ad7-4949-813b-3ccf7d6c50ce"}
{"time":"2025-09-07T15:36:17.653894977+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"сливки","parsed":"сливки","category":"dairy","confidence":0.9,"item_index":16,"total_items":16}
{"time":"2025-09-07T15:36:17.653906042+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"Щетка на швабру, туалетная бумага, мочалки для посуды. Овощи- 3 огурца, 1 пачка кукурузы, лист салата,морковка 0,5 кг, голубика 1 уп, пол капусты, где овощи - салат цезарь, салат с тунцом .хлеб цельнозерновой, рыба красная филе,кролик, филе курицы 1 маленькая уп,сливки","language":"en","total_parsed":16,"successfully_stored":16}
{"time":"2025-09-07T15:36:17.655824805+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"Щетка на швабру","parsed":"Щетка на швабру","category":"household","confidence":0.9}
{"time":"2025-09-07T15:36:17.659603258+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"туалетная бумага","parsed":"туалетная бумага","category":"household","confidence":0.9}
{"time":"2025-09-07T15:36:17.662885395+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"мочалки для посуды","parsed":"мочалки для посуды","category":"household","confidence":0.9}
{"time":"2025-09-07T15:36:17.666347298+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"огурцы","parsed":"огурцы","category":"produce","confidence":0.95}
{"time":"2025-09-07T15:36:17.667463233+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"кукуруза","parsed":"кукуруза","category":"produce","confidence":0.95}
{"time":"2025-09-07T15:36:17.668356836+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"лист салата","parsed":"лист салата","category":"produce","confidence":0.9}
{"time":"2025-09-07T15:36:17.669123654+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95}
{"time":"2025-09-07T15:36:17.6697544+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"голубика","parsed":"голубика","category":"produce","confidence":0.95}
{"time":"2025-09-07T15:36:17.670388327+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"капуста","parsed":"капуста","category":"produce","confidence":0.9}
{"time":"2025-09-07T15:36:17.671071633+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"салат цезарь","parsed":"салат цезарь","category":"produce","confidence":0.9}
{"time":"2025-09-07T15:36:17.671675023+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"салат с тунцом","parsed":"салат с тунцом","category":"produce","confidence":0.9}
{"time":"2025-09-07T15:36:17.672462989+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"хлеб цельнозерновой","parsed":"хлеб цельнозерновой","category":"bakery","confidence":0.9}
{"time":"2025-09-07T15:36:17.673159677+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"рыба красная филе","parsed":"рыба красная филе","category":"meat","confidence":0.9}
{"time":"2025-09-07T15:36:17.673871164+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"кролик","parsed":"кролик","category":"meat","confidence":0.9}
{"time":"2025-09-07T15:36:17.674593923+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"филе курицы","parsed":"филе курицы","category":"meat","confidence":0.95}
{"time":"2025-09-07T15:36:17.67519417+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"сливки","parsed":"сливки","category":"dairy","confidence":0.9}
{"time":"2025-09-07T15:36:17.837640567+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T15:36:25.694889424+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:38:18.822503827+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T15:38:18.822556256+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T15:38:18.822569248+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T15:38:18.822588807+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T15:38:18.822596776+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T15:38:18.823641128+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T15:38:18.823667583+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T15:38:19.947030246+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T15:38:19.947137749+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T15:38:20.09566315+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T15:38:20.095728357+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T15:38:20.095745346+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T15:38:20.096010274+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T15:38:20.096219334+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T15:38:20.096374919+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T15:38:20.096468675+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T15:38:24.792019352+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:38:42.913179679+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T15:38:42.91337901+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T15:38:42.913432568+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T15:38:42.913524516+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T15:38:42.913569315+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T15:38:42.916520798+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T15:38:42.916604926+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T15:38:43.954101447+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T15:38:43.95428978+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T15:38:44.090740085+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T15:38:44.090956553+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T15:38:44.091003796+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T15:38:44.091348555+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T15:38:44.091622207+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T15:38:44.091781978+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T15:38:44.091862865+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T15:38:46.377946488+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:38:49.403920706+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:38:58.112912393+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T15:38:58.112959711+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T15:38:58.112974732+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T15:38:58.113000554+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T15:38:58.113011773+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T15:38:58.115646242+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T15:38:58.115689227+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T15:38:59.325163393+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T15:38:59.325346159+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T15:38:59.482793037+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T15:38:59.482889654+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T15:38:59.482919271+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T15:38:59.483252738+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T15:38:59.483550176+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T15:38:59.483636128+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T15:38:59.483668228+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T15:39:02.152137614+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:45:06.627168308+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/createlist","is_command":true}
{"time":"2025-09-07T15:45:11.715260645+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/status","is_command":true}
{"time":"2025-09-07T15:57:42.388143574+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T15:57:42.388189381+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T15:57:42.388205782+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T15:57:42.388215584+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T15:57:42.388263699+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T15:57:42.389354092+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T15:57:42.389370267+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T15:57:43.525581984+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T15:57:43.525757323+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T15:57:43.677960722+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T15:57:43.67802191+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T15:57:43.678033096+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T15:57:43.67822599+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T15:57:43.678273046+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T15:57:43.67847179+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T15:57:43.678797925+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T15:57:59.109835074+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/help","is_command":true}
{"time":"2025-09-07T15:58:00.842708807+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/lists","is_command":true}
{"time":"2025-09-07T15:58:02.23516923+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:58:05.262268723+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:58:05.360817322+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T15:58:05.360947924+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T15:58:27.741731467+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"морковочка","is_command":false}
{"time":"2025-09-07T15:58:27.743411151+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"морковочка","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T15:58:27.744663036+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"морковочка","language":"en","prompt_length":8043,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T15:58:27.745392025+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"морковочка","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"морковочка\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: морковочка\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T15:58:32.742060348+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bd8f83f3248193b7c67218186c725f04f76643681de654\",\n  \"object\": \"response\",\n  \"created_at\": 1757253508,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bd8f849fe8819383375cad3c4fa1c104f76643681de654\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bd8f86b10081938c302c353b24336704f76643681de654\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043e\\u0447\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"carrot\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2210,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 312,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 256\n    },\n    \"total_tokens\": 2522\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T15:58:32.742658609+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"морковочка","language":"en","model":"gpt-5-nano","items_count":1,"tokens_used":2522,"reasoning_effort":"low"}
{"time":"2025-09-07T15:58:32.742729648+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"морковочка","language":"en","results_count":1}
{"time":"2025-09-07T15:58:32.742760757+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"морковочка","category":"produce","subcategory":"carrot","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T15:58:32.752440898+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"bd8d3e42-f54e-4ff7-8ea9-03ab6efb8a9c","parsed_id":"6579d0db-e375-492e-92dd-44d6c497940c"}
{"time":"2025-09-07T15:58:32.752605454+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковочка","parsed":"морковочка","category":"produce","confidence":0.95,"item_index":1,"total_items":1}
{"time":"2025-09-07T15:58:32.75266033+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"морковочка","language":"en","total_parsed":1,"successfully_stored":1}
{"time":"2025-09-07T15:58:32.755655363+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"морковочка","parsed":"морковочка","category":"produce","confidence":0.95}
{"time":"2025-09-07T15:58:32.821106239+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T15:59:25.366065239+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T15:59:31.557813131+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"li_t_acb1f108_4539f0bd","chat_id":508225490}
{"time":"2025-09-07T16:04:35.560815981+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T16:04:35.560863364+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T16:04:35.560876678+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T16:04:35.560890233+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T16:04:35.560933016+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T16:04:35.56199493+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T16:04:35.562021313+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T16:04:36.719151233+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T16:04:36.719338598+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T16:04:36.859617537+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T16:04:36.859678655+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T16:04:36.859689055+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T16:04:36.859777148+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T16:04:36.859963051+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T16:04:36.85999631+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T16:04:36.860014183+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T16:04:42.746174527+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-07T16:04:44.112998247+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:04:45.343693563+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:04:45.499451969+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:04:45.499501072+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:04:50.300020745+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"морква","is_command":false}
{"time":"2025-09-07T16:04:50.300653111+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"морква","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T16:04:50.300803795+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"морква","language":"en","prompt_length":8035,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T16:04:50.300935795+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"морква","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"морква\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: морква\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T16:04:53.291415458+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bd9102bad08193a89021b7e6c30f540f5c4fcacbc650d0\",\n  \"object\": \"response\",\n  \"created_at\": 1757253890,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bd91038d688193a8ec4203b5837ecd0f5c4fcacbc650d0\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bd91047a3c8193aaa61ed519770a9f0f5c4fcacbc650d0\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u0432\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"carrot\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2210,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 248,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 192\n    },\n    \"total_tokens\": 2458\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T16:04:53.291651392+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"морква","language":"en","model":"gpt-5-nano","items_count":1,"tokens_used":2458,"reasoning_effort":"low"}
{"time":"2025-09-07T16:04:53.291676684+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"морква","language":"en","results_count":1}
{"time":"2025-09-07T16:04:53.291689774+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"морква","category":"produce","subcategory":"carrot","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T16:04:53.306671452+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"5653f58b-4851-4df5-a4f1-00a817df640d","parsed_id":"8e121536-9f46-4747-9efc-b30ad21c5308"}
{"time":"2025-09-07T16:04:53.306715757+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морква","parsed":"морква","category":"produce","confidence":0.95,"item_index":1,"total_items":1}
{"time":"2025-09-07T16:04:53.306731222+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"морква","language":"en","total_parsed":1,"successfully_stored":1}
{"time":"2025-09-07T16:04:53.308520557+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"морква","parsed":"морква","category":"produce","confidence":0.95}
{"time":"2025-09-07T16:04:53.377812433+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T16:04:57.454818176+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:04:57.699590824+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:04:57.699662943+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:05:00.981611172+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"морковочка","is_command":false}
{"time":"2025-09-07T16:05:00.981992926+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"морковочка","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T16:05:00.982161634+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"морковочка","language":"en","prompt_length":8043,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T16:05:00.982228567+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"морковочка","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"морковочка\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: морковочка\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T16:05:04.710131918+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bd910d6a6481948f23b889c6ada0300e2bc578693dd122\",\n  \"object\": \"response\",\n  \"created_at\": 1757253901,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bd910e740c819481af606f8a2b91ff0e2bc578693dd122\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bd911026608194800db31891056f150e2bc578693dd122\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043e\\u0447\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"carrot\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2210,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 440,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 384\n    },\n    \"total_tokens\": 2650\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T16:05:04.710231409+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"морковочка","language":"en","model":"gpt-5-nano","items_count":1,"tokens_used":2650,"reasoning_effort":"low"}
{"time":"2025-09-07T16:05:04.710252928+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"морковочка","language":"en","results_count":1}
{"time":"2025-09-07T16:05:04.710260272+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"морковочка","category":"produce","subcategory":"carrot","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T16:05:04.713694441+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"384e96c2-ef61-487b-b260-3e596daf5bee","parsed_id":"6579d0db-e375-492e-92dd-44d6c497940c"}
{"time":"2025-09-07T16:05:04.71372393+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковочка","parsed":"морковочка","category":"produce","confidence":0.9,"item_index":1,"total_items":1}
{"time":"2025-09-07T16:05:04.71373906+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"морковочка","language":"en","total_parsed":1,"successfully_stored":1}
{"time":"2025-09-07T16:05:04.819291327+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T16:05:20.084742345+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"dup_replace_0_acb1f108","chat_id":508225490}
{"time":"2025-09-07T16:29:55.227212385+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T16:29:55.22729813+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T16:29:55.227311739+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T16:29:55.227318464+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T16:29:55.227342092+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T16:29:55.329025686+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T16:29:55.329074511+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T16:29:57.020877538+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T16:29:57.021090886+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T16:29:57.168226705+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T16:29:57.168302285+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T16:29:57.168464205+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T16:29:57.168739656+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T16:29:57.168933841+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T16:29:57.168987976+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T16:29:57.169183054+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T16:30:16.578173095+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"dup_replace_0_acb1f108","chat_id":508225490}
{"time":"2025-09-07T16:30:19.063774545+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"dup_cancel_acb1f108","chat_id":508225490}
{"time":"2025-09-07T16:30:19.134296233+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution"}
{"time":"2025-09-07T16:30:19.182455073+02:00","level":"ERROR","msg":"Failed to delete duplicate resolution message","env":"local","error":"json: cannot unmarshal bool into Go value of type tgbotapi.Message"}
{"time":"2025-09-07T16:30:23.148116741+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"морковочка","is_command":false}
{"time":"2025-09-07T16:30:25.476757449+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/lists","is_command":true}
{"time":"2025-09-07T16:30:26.7365408+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:30:28.661109497+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:30:28.775632097+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:30:28.77572538+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:30:29.929515617+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"морковочка","is_command":false}
{"time":"2025-09-07T16:30:29.930049368+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"морковочка","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T16:30:29.930173253+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"морковочка","language":"en","prompt_length":8043,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T16:30:29.930267335+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"морковочка","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"морковочка\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: морковочка\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T16:30:35.98430714+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bd970675188194a993eb0441d947070e0211238b81a04f\",\n  \"object\": \"response\",\n  \"created_at\": 1757255430,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bd970759f0819493735d814c8b5d0c0e0211238b81a04f\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bd970b6b748194b0324c049fb8b0370e0211238b81a04f\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043e\\u0447\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"carrot\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2210,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 440,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 384\n    },\n    \"total_tokens\": 2650\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T16:30:35.984413824+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"морковочка","language":"en","model":"gpt-5-nano","items_count":1,"tokens_used":2650,"reasoning_effort":"low"}
{"time":"2025-09-07T16:30:35.984423457+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"морковочка","language":"en","results_count":1}
{"time":"2025-09-07T16:30:35.984427058+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"морковочка","category":"produce","subcategory":"carrot","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T16:30:35.988540659+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"8c490cc8-5721-4e77-ba4c-0735a7df7343","parsed_id":"6579d0db-e375-492e-92dd-44d6c497940c"}
{"time":"2025-09-07T16:30:35.988550834+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковочка","parsed":"морковочка","category":"produce","confidence":0.9,"item_index":1,"total_items":1}
{"time":"2025-09-07T16:30:35.988555115+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"морковочка","language":"en","total_parsed":1,"successfully_stored":1}
{"time":"2025-09-07T16:30:35.989148284+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution","value":"{\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"duplicates\":[{\"new_item_name\":\"морковочка\",\"parsed_name\":\"морковочка\",\"existing_item\":{\"id\":\"843ada4e-732c-4744-ae09-36f622252eff\",\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"name\":\"морковочка\",\"quantity\":null,\"is_completed\":false,\"added_by\":\"0fc9088b-3329-4adb-b764-1a88d79cecfc\",\"completed_by\":null,\"completed_at\":null,\"original_item_id\":\"bd8d3e42-f54e-4ff7-8ea9-03ab6efb8a9c\",\"parsed_item_id\":\"6579d0db-e375-492e-92dd-44d6c497940c\",\"display_name\":\"морковочка\",\"parsed_name\":\"морковочка\",\"parsing_status\":\"parsed\",\"created_at\":\"2025-09-07T15:58:32.753831+02:00\",\"updated_at\":\"2025-09-07T15:58:32.753831+02:00\"},\"parsed_item_id\":\"6579d0db-e375-492e-92dd-44d6c497940c\",\"new_quantity\":null,\"resolved\":false}],\"unique_items\":null}"}
{"time":"2025-09-07T16:30:36.070472349+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T16:30:37.628395496+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"dup_replace_0_acb1f108","chat_id":508225490}
{"time":"2025-09-07T16:30:37.628660163+02:00","level":"ERROR","msg":"Failed to update shopping item","env":"local","component":"shopping-service","error":"ERROR: column \"updated_by\" of relation \"shopping_items\" does not exist (SQLSTATE 42703)","item_id":"843ada4e-732c-4744-ae09-36f622252eff","updated_by":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T16:30:37.628681895+02:00","level":"ERROR","msg":"Failed to update item","env":"local","error":"failed to update item: ERROR: column \"updated_by\" of relation \"shopping_items\" does not exist (SQLSTATE 42703)","item_id":"843ada4e-732c-4744-ae09-36f622252eff"}
{"time":"2025-09-07T16:30:37.674074979+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution"}
{"time":"2025-09-07T16:30:37.72223576+02:00","level":"ERROR","msg":"Failed to delete duplicate resolution message","env":"local","error":"json: cannot unmarshal bool into Go value of type tgbotapi.Message"}
{"time":"2025-09-07T16:30:37.723941661+02:00","level":"ERROR","msg":"Failed to render list view template","env":"local","error":"failed to execute template list_view.html for locale en: html/template: \"list_view.html\" is undefined"}
{"time":"2025-09-07T16:36:36.547018624+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T16:36:36.547065709+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T16:36:36.547073409+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T16:36:36.547082604+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T16:36:36.547087658+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T16:36:36.547778941+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T16:36:36.547805046+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T16:36:57.686971016+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T16:36:57.687091255+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T16:36:57.843435532+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T16:36:57.843481152+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T16:36:57.843487048+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T16:36:57.843639002+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T16:36:57.843676869+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T16:36:57.843702919+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T16:36:57.843725309+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T16:37:25.599851286+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:37:26.449987227+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:37:28.734738115+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:37:28.937823773+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:37:28.937882636+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:37:32.550532383+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"морковочка","is_command":false}
{"time":"2025-09-07T16:37:32.551171355+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"морковочка","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T16:37:32.551305327+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"морковочка","language":"en","prompt_length":8043,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T16:37:32.55139697+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"морковочка","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"морковочка\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: морковочка\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T16:37:35.289532631+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bd98ad11ac8197a9a389a30bd4185d076a1e8cca905b40\",\n  \"object\": \"response\",\n  \"created_at\": 1757255853,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bd98ade5648197a7328e402d9724fc076a1e8cca905b40\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bd98aeb7e881979d21f028e4d662d2076a1e8cca905b40\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043e\\u0447\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"carrot\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2210,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 248,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 192\n    },\n    \"total_tokens\": 2458\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T16:37:35.289768425+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"морковочка","language":"en","model":"gpt-5-nano","items_count":1,"tokens_used":2458,"reasoning_effort":"low"}
{"time":"2025-09-07T16:37:35.289795223+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"морковочка","language":"en","results_count":1}
{"time":"2025-09-07T16:37:35.289808981+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"морковочка","category":"produce","subcategory":"carrot","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T16:37:35.316717946+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"b3f075d2-ab23-45ca-824f-6fc011e26634","parsed_id":"6579d0db-e375-492e-92dd-44d6c497940c"}
{"time":"2025-09-07T16:37:35.316747589+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковочка","parsed":"морковочка","category":"produce","confidence":0.95,"item_index":1,"total_items":1}
{"time":"2025-09-07T16:37:35.316754937+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"морковочка","language":"en","total_parsed":1,"successfully_stored":1}
{"time":"2025-09-07T16:37:35.317250325+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution","value":"{\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"duplicates\":[{\"new_item_name\":\"морковочка\",\"parsed_name\":\"морковочка\",\"existing_item\":{\"id\":\"843ada4e-732c-4744-ae09-36f622252eff\",\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"name\":\"морковочка\",\"quantity\":null,\"is_completed\":false,\"added_by\":\"0fc9088b-3329-4adb-b764-1a88d79cecfc\",\"completed_by\":null,\"completed_at\":null,\"original_item_id\":\"bd8d3e42-f54e-4ff7-8ea9-03ab6efb8a9c\",\"parsed_item_id\":\"6579d0db-e375-492e-92dd-44d6c497940c\",\"display_name\":\"морковочка\",\"parsed_name\":\"морковочка\",\"parsing_status\":\"parsed\",\"created_at\":\"2025-09-07T15:58:32.753831+02:00\",\"updated_at\":\"2025-09-07T15:58:32.753831+02:00\"},\"parsed_item_id\":\"6579d0db-e375-492e-92dd-44d6c497940c\",\"new_quantity\":null,\"resolved\":false}],\"unique_items\":null}"}
{"time":"2025-09-07T16:37:35.394059828+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T16:37:38.44358337+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"dup_replace_0_acb1f108","chat_id":508225490}
{"time":"2025-09-07T16:37:38.447304292+02:00","level":"INFO","msg":"Shopping item updated successfully","env":"local","component":"shopping-service","item_id":"843ada4e-732c-4744-ae09-36f622252eff","updated_by":"0fc9088b-3329-4adb-b764-1a88d79cecfc","name_updated":true,"quantity_updated":false}
{"time":"2025-09-07T16:37:38.49810986+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution"}
{"time":"2025-09-07T16:37:38.558221316+02:00","level":"ERROR","msg":"Failed to delete duplicate resolution message","env":"local","error":"json: cannot unmarshal bool into Go value of type tgbotapi.Message"}
{"time":"2025-09-07T16:37:43.612155924+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-07T16:37:44.530973438+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:38:19.698114518+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"show_all_lists","chat_id":508225490}
{"time":"2025-09-07T16:38:21.839303858+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:43:51.117126496+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T16:43:51.117307589+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T16:43:51.268613958+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T16:43:51.268666206+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T16:43:51.268676622+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T16:43:51.269397758+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T16:43:51.269464917+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T16:43:51.269483708+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T16:43:51.269464448+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T16:45:20.495850855+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T16:45:20.49597046+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T16:45:20.655991872+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T16:45:20.656023108+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T16:45:20.656029578+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T16:45:20.656096348+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T16:45:20.656188817+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T16:45:20.656279551+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T16:45:20.65629785+02:00","level":"ERROR","msg":"HTTP server error","env":"local","error":"failed to listen: listen tcp4 0.0.0.0:3001: bind: address already in use"}
{"time":"2025-09-07T16:45:20.656304298+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T16:45:25.941973576+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T16:45:25.94201979+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T16:45:25.942034955+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T16:45:25.942064087+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T16:45:25.942072844+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T16:45:25.944906449+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T16:45:25.944952548+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T16:45:45.867539024+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T16:45:45.867656058+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T16:45:46.021714138+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T16:45:46.02181194+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T16:45:46.021836921+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T16:45:46.022041346+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T16:45:46.022656768+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T16:45:46.022776625+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T16:45:46.022868357+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T16:45:52.514842799+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:45:57.186487933+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:45:57.295047661+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:45:57.295210037+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:46:01.77373191+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"морковка","is_command":false}
{"time":"2025-09-07T16:46:01.777801873+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"морковка","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T16:46:01.77843134+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"морковка","language":"en","prompt_length":8039,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T16:46:01.778856337+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"морковка","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"морковка\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: морковка\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T16:46:05.597653646+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bd9aaa352881969e8eca1ca3cff4e20488c4f86c34a602\",\n  \"object\": \"response\",\n  \"created_at\": 1757256362,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bd9aaad4208196b2a93750363ca7360488c4f86c34a602\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bd9aad017c81968b9708a83096da160488c4f86c34a602\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"carrot\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2210,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 440,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 384\n    },\n    \"total_tokens\": 2650\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T16:46:05.598036362+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"морковка","language":"en","model":"gpt-5-nano","items_count":1,"tokens_used":2650,"reasoning_effort":"low"}
{"time":"2025-09-07T16:46:05.598076271+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"морковка","language":"en","results_count":1}
{"time":"2025-09-07T16:46:05.598095398+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"морковка","category":"produce","subcategory":"carrot","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T16:46:05.60947974+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"a72f3056-ca6a-4753-b8dc-b4ce63aa4cdd","parsed_id":"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8"}
{"time":"2025-09-07T16:46:05.609593492+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95,"item_index":1,"total_items":1}
{"time":"2025-09-07T16:46:05.609638951+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"морковка","language":"en","total_parsed":1,"successfully_stored":1}
{"time":"2025-09-07T16:46:05.611622352+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution","value":"{\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"duplicates\":[{\"new_item_name\":\"морковка\",\"parsed_name\":\"морковка\",\"existing_item\":{\"id\":\"4539f0bd-00b7-41d4-8ba9-c889e660fb7e\",\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"name\":\"морковка\",\"quantity\":\"0.5 kg\",\"is_completed\":false,\"added_by\":\"0fc9088b-3329-4adb-b764-1a88d79cecfc\",\"completed_by\":null,\"completed_at\":null,\"original_item_id\":\"0acefc59-c725-4080-9ad9-b17ac45ff2b4\",\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"display_name\":\"морковка\",\"parsed_name\":\"морковка\",\"parsing_status\":\"parsed\",\"created_at\":\"2025-09-07T15:23:43.280362+02:00\",\"updated_at\":\"2025-09-07T15:59:31.559393+02:00\"},\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"new_quantity\":null,\"resolved\":false}],\"unique_items\":null}"}
{"time":"2025-09-07T16:46:05.688139116+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T16:46:08.560957112+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"dup_replace_0_acb1f108","chat_id":508225490}
{"time":"2025-09-07T16:46:08.563750614+02:00","level":"INFO","msg":"Shopping item updated successfully","env":"local","component":"shopping-service","item_id":"4539f0bd-00b7-41d4-8ba9-c889e660fb7e","updated_by":"0fc9088b-3329-4adb-b764-1a88d79cecfc","name_updated":true,"quantity_updated":false}
{"time":"2025-09-07T16:46:08.677886867+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution"}
{"time":"2025-09-07T16:46:08.780620674+02:00","level":"ERROR","msg":"Failed to delete duplicate resolution message","env":"local","error":"json: cannot unmarshal bool into Go value of type tgbotapi.Message"}
{"time":"2025-09-07T16:46:08.826925832+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message to edit not found"}
{"time":"2025-09-07T16:46:08.943024089+02:00","level":"ERROR","msg":"Failed to answer callback","env":"local","error":"Bad Request: query is too old and response timeout expired or query ID is invalid","callback_id":"duplicate_resolution_redirect"}
{"time":"2025-09-07T16:46:17.55380906+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:53:01.464834217+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T16:53:01.464878638+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T16:53:01.464887515+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T16:53:01.464892754+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T16:53:01.464912551+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T16:53:01.465486809+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T16:53:01.465495177+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T16:53:02.543477465+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T16:53:02.543660552+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T16:53:02.67767798+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T16:53:02.677714547+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T16:53:02.677724452+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T16:53:02.678186197+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T16:53:02.678225531+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T16:53:02.678227767+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T16:53:02.678242016+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T16:53:03.259836091+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T16:53:03.260032008+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T16:53:03.381009854+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T16:53:03.381048113+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T16:53:03.381112686+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T16:53:03.381194428+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T16:53:03.381445081+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T16:53:03.381474771+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T16:53:03.381495452+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T16:53:03.381612757+02:00","level":"ERROR","msg":"HTTP server error","env":"local","error":"failed to listen: listen tcp4 0.0.0.0:3001: bind: address already in use"}
{"time":"2025-09-07T16:53:07.34827976+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:53:07.446842071+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:53:07.446889522+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:53:16.209578444+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"морковка","is_command":false}
{"time":"2025-09-07T16:53:18.270580284+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/lists","is_command":true}
{"time":"2025-09-07T16:53:19.42879748+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:53:20.95084602+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:53:21.051496457+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:53:21.05154272+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:53:24.858614006+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"морковка","is_command":false}
{"time":"2025-09-07T16:53:24.860159677+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"морковка","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T16:53:24.860329075+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"морковка","language":"en","prompt_length":8039,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T16:53:24.860421732+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"морковка","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"морковка\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: морковка\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T16:53:28.325589979+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bd9c64ffdc8197bbcefc8976a528960489357be9c64084\",\n  \"object\": \"response\",\n  \"created_at\": 1757256805,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bd9c65ed80819792cbf85ad28b7bde0489357be9c64084\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bd9c674bc88197937f02a7cd2ed3770489357be9c64084\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"carrot\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2210,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 248,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 192\n    },\n    \"total_tokens\": 2458\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T16:53:28.325736644+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"морковка","language":"en","model":"gpt-5-nano","items_count":1,"tokens_used":2458,"reasoning_effort":"low"}
{"time":"2025-09-07T16:53:28.325752765+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"морковка","language":"en","results_count":1}
{"time":"2025-09-07T16:53:28.325759957+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"морковка","category":"produce","subcategory":"carrot","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T16:53:28.331072855+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"ba25b00a-0a3e-43f2-b341-d9bfe882ad34","parsed_id":"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8"}
{"time":"2025-09-07T16:53:28.331111014+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95,"item_index":1,"total_items":1}
{"time":"2025-09-07T16:53:28.331122273+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"морковка","language":"en","total_parsed":1,"successfully_stored":1}
{"time":"2025-09-07T16:53:28.331880234+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution","value":"{\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"duplicates\":[{\"new_item_name\":\"морковка\",\"parsed_name\":\"морковка\",\"existing_item\":{\"id\":\"4539f0bd-00b7-41d4-8ba9-c889e660fb7e\",\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"name\":\"морковка\",\"quantity\":\"0.5 kg\",\"is_completed\":false,\"added_by\":\"0fc9088b-3329-4adb-b764-1a88d79cecfc\",\"completed_by\":null,\"completed_at\":null,\"original_item_id\":\"0acefc59-c725-4080-9ad9-b17ac45ff2b4\",\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"display_name\":\"морковка\",\"parsed_name\":\"морковка\",\"parsing_status\":\"parsed\",\"created_at\":\"2025-09-07T15:23:43.280362+02:00\",\"updated_at\":\"2025-09-07T16:46:08.561029+02:00\"},\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"new_quantity\":null,\"resolved\":false}],\"unique_items\":null}"}
{"time":"2025-09-07T16:53:28.432170609+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T16:53:32.340074334+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"dup_replace_0_acb1f108","chat_id":508225490}
{"time":"2025-09-07T16:53:32.344865749+02:00","level":"INFO","msg":"Shopping item updated successfully","env":"local","component":"shopping-service","item_id":"4539f0bd-00b7-41d4-8ba9-c889e660fb7e","updated_by":"0fc9088b-3329-4adb-b764-1a88d79cecfc","name_updated":true,"quantity_updated":false}
{"time":"2025-09-07T16:53:32.399827407+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution"}
{"time":"2025-09-07T16:53:32.399854696+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T16:53:32.443011717+02:00","level":"ERROR","msg":"Failed to delete duplicate resolution message","env":"local","error":"json: cannot unmarshal bool into Go value of type tgbotapi.Message"}
{"time":"2025-09-07T16:53:32.483026818+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message to edit not found"}
{"time":"2025-09-07T16:53:32.525622388+02:00","level":"ERROR","msg":"Failed to answer callback","env":"local","error":"Bad Request: query is too old and response timeout expired or query ID is invalid","callback_id":"duplicate_resolution_redirect"}
{"time":"2025-09-07T16:53:37.817530434+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T16:53:37.817570847+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T16:53:37.817582461+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T16:53:37.817604393+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T16:53:37.817613561+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T16:53:37.818460503+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T16:53:37.818474401+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T16:53:49.963440468+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T16:53:49.963630915+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T16:53:50.108147816+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T16:53:50.108214971+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T16:53:50.108232093+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T16:53:50.108417267+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T16:53:50.110154871+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T16:53:50.110272944+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T16:53:50.11035737+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T16:53:52.613901051+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:53:54.099312787+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T16:53:54.205664852+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:53:54.205719821+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T16:53:59.917447076+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"морковка","is_command":false}
{"time":"2025-09-07T16:53:59.9214732+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"морковка","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T16:53:59.921857546+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"морковка","language":"en","prompt_length":8039,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T16:53:59.922121345+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"морковка","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"морковка\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: морковка\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T16:54:05.511101774+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bd9c881bf481968b51c23ab991cbd6034ac35bdda5598e\",\n  \"object\": \"response\",\n  \"created_at\": 1757256840,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bd9c88b7908196a3b50b3a0858c664034ac35bdda5598e\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bd9c8c72e881969763217eadd6af7c034ac35bdda5598e\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"carrot\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2210,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 440,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 384\n    },\n    \"total_tokens\": 2650\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T16:54:05.511692844+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"морковка","language":"en","model":"gpt-5-nano","items_count":1,"tokens_used":2650,"reasoning_effort":"low"}
{"time":"2025-09-07T16:54:05.511767693+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"морковка","language":"en","results_count":1}
{"time":"2025-09-07T16:54:05.511805037+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"морковка","category":"produce","subcategory":"carrot","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T16:54:05.523346908+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"b3efd780-b948-40e1-a574-4ab69b5eb080","parsed_id":"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8"}
{"time":"2025-09-07T16:54:05.523455229+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95,"item_index":1,"total_items":1}
{"time":"2025-09-07T16:54:05.523511395+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"морковка","language":"en","total_parsed":1,"successfully_stored":1}
{"time":"2025-09-07T16:54:05.526970961+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution","value":"{\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"duplicates\":[{\"new_item_name\":\"морковка\",\"parsed_name\":\"морковка\",\"existing_item\":{\"id\":\"4539f0bd-00b7-41d4-8ba9-c889e660fb7e\",\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"name\":\"морковка\",\"quantity\":\"0.5 kg\",\"is_completed\":false,\"added_by\":\"0fc9088b-3329-4adb-b764-1a88d79cecfc\",\"completed_by\":null,\"completed_at\":null,\"original_item_id\":\"0acefc59-c725-4080-9ad9-b17ac45ff2b4\",\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"display_name\":\"морковка\",\"parsed_name\":\"морковка\",\"parsing_status\":\"parsed\",\"created_at\":\"2025-09-07T15:23:43.280362+02:00\",\"updated_at\":\"2025-09-07T16:53:32.340332+02:00\"},\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"new_quantity\":null,\"resolved\":false}],\"unique_items\":null}"}
{"time":"2025-09-07T16:54:05.593863768+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T16:54:13.989065644+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"dup_replace_0_acb1f108","chat_id":508225490}
{"time":"2025-09-07T16:54:13.993790931+02:00","level":"INFO","msg":"Shopping item updated successfully","env":"local","component":"shopping-service","item_id":"4539f0bd-00b7-41d4-8ba9-c889e660fb7e","updated_by":"0fc9088b-3329-4adb-b764-1a88d79cecfc","name_updated":true,"quantity_updated":false}
{"time":"2025-09-07T16:54:14.085426716+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution"}
{"time":"2025-09-07T16:54:14.085497078+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T16:54:14.16830569+02:00","level":"ERROR","msg":"Failed to delete duplicate resolution message","env":"local","error":"json: cannot unmarshal bool into Go value of type tgbotapi.Message"}
{"time":"2025-09-07T16:54:14.210522351+02:00","level":"ERROR","msg":"Failed to edit list view message","env":"local","error":"Bad Request: message to edit not found"}
{"time":"2025-09-07T16:54:14.276888942+02:00","level":"ERROR","msg":"Failed to answer callback","env":"local","error":"Bad Request: query is too old and response timeout expired or query ID is invalid","callback_id":"duplicate_resolution_redirect"}
{"time":"2025-09-07T17:28:57.970338477+02:00","level":"INFO","msg":"Shutdown signal received, stopping server","env":"local","component":"main"}
{"time":"2025-09-07T17:28:57.970382775+02:00","level":"INFO","msg":"Shutting down server","env":"local"}
{"time":"2025-09-07T17:28:57.970390989+02:00","level":"INFO","msg":"Stopping Telegram service...","env":"local"}
{"time":"2025-09-07T17:28:57.970400089+02:00","level":"INFO","msg":"Bot service context cancelled, stopping","env":"local"}
{"time":"2025-09-07T17:28:57.970423801+02:00","level":"INFO","msg":"Telegram service stopped","env":"local"}
{"time":"2025-09-07T17:28:57.97128752+02:00","level":"INFO","msg":"Server shut down successfully","env":"local"}
{"time":"2025-09-07T17:28:57.971299176+02:00","level":"INFO","msg":"Service shutdown complete","env":"local","component":"main"}
{"time":"2025-09-07T17:29:01.8121999+02:00","level":"INFO","msg":"Starting shopping service","env":"local","component":"main","environment":"local","server_address":"0.0.0.0:3001","log_level":"info","db_host":"localhost","db_port":5432}
{"time":"2025-09-07T17:29:01.812389138+02:00","level":"INFO","msg":"Database connection established","env":"local","component":"database","db_host":"localhost","db_port":5432,"db_name":"pocket-pal","max_connections":100}
{"time":"2025-09-07T17:29:01.950565777+02:00","level":"INFO","msg":"Telegram admin users configured","env":"local","count":1}
{"time":"2025-09-07T17:29:01.950650348+02:00","level":"INFO","msg":"Telegram bot initialized","env":"local","bot_enabled":true,"admin_count":1,"debug_mode":true,"component":"telegram_service"}
{"time":"2025-09-07T17:29:01.950666205+02:00","level":"INFO","msg":"Starting server","env":"local","component":"server"}
{"time":"2025-09-07T17:29:01.950723558+02:00","level":"INFO","msg":"Server ready, waiting for shutdown signal","env":"local","component":"main"}
{"time":"2025-09-07T17:29:01.950921156+02:00","level":"INFO","msg":"Starting HTTP server","env":"local","address":"0.0.0.0:3001"}
{"time":"2025-09-07T17:29:01.95099117+02:00","level":"INFO","msg":"Telegram service started","env":"local","component":"telegram_service","bot_enabled":true}
{"time":"2025-09-07T17:29:01.951025553+02:00","level":"INFO","msg":"Starting refactored bot service","env":"local"}
{"time":"2025-09-07T17:31:25.895501407+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"/lists","is_command":true}
{"time":"2025-09-07T17:31:27.549114325+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T17:31:30.370900526+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T17:31:30.482058956+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T17:31:30.482120447+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T17:31:38.425804677+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"морковка","is_command":false}
{"time":"2025-09-07T17:31:38.426780065+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"морковка","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T17:31:38.426972535+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"морковка","language":"en","prompt_length":8039,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T17:31:38.427136041+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"морковка","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"морковка\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: морковка\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T17:31:43.954496934+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bda55af1b48194ac88ab7c4b92ee8d0a31559b5f4f4eca\",\n  \"object\": \"response\",\n  \"created_at\": 1757259099,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bda55bb2b08194b57bd9ae68b8f04c0a31559b5f4f4eca\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bda55f4bb88194b5a2caadf25981e00a31559b5f4f4eca\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"carrot\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2210,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 440,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 384\n    },\n    \"total_tokens\": 2650\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T17:31:43.954756532+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"морковка","language":"en","model":"gpt-5-nano","items_count":1,"tokens_used":2650,"reasoning_effort":"low"}
{"time":"2025-09-07T17:31:43.954781766+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"морковка","language":"en","results_count":1}
{"time":"2025-09-07T17:31:43.954793739+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"морковка","category":"produce","subcategory":"carrot","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T17:31:43.960321417+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"f8366d05-4813-4d08-b158-0c958cef4559","parsed_id":"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8"}
{"time":"2025-09-07T17:31:43.960370503+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95,"item_index":1,"total_items":1}
{"time":"2025-09-07T17:31:43.960390528+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"морковка","language":"en","total_parsed":1,"successfully_stored":1}
{"time":"2025-09-07T17:31:43.961557571+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution","value":"{\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"duplicates\":[{\"new_item_name\":\"морковка\",\"parsed_name\":\"морковка\",\"existing_item\":{\"id\":\"4539f0bd-00b7-41d4-8ba9-c889e660fb7e\",\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"name\":\"морковка\",\"quantity\":\"0.5 kg\",\"is_completed\":false,\"added_by\":\"0fc9088b-3329-4adb-b764-1a88d79cecfc\",\"completed_by\":null,\"completed_at\":null,\"original_item_id\":\"0acefc59-c725-4080-9ad9-b17ac45ff2b4\",\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"display_name\":\"морковка\",\"parsed_name\":\"морковка\",\"parsing_status\":\"parsed\",\"created_at\":\"2025-09-07T15:23:43.280362+02:00\",\"updated_at\":\"2025-09-07T16:54:13.989287+02:00\"},\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"new_quantity\":null,\"resolved\":false}],\"unique_items\":null}"}
{"time":"2025-09-07T17:31:44.053011249+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T17:31:56.956812714+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"dup_replace_0_acb1f108","chat_id":508225490}
{"time":"2025-09-07T17:31:56.959785417+02:00","level":"INFO","msg":"Shopping item updated successfully","env":"local","component":"shopping-service","item_id":"4539f0bd-00b7-41d4-8ba9-c889e660fb7e","updated_by":"0fc9088b-3329-4adb-b764-1a88d79cecfc","name_updated":true,"quantity_updated":false}
{"time":"2025-09-07T17:31:57.004799743+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution"}
{"time":"2025-09-07T17:31:57.004869119+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T17:31:57.054651414+02:00","level":"ERROR","msg":"Failed to delete duplicate resolution message","env":"local","error":"json: cannot unmarshal bool into Go value of type tgbotapi.Message"}
{"time":"2025-09-07T17:32:24.141758991+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"морковка и филе","is_command":false}
{"time":"2025-09-07T17:32:27.718319021+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T17:32:27.925410057+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T17:32:27.925483562+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T17:32:33.406956502+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"Морковка и филе","is_command":false}
{"time":"2025-09-07T17:32:33.407378121+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Морковка и филе","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T17:32:33.407462721+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"Морковка и филе","language":"en","prompt_length":8051,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T17:32:33.407504226+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"Морковка и филе","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"Морковка и филе\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: Морковка и филе\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T17:32:39.359685992+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bda59180988194845cecf1a30ecf94056f5ea9b60b8db0\",\n  \"object\": \"response\",\n  \"created_at\": 1757259153,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bda591d3e4819483dd894501e30005056f5ea9b60b8db0\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bda5965ec481948e49f2889d3e0a2d056f5ea9b60b8db0\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.9\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u0444\\u0438\\u043b\\u0435\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"fish\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.8\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2217,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 807,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 704\n    },\n    \"total_tokens\": 3024\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T17:32:39.35990656+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"Морковка и филе","language":"en","model":"gpt-5-nano","items_count":2,"tokens_used":3024,"reasoning_effort":"low"}
{"time":"2025-09-07T17:32:39.359934386+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"Морковка и филе","language":"en","results_count":2}
{"time":"2025-09-07T17:32:39.359948581+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"морковка","category":"produce","subcategory":"vegetables","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.9}
{"time":"2025-09-07T17:32:39.359971036+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":2,"standardized_name":"филе","category":"meat","subcategory":"fish","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.8}
{"time":"2025-09-07T17:32:39.364687509+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"d5d157dc-9d8d-489b-8141-54705ae24769","parsed_id":"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8"}
{"time":"2025-09-07T17:32:39.364739945+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка","parsed":"морковка","category":"produce","confidence":0.9,"item_index":1,"total_items":2}
{"time":"2025-09-07T17:32:39.367512376+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"27106794-480e-43da-93c3-b1f8a07dac10","parsed_id":"3fc20af6-7c8d-4baf-8bb0-28ccc98be7bd"}
{"time":"2025-09-07T17:32:39.36755902+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"филе","parsed":"филе","category":"meat","confidence":0.8,"item_index":2,"total_items":2}
{"time":"2025-09-07T17:32:39.367623832+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"Морковка и филе","language":"en","total_parsed":2,"successfully_stored":2}
{"time":"2025-09-07T17:32:39.368444669+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution","value":"{\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"duplicates\":[{\"new_item_name\":\"морковка\",\"parsed_name\":\"морковка\",\"existing_item\":{\"id\":\"4539f0bd-00b7-41d4-8ba9-c889e660fb7e\",\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"name\":\"морковка\",\"quantity\":\"0.5 kg\",\"is_completed\":false,\"added_by\":\"0fc9088b-3329-4adb-b764-1a88d79cecfc\",\"completed_by\":null,\"completed_at\":null,\"original_item_id\":\"0acefc59-c725-4080-9ad9-b17ac45ff2b4\",\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"display_name\":\"морковка\",\"parsed_name\":\"морковка\",\"parsing_status\":\"parsed\",\"created_at\":\"2025-09-07T15:23:43.280362+02:00\",\"updated_at\":\"2025-09-07T17:31:56.956978+02:00\"},\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"new_quantity\":null,\"resolved\":false}],\"unique_items\":[{\"standardized_name\":\"филе\",\"category\":\"meat\",\"subcategory\":\"fish\",\"quantity_unit\":\"pieces\",\"confidence_score\":0.8,\"original_item_id\":\"27106794-480e-43da-93c3-b1f8a07dac10\",\"parsed_item_id\":\"3fc20af6-7c8d-4baf-8bb0-28ccc98be7bd\"}]}"}
{"time":"2025-09-07T17:32:39.457846364+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T17:32:43.490895783+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"dup_keep_0_acb1f108","chat_id":508225490}
{"time":"2025-09-07T17:32:43.539650729+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"филе","parsed":"филе","category":"meat","confidence":0.8}
{"time":"2025-09-07T17:32:43.539715662+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution"}
{"time":"2025-09-07T17:32:43.539729195+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T17:32:43.595082161+02:00","level":"ERROR","msg":"Failed to delete duplicate resolution message","env":"local","error":"json: cannot unmarshal bool into Go value of type tgbotapi.Message"}
{"time":"2025-09-07T17:32:57.382240354+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T17:32:57.506644756+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T17:32:57.506680957+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T17:33:03.096160813+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"Курица и морковка","is_command":false}
{"time":"2025-09-07T17:33:03.096979065+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Курица и морковка","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T17:33:03.097148993+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"Курица и морковка","language":"en","prompt_length":8055,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T17:33:03.097238806+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"Курица и морковка","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"Курица и морковка\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: Курица и морковка\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T17:33:06.13134513+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bda5af35f0819595322b3f7ad63a200e5f31c67bcd016d\",\n  \"object\": \"response\",\n  \"created_at\": 1757259183,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bda5afb7ac819591866a4c920a0c250e5f31c67bcd016d\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bda5b10d548195a693fb77769c24730e5f31c67bcd016d\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u041a\\u0443\\u0440\\u0438\\u0446\\u0430\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"chicken\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"carrot\\\",\\n    \\\"quantity_value\\\": null,\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2218,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 439,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 320\n    },\n    \"total_tokens\": 2657\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T17:33:06.131462463+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"Курица и морковка","language":"en","model":"gpt-5-nano","items_count":2,"tokens_used":2657,"reasoning_effort":"low"}
{"time":"2025-09-07T17:33:06.131479981+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"Курица и морковка","language":"en","results_count":2}
{"time":"2025-09-07T17:33:06.131485589+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"Курица","category":"meat","subcategory":"chicken","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T17:33:06.131495612+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":2,"standardized_name":"морковка","category":"produce","subcategory":"carrot","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T17:33:06.136357369+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"27f0a25b-447e-444a-946f-b291ffb430f2","parsed_id":"4164f5f7-6c93-48a5-a834-030063588947"}
{"time":"2025-09-07T17:33:06.136388454+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"Курица","parsed":"Курица","category":"meat","confidence":0.95,"item_index":1,"total_items":2}
{"time":"2025-09-07T17:33:06.137504823+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"cc0bb08a-c24b-43e0-868e-7a10f36891e3","parsed_id":"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8"}
{"time":"2025-09-07T17:33:06.13753945+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95,"item_index":2,"total_items":2}
{"time":"2025-09-07T17:33:06.137551516+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"Курица и морковка","language":"en","total_parsed":2,"successfully_stored":2}
{"time":"2025-09-07T17:33:06.138135642+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution","value":"{\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"duplicates\":[{\"new_item_name\":\"морковка\",\"parsed_name\":\"морковка\",\"existing_item\":{\"id\":\"4539f0bd-00b7-41d4-8ba9-c889e660fb7e\",\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"name\":\"морковка\",\"quantity\":\"0.5 kg\",\"is_completed\":false,\"added_by\":\"0fc9088b-3329-4adb-b764-1a88d79cecfc\",\"completed_by\":null,\"completed_at\":null,\"original_item_id\":\"0acefc59-c725-4080-9ad9-b17ac45ff2b4\",\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"display_name\":\"морковка\",\"parsed_name\":\"морковка\",\"parsing_status\":\"parsed\",\"created_at\":\"2025-09-07T15:23:43.280362+02:00\",\"updated_at\":\"2025-09-07T17:31:56.956978+02:00\"},\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"new_quantity\":null,\"resolved\":false}],\"unique_items\":[{\"standardized_name\":\"Курица\",\"category\":\"meat\",\"subcategory\":\"chicken\",\"quantity_unit\":\"pieces\",\"confidence_score\":0.95,\"original_item_id\":\"27f0a25b-447e-444a-946f-b291ffb430f2\",\"parsed_item_id\":\"4164f5f7-6c93-48a5-a834-030063588947\"}]}"}
{"time":"2025-09-07T17:33:06.209931042+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T17:33:09.008180781+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"dup_replace_0_acb1f108","chat_id":508225490}
{"time":"2025-09-07T17:33:09.010848538+02:00","level":"INFO","msg":"Shopping item updated successfully","env":"local","component":"shopping-service","item_id":"4539f0bd-00b7-41d4-8ba9-c889e660fb7e","updated_by":"0fc9088b-3329-4adb-b764-1a88d79cecfc","name_updated":true,"quantity_updated":false}
{"time":"2025-09-07T17:33:09.121203536+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"Курица","parsed":"Курица","category":"meat","confidence":0.95}
{"time":"2025-09-07T17:33:09.12130432+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution"}
{"time":"2025-09-07T17:33:09.121323829+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T17:33:09.180820419+02:00","level":"ERROR","msg":"Failed to delete duplicate resolution message","env":"local","error":"json: cannot unmarshal bool into Go value of type tgbotapi.Message"}
{"time":"2025-09-07T17:33:30.491096633+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"Курица филе и молоко и капуста","is_command":false}
{"time":"2025-09-07T17:33:35.842615626+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T17:33:35.964123909+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T17:33:35.964164329+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T17:33:40.025116664+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"Курица филе и молоко и капуста","is_command":false}
{"time":"2025-09-07T17:33:40.025472058+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Курица филе и молоко и капуста","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T17:33:40.025554477+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"Курица филе и молоко и капуста","language":"en","prompt_length":8078,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T17:33:40.025590259+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"Курица филе и молоко и капуста","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"Курица филе и молоко и капуста\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: Курица филе и молоко и капуста\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T17:33:43.753901199+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bda5d4237c81909c6da372302a2bd5046655b33baff042\",\n  \"object\": \"response\",\n  \"created_at\": 1757259220,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bda5d4aeb0819083a55cb43667492d046655b33baff042\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bda5d6d6f0819099acc6e304070917046655b33baff042\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u041a\\u0443\\u0440\\u0438\\u0446\\u0430 \\u0444\\u0438\\u043b\\u0435\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"chicken\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u043b\\u043e\\u043a\\u043e\\\",\\n    \\\"category\\\": \\\"dairy\\\",\\n    \\\"subcategory\\\": \\\"milk\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0430\\u043f\\u0443\\u0441\\u0442\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"cabbage\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2228,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 732,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 576\n    },\n    \"total_tokens\": 2960\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T17:33:43.753985404+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"Курица филе и молоко и капуста","language":"en","model":"gpt-5-nano","items_count":3,"tokens_used":2960,"reasoning_effort":"low"}
{"time":"2025-09-07T17:33:43.753997171+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"Курица филе и молоко и капуста","language":"en","results_count":3}
{"time":"2025-09-07T17:33:43.754001995+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"Курица филе","category":"meat","subcategory":"chicken","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T17:33:43.754010666+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":2,"standardized_name":"молоко","category":"dairy","subcategory":"milk","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T17:33:43.754015375+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":3,"standardized_name":"капуста","category":"produce","subcategory":"cabbage","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T17:33:43.759716509+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"a0c51076-ddd0-4d4b-91eb-58959b8558df","parsed_id":"efe011b1-43fa-4a28-af7b-6d742e305ea2"}
{"time":"2025-09-07T17:33:43.759774335+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"Курица филе","parsed":"Курица филе","category":"meat","confidence":0.95,"item_index":1,"total_items":3}
{"time":"2025-09-07T17:33:43.763557072+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"19254fd7-69b4-44dd-b555-1a9ef436d0a7","parsed_id":"8216cd56-15f0-438f-aa2a-839fc3a014a5"}
{"time":"2025-09-07T17:33:43.763597347+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"молоко","parsed":"молоко","category":"dairy","confidence":0.95,"item_index":2,"total_items":3}
{"time":"2025-09-07T17:33:43.76453721+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"18511d63-6e2f-49ca-a960-4725c6561aad","parsed_id":"f878c49c-b776-4ff3-819e-eb507ecc85a7"}
{"time":"2025-09-07T17:33:43.764567836+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"капуста","parsed":"капуста","category":"produce","confidence":0.95,"item_index":3,"total_items":3}
{"time":"2025-09-07T17:33:43.764576958+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"Курица филе и молоко и капуста","language":"en","total_parsed":3,"successfully_stored":3}
{"time":"2025-09-07T17:33:43.765150617+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution","value":"{\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"duplicates\":[{\"new_item_name\":\"капуста\",\"parsed_name\":\"капуста\",\"existing_item\":{\"id\":\"be6b0661-3f4d-4cad-9705-ad66b40dd52f\",\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"name\":\"капуста\",\"quantity\":\"0.5 pieces\",\"is_completed\":false,\"added_by\":\"0fc9088b-3329-4adb-b764-1a88d79cecfc\",\"completed_by\":null,\"completed_at\":null,\"original_item_id\":\"2edb9a68-c971-4649-b34e-4aaeeaa6e38f\",\"parsed_item_id\":\"f878c49c-b776-4ff3-819e-eb507ecc85a7\",\"display_name\":\"капуста\",\"parsed_name\":\"капуста\",\"parsing_status\":\"parsed\",\"created_at\":\"2025-09-07T15:36:17.669813+02:00\",\"updated_at\":\"2025-09-07T15:36:17.669813+02:00\"},\"parsed_item_id\":\"f878c49c-b776-4ff3-819e-eb507ecc85a7\",\"new_quantity\":null,\"resolved\":false}],\"unique_items\":[{\"standardized_name\":\"Курица филе\",\"category\":\"meat\",\"subcategory\":\"chicken\",\"quantity_unit\":\"pieces\",\"confidence_score\":0.95,\"original_item_id\":\"a0c51076-ddd0-4d4b-91eb-58959b8558df\",\"parsed_item_id\":\"efe011b1-43fa-4a28-af7b-6d742e305ea2\"},{\"standardized_name\":\"молоко\",\"category\":\"dairy\",\"subcategory\":\"milk\",\"quantity_unit\":\"pieces\",\"confidence_score\":0.95,\"original_item_id\":\"19254fd7-69b4-44dd-b555-1a9ef436d0a7\",\"parsed_item_id\":\"8216cd56-15f0-438f-aa2a-839fc3a014a5\"}]}"}
{"time":"2025-09-07T17:33:43.830635828+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T17:33:49.059166845+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"dup_replace_0_acb1f108","chat_id":508225490}
{"time":"2025-09-07T17:33:49.061727405+02:00","level":"INFO","msg":"Shopping item updated successfully","env":"local","component":"shopping-service","item_id":"be6b0661-3f4d-4cad-9705-ad66b40dd52f","updated_by":"0fc9088b-3329-4adb-b764-1a88d79cecfc","name_updated":true,"quantity_updated":false}
{"time":"2025-09-07T17:33:49.214384228+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"Курица филе","parsed":"Курица филе","category":"meat","confidence":0.95}
{"time":"2025-09-07T17:33:49.215101181+02:00","level":"INFO","msg":"Successfully added AI-parsed item","env":"local","component":"shopping-service","original":"молоко","parsed":"молоко","category":"dairy","confidence":0.95}
{"time":"2025-09-07T17:33:49.215112296+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution"}
{"time":"2025-09-07T17:33:49.215116644+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T17:33:49.330442516+02:00","level":"ERROR","msg":"Failed to delete duplicate resolution message","env":"local","error":"json: cannot unmarshal bool into Go value of type tgbotapi.Message"}
{"time":"2025-09-07T17:33:57.619306134+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_additem_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
{"time":"2025-09-07T17:33:57.725433557+02:00","level":"INFO","msg":"User entered add item state","env":"local","user_id":508225490,"list_id":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T17:33:57.725563427+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list","value":"acb1f108-6c0d-49b9-87bb-0c69752bdf82"}
{"time":"2025-09-07T17:34:09.710460658+02:00","level":"INFO","msg":"Received message","env":"local","user_id":508225490,"username":"washerd","is_admin":true,"is_authorized":true,"message":"Курица филе и молоко и капуста морковка","is_command":false}
{"time":"2025-09-07T17:34:09.711083569+02:00","level":"INFO","msg":"Starting AI parsing","env":"local","raw_text":"Курица филе и молоко и капуста морковка","language":"en","user_id":"0fc9088b-3329-4adb-b764-1a88d79cecfc"}
{"time":"2025-09-07T17:34:09.711226551+02:00","level":"INFO","msg":"Built multi-item prompt for AI","env":"local","raw_text":"Курица филе и молоко и капуста морковка","language":"en","prompt_length":8095,"prompt_preview":"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\n\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\n[\n  {\n    \"standardized_name\": \"standardized item name in the same language\",\n    \"category\": \"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\",\n    \"subcategory\": \"specific typ..."}
{"time":"2025-09-07T17:34:09.711294975+02:00","level":"INFO","msg":"[MULTI] Sending request to OpenAI Responses API","env":"local","url":"https://api.openai.com/v1/responses","model":"gpt-5-nano","api_key_prefix":"sk-proj-Zq...","raw_text":"Курица филе и молоко и капуста морковка","language":"en","request_body":"{\"model\":\"gpt-5-nano\",\"input\":[{\"role\":\"user\",\"content\":\"You are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and extract multiple items if present. Respond ONLY with valid JSON array.\\n\\nYou are an AI assistant that intelligently separates and standardizes shopping list items. Parse the input text and identify all individual items, even if they are written together.\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array in this exact format:\\n[\\n  {\\n    \\\"standardized_name\\\": \\\"standardized item name in the same language\\\",\\n    \\\"category\\\": \\\"main category (e.g., dairy, meat, vegetables, pantry, beverages, household)\\\",\\n    \\\"subcategory\\\": \\\"specific type (e.g., milk, chicken, carrots)\\\",\\n    \\\"quantity_value\\\": 2.5,\\n    \\\"quantity_unit\\\": \\\"unit (kg, L, pieces, etc.)\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\\n\\nRules:\\n- Intelligently separate items even without commas (e.g., \\\"milk bread eggs\\\" → 3 items)\\n- Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities\\n- CRITICAL: Always preserve the original language in standardized_name (молоко stays молоко, NOT milk)\\n- Categories and subcategories should be in English\\n- CRITICAL: Extract quantities correctly, including decimals with comma separators\\n- \\\"0,5 кг\\\" means 0.5 kilograms - DO NOT split this into \\\"0\\\" and \\\"5 кг\\\"\\n- \\\"1,5 л\\\" means 1.5 liters - keep as one item with quantity_value: 1.5\\n- Convert European decimal commas to dots: \\\"0,5\\\" → quantity_value: 0.5\\n- Separate complex sentences into individual items (e.g., \\\"мочалки для посуды. овощи- 3 огурца\\\" → 2 items)\\n- Handle variations like \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\" (fix typos but keep language)\\n- NEVER translate item names to other languages - keep them exactly as provided\\n- If no quantity is found, omit quantity_value and set quantity_unit to \\\"pieces\\\"\\n- confidence_score should be between 0.0 and 1.0\\n\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\n## Standard Categories and Subcategories:\\n\\n### dairy\\n- milk, yogurt, cheese, butter, cream, cottage_cheese, sour_cream\\n\\n### meat\\n- chicken, beef, pork, lamb, turkey, fish, seafood, sausage, ham\\n\\n### produce  \\n- fruits: apple, banana, orange, berries, grapes\\n- vegetables: carrot, onion, potato, tomato, lettuce, cucumber\\n\\n### pantry\\n- rice, pasta, flour, sugar, salt, oil, vinegar, spices, canned_goods\\n\\n### beverages\\n- water, juice, soda, coffee, tea, alcohol, milk_alternatives\\n\\n### bakery\\n- bread, rolls, bagels, pastry, cake, cookies\\n\\n### household\\n- cleaning_supplies, paper_products, personal_care, laundry\\n\\n### frozen\\n- frozen_vegetables, frozen_meals, ice_cream, frozen_meat\\n\\n### snacks\\n- chips, crackers, nuts, candy, chocolate\\n\\n## Quantity Units:\\nCommon units to recognize and standardize:\\n- Weight: kg, g, lb, oz\\n- Volume: L, ml, cup, pint, gallon\\n- Count: pieces, pack, box, bottle, can, bag\\n- Length: cm, inch (for items like aluminum foil)\\n\\n## English Language Examples:\\n\\n### Basic Items:\\n- \\\"milk\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"bread\\\" → {\\\"standardized_name\\\": \\\"bread\\\", \\\"category\\\": \\\"bakery\\\", \\\"subcategory\\\": \\\"bread\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.95}\\n\\n### With Quantities:\\n- \\\"milk 2L\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"L\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"chicken 1kg\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"kg\\\", \\\"confidence_score\\\": 0.95}\\n- \\\"apples (2 bags)\\\" → {\\\"standardized_name\\\": \\\"apples\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"fruits\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"bags\\\", \\\"confidence_score\\\": 0.95}\\n\\n### Common Typos/Variations:\\n- \\\"coffe\\\" → {\\\"standardized_name\\\": \\\"coffee\\\", \\\"category\\\": \\\"beverages\\\", \\\"subcategory\\\": \\\"coffee\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"tomatoe\\\" → {\\\"standardized_name\\\": \\\"tomato\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.9}\\n- \\\"chiken\\\" → {\\\"standardized_name\\\": \\\"chicken\\\", \\\"category\\\": \\\"meat\\\", \\\"subcategory\\\": \\\"chicken\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.85}\\n\\n### Ambiguous Cases:\\n- \\\"raw\\\" → {\\\"standardized_name\\\": \\\"milk\\\", \\\"category\\\": \\\"dairy\\\", \\\"subcategory\\\": \\\"milk\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.7}\\n- \\\"green\\\" → {\\\"standardized_name\\\": \\\"lettuce\\\", \\\"category\\\": \\\"produce\\\", \\\"subcategory\\\": \\\"vegetables\\\", \\\"quantity_unit\\\": \\\"pieces\\\", \\\"confidence_score\\\": 0.6}\\n\\n## Ambiguous Items and Context-Based Mappings:\\n\\n### High Ambiguity Cases (confidence \\u003c 0.8):\\nThese items require contextual inference and should have lower confidence scores:\\n\\n- \\\"raw\\\" → likely \\\"milk\\\" (dairy context)\\n- \\\"green\\\" → likely \\\"lettuce\\\" or \\\"herbs\\\" (produce context)  \\n- \\\"white\\\" → could be \\\"rice\\\", \\\"bread\\\", \\\"milk\\\" (context dependent)\\n- \\\"red\\\" → likely \\\"tomatoes\\\", \\\"apples\\\", or \\\"meat\\\" (context dependent)\\n- \\\"big\\\" → needs additional context\\n- \\\"small\\\" → needs additional context\\n- \\\"fresh\\\" → modifier, extract the actual item\\n\\n### Common Abbreviations:\\n- \\\"choc\\\" → \\\"chocolate\\\"\\n- \\\"veggies\\\" → \\\"vegetables\\\" \\n- \\\"fruits\\\" → \\\"mixed fruits\\\"\\n- \\\"meat\\\" → \\\"beef\\\" (default assumption)\\n- \\\"fish\\\" → \\\"fish\\\" (seafood category)\\n\\n### Context Clues:\\nWhen items are ambiguous, use these strategies:\\n1. Look for quantity units (2L suggests liquid like milk)\\n2. Consider common shopping patterns\\n3. Use lower confidence scores (0.6-0.8) for ambiguous items\\n4. Default to most common interpretation\\n\\n### Multi-word Items:\\n- \\\"olive oil\\\" → {\\\"standardized_name\\\": \\\"olive oil\\\", \\\"category\\\": \\\"pantry\\\", \\\"subcategory\\\": \\\"oil\\\"}\\n- \\\"ice cream\\\" → {\\\"standardized_name\\\": \\\"ice cream\\\", \\\"category\\\": \\\"frozen\\\", \\\"subcategory\\\": \\\"dessert\\\"}\\n- \\\"toilet paper\\\" → {\\\"standardized_name\\\": \\\"toilet paper\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"paper_products\\\"}\\n- \\\"washing powder\\\" → {\\\"standardized_name\\\": \\\"washing powder\\\", \\\"category\\\": \\\"household\\\", \\\"subcategory\\\": \\\"laundry\\\"}\\n\\n## Multi-Item Parsing Task:\\nInput: \\\"Курица филе и молоко и капуста морковка\\\"\\nLanguage: en\\n\\nIntelligently separate the input into individual items and respond ONLY with a JSON array. Consider:\\n1. Split items even without clear separators (e.g., \\\"milk bread eggs\\\" → 3 items)\\n2. Handle complex formats like \\\"2 apples and 3 oranges\\\" → 2 items with quantities  \\n3. Preserve original language in standardized_name\\n4. Categories and subcategories should be in English\\n5. Extract individual quantities correctly per item\\n6. Handle variations and typos (e.g., \\\"картошечка\\\" → \\\"картошка\\\", \\\"coffe\\\" → \\\"coffee\\\")\\n7. Use appropriate confidence scores based on ambiguity level\\n\\nCRITICAL DECIMAL PARSING EXAMPLES:\\n❌ WRONG: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]\\n✅ CORRECT: \\\"морковка 0,5 кг\\\" → [{\\\"standardized_name\\\": \\\"морковка\\\", \\\"quantity_value\\\": 0.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\n❌ WRONG: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\"}, {\\\"standardized_name\\\": \\\"5 кг\\\"}]  \\n✅ CORRECT: \\\"мука 1,5 кг\\\" → [{\\\"standardized_name\\\": \\\"мука\\\", \\\"quantity_value\\\": 1.5, \\\"quantity_unit\\\": \\\"kg\\\"}]\\n\\nOther correct examples:\\n- Input: \\\"молоко, сыр, багет\\\" → [{\\\"standardized_name\\\": \\\"молоко\\\"}, {\\\"standardized_name\\\": \\\"сыр\\\"}, {\\\"standardized_name\\\": \\\"багет\\\"}]\\n- Input: \\\"мочалки для посуды. овощи- 3 огурца\\\" → [{\\\"standardized_name\\\": \\\"мочалки для посуды\\\"}, {\\\"standardized_name\\\": \\\"огурцы\\\", \\\"quantity_value\\\": 3.0, \\\"quantity_unit\\\": \\\"pieces\\\"}]\\n- Input: \\\"хлеб 2 батона и молоко 1л\\\" → [{\\\"standardized_name\\\": \\\"хлеб\\\", \\\"quantity_value\\\": 2.0, \\\"quantity_unit\\\": \\\"pieces\\\"}, {\\\"standardized_name\\\": \\\"молоко\\\", \\\"quantity_value\\\": 1.0, \\\"quantity_unit\\\": \\\"L\\\"}]\\n\\nResponse format: JSON array of items, each with the structure specified above.\\nRemember to respond ONLY with the JSON array - no additional text or formatting.\\n\\nInput: Курица филе и молоко и капуста морковка\\nLanguage: en\"}],\"store\":true,\"reasoning\":{\"effort\":\"low\"}}"}
{"time":"2025-09-07T17:34:14.384263447+02:00","level":"INFO","msg":"[MULTI] Received response from OpenAI Responses API","env":"local","status_code":200,"response_body":"{\n  \"id\": \"resp_68bda5f218a48194825970c2a1dd828400b0b5c45ab3a011\",\n  \"object\": \"response\",\n  \"created_at\": 1757259250,\n  \"status\": \"completed\",\n  \"background\": false,\n  \"error\": null,\n  \"incomplete_details\": null,\n  \"instructions\": null,\n  \"max_output_tokens\": null,\n  \"max_tool_calls\": null,\n  \"model\": \"gpt-5-nano-2025-08-07\",\n  \"output\": [\n    {\n      \"id\": \"rs_68bda5f2aa348194b410cf67402f064e00b0b5c45ab3a011\",\n      \"type\": \"reasoning\",\n      \"summary\": []\n    },\n    {\n      \"id\": \"msg_68bda5f4f80081948e7b253031ea6eba00b0b5c45ab3a011\",\n      \"type\": \"message\",\n      \"status\": \"completed\",\n      \"content\": [\n        {\n          \"type\": \"output_text\",\n          \"annotations\": [],\n          \"logprobs\": [],\n          \"text\": \"[\\n  {\\n    \\\"standardized_name\\\": \\\"\\u041a\\u0443\\u0440\\u0438\\u0446\\u0430 \\u0444\\u0438\\u043b\\u0435\\\",\\n    \\\"category\\\": \\\"meat\\\",\\n    \\\"subcategory\\\": \\\"chicken\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u043b\\u043e\\u043a\\u043e\\\",\\n    \\\"category\\\": \\\"dairy\\\",\\n    \\\"subcategory\\\": \\\"milk\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043a\\u0430\\u043f\\u0443\\u0441\\u0442\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  },\\n  {\\n    \\\"standardized_name\\\": \\\"\\u043c\\u043e\\u0440\\u043a\\u043e\\u0432\\u043a\\u0430\\\",\\n    \\\"category\\\": \\\"produce\\\",\\n    \\\"subcategory\\\": \\\"vegetables\\\",\\n    \\\"quantity_unit\\\": \\\"pieces\\\",\\n    \\\"confidence_score\\\": 0.95\\n  }\\n]\"\n        }\n      ],\n      \"role\": \"assistant\"\n    }\n  ],\n  \"parallel_tool_calls\": true,\n  \"previous_response_id\": null,\n  \"prompt_cache_key\": null,\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": null\n  },\n  \"safety_identifier\": null,\n  \"service_tier\": \"default\",\n  \"store\": true,\n  \"temperature\": 1.0,\n  \"text\": {\n    \"format\": {\n      \"type\": \"text\"\n    },\n    \"verbosity\": \"medium\"\n  },\n  \"tool_choice\": \"auto\",\n  \"tools\": [],\n  \"top_logprobs\": 0,\n  \"top_p\": 1.0,\n  \"truncation\": \"disabled\",\n  \"usage\": {\n    \"input_tokens\": 2234,\n    \"input_tokens_details\": {\n      \"cached_tokens\": 0\n    },\n    \"output_tokens\": 779,\n    \"output_tokens_details\": {\n      \"reasoning_tokens\": 576\n    },\n    \"total_tokens\": 3013\n  },\n  \"user\": null,\n  \"metadata\": {}\n}"}
{"time":"2025-09-07T17:34:14.38439288+02:00","level":"INFO","msg":"Successfully parsed multiple items with Responses API","env":"local","raw_text":"Курица филе и молоко и капуста морковка","language":"en","model":"gpt-5-nano","items_count":4,"tokens_used":3013,"reasoning_effort":"low"}
{"time":"2025-09-07T17:34:14.384409523+02:00","level":"INFO","msg":"AI parsing completed","env":"local","raw_input":"Курица филе и молоко и капуста морковка","language":"en","results_count":4}
{"time":"2025-09-07T17:34:14.384417657+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":1,"standardized_name":"Курица филе","category":"meat","subcategory":"chicken","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T17:34:14.384434381+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":2,"standardized_name":"молоко","category":"dairy","subcategory":"milk","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T17:34:14.384452966+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":3,"standardized_name":"капуста","category":"produce","subcategory":"vegetables","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T17:34:14.384464888+02:00","level":"INFO","msg":"AI parsed item","env":"local","index":4,"standardized_name":"морковка","category":"produce","subcategory":"vegetables","quantity_value":null,"quantity_unit":"pieces","confidence_score":0.95}
{"time":"2025-09-07T17:34:14.386872007+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"2ec9b120-b4ac-43eb-9a5c-a00cb4e72e81","parsed_id":"efe011b1-43fa-4a28-af7b-6d742e305ea2"}
{"time":"2025-09-07T17:34:14.386894043+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"Курица филе","parsed":"Курица филе","category":"meat","confidence":0.95,"item_index":1,"total_items":4}
{"time":"2025-09-07T17:34:14.387755944+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"02581161-112e-4a7c-a7d8-c4d4fc4bb348","parsed_id":"8216cd56-15f0-438f-aa2a-839fc3a014a5"}
{"time":"2025-09-07T17:34:14.387775495+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"молоко","parsed":"молоко","category":"dairy","confidence":0.95,"item_index":2,"total_items":4}
{"time":"2025-09-07T17:34:14.388712605+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"b6c2addc-66c6-4fcb-9ae4-1039c328bb93","parsed_id":"f878c49c-b776-4ff3-819e-eb507ecc85a7"}
{"time":"2025-09-07T17:34:14.388748561+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"капуста","parsed":"капуста","category":"produce","confidence":0.95,"item_index":3,"total_items":4}
{"time":"2025-09-07T17:34:14.389809284+02:00","level":"ERROR","msg":"Failed to store item mapping","env":"local","error":"failed to store item mapping: ERROR: there is no unique or exclusion constraint matching the ON CONFLICT specification (SQLSTATE 42P10)","original_id":"fdd7e07f-810b-4f8b-a1aa-0533aa378eaf","parsed_id":"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8"}
{"time":"2025-09-07T17:34:14.389866539+02:00","level":"INFO","msg":"Successfully stored training data for item","env":"local","original":"морковка","parsed":"морковка","category":"produce","confidence":0.95,"item_index":4,"total_items":4}
{"time":"2025-09-07T17:34:14.389890461+02:00","level":"INFO","msg":"Successfully parsed and stored items with AI","env":"local","raw_input":"Курица филе и молоко и капуста морковка","language":"en","total_parsed":4,"successfully_stored":4}
{"time":"2025-09-07T17:34:14.391029371+02:00","level":"INFO","msg":"Setting user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution","value":"{\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"duplicates\":[{\"new_item_name\":\"Курица филе\",\"parsed_name\":\"Курица филе\",\"existing_item\":{\"id\":\"dfe37bfa-44d1-4c93-913f-9fd261a8373d\",\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"name\":\"Курица филе\",\"quantity\":null,\"is_completed\":false,\"added_by\":\"0fc9088b-3329-4adb-b764-1a88d79cecfc\",\"completed_by\":null,\"completed_at\":null,\"original_item_id\":\"a0c51076-ddd0-4d4b-91eb-58959b8558df\",\"parsed_item_id\":\"efe011b1-43fa-4a28-af7b-6d742e305ea2\",\"display_name\":\"Курица филе\",\"parsed_name\":\"Курица филе\",\"parsing_status\":\"parsed\",\"created_at\":\"2025-09-07T17:33:49.213083+02:00\",\"updated_at\":\"2025-09-07T17:33:49.213083+02:00\"},\"parsed_item_id\":\"efe011b1-43fa-4a28-af7b-6d742e305ea2\",\"new_quantity\":null,\"resolved\":false},{\"new_item_name\":\"молоко\",\"parsed_name\":\"молоко\",\"existing_item\":{\"id\":\"28dc4f2d-1f27-4c2a-ae86-5c498b0038d0\",\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"name\":\"молоко\",\"quantity\":null,\"is_completed\":false,\"added_by\":\"0fc9088b-3329-4adb-b764-1a88d79cecfc\",\"completed_by\":null,\"completed_at\":null,\"original_item_id\":\"19254fd7-69b4-44dd-b555-1a9ef436d0a7\",\"parsed_item_id\":\"8216cd56-15f0-438f-aa2a-839fc3a014a5\",\"display_name\":\"молоко\",\"parsed_name\":\"молоко\",\"parsing_status\":\"parsed\",\"created_at\":\"2025-09-07T17:33:49.214448+02:00\",\"updated_at\":\"2025-09-07T17:33:49.214448+02:00\"},\"parsed_item_id\":\"8216cd56-15f0-438f-aa2a-839fc3a014a5\",\"new_quantity\":null,\"resolved\":false},{\"new_item_name\":\"капуста\",\"parsed_name\":\"капуста\",\"existing_item\":{\"id\":\"be6b0661-3f4d-4cad-9705-ad66b40dd52f\",\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"name\":\"капуста\",\"quantity\":\"0.5 pieces\",\"is_completed\":false,\"added_by\":\"0fc9088b-3329-4adb-b764-1a88d79cecfc\",\"completed_by\":null,\"completed_at\":null,\"original_item_id\":\"2edb9a68-c971-4649-b34e-4aaeeaa6e38f\",\"parsed_item_id\":\"f878c49c-b776-4ff3-819e-eb507ecc85a7\",\"display_name\":\"капуста\",\"parsed_name\":\"капуста\",\"parsing_status\":\"parsed\",\"created_at\":\"2025-09-07T15:36:17.669813+02:00\",\"updated_at\":\"2025-09-07T17:33:49.059253+02:00\"},\"parsed_item_id\":\"f878c49c-b776-4ff3-819e-eb507ecc85a7\",\"new_quantity\":null,\"resolved\":false},{\"new_item_name\":\"морковка\",\"parsed_name\":\"морковка\",\"existing_item\":{\"id\":\"4539f0bd-00b7-41d4-8ba9-c889e660fb7e\",\"list_id\":\"acb1f108-6c0d-49b9-87bb-0c69752bdf82\",\"name\":\"морковка\",\"quantity\":\"0.5 kg\",\"is_completed\":false,\"added_by\":\"0fc9088b-3329-4adb-b764-1a88d79cecfc\",\"completed_by\":null,\"completed_at\":null,\"original_item_id\":\"0acefc59-c725-4080-9ad9-b17ac45ff2b4\",\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"display_name\":\"морковка\",\"parsed_name\":\"морковка\",\"parsing_status\":\"parsed\",\"created_at\":\"2025-09-07T15:23:43.280362+02:00\",\"updated_at\":\"2025-09-07T17:33:09.008292+02:00\"},\"parsed_item_id\":\"6eca9ff7-08b6-4cdc-8565-a5a91ad02eb8\",\"new_quantity\":null,\"resolved\":false}],\"unique_items\":null}"}
{"time":"2025-09-07T17:34:14.57770605+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T17:34:45.038840918+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"dup_cancel_acb1f108","chat_id":508225490}
{"time":"2025-09-07T17:34:45.089515161+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"duplicate_resolution"}
{"time":"2025-09-07T17:34:45.089557169+02:00","level":"INFO","msg":"Clearing user state","env":"local","telegram_id":508225490,"state":"adding_item_to_list"}
{"time":"2025-09-07T17:34:46.803684162+02:00","level":"INFO","msg":"Received callback query","env":"local","user_id":508225490,"is_admin":true,"is_authorized":true,"data":"list_view_acb1f108-6c0d-49b9-87bb-0c69752bdf82","chat_id":508225490}
